---
name: Test docs

on:
  - push
  - pull_request

jobs:

  setup:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Re-use NPM cache
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Pull container base image
        run: |
          docker-compose \
            -f docker-compose-ci.yml \
            pull
      - name: Re-use container image layers
        uses: satackey/action-docker-layer-caching@v0.0.11
        continue-on-error: true
      - name: Build container image
        run: |
          docker-compose \
            -f docker-compose-ci.yml \
            build \
            --build-arg USER_ID="$(id -u)" \
            --build-arg GROUP_ID="$(id -g)"
      - name: Install toolchain
        run: |
          docker-compose \
            -f docker-compose-ci.yml \
            run docs \
            npm install

  test:
    name: Test
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Run tests
        run: |
          docker-compose \
            -f docker-compose-ci.yml \
            run docs \
            npm test

  build:
    name: Build
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Build docs
        run: |
          docker-compose \
            -f docker-compose-ci.yml \
            run docs \
            npm run docs:build

  publish:
    name: Publish
    needs: build
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Copy files
        uses: appleboy/scp-action@v0.1.1
        with:
          host: ${{ secrets.HOST }}
          fingerprint: ${{ secrets.FINGERPRINT }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          passphrase: ${{ secrets.SSH_PRIVATE_KEY_PASSPHRASE }}
          port: ${{ secrets.PORT }}
          source: "site/*"
          target: ${{ secrets.PATH }}
