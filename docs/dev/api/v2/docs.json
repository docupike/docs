{
    "openapi": "3.0.0",
    "info": {
        "title": "docupike API",
        "contact": {
            "email": "help@docupike.com"
        },
        "version": "v2"
    },
    "servers": [
        {
            "url": ""
        }
    ],
    "paths": {
        "/api/v2/batch": {
            "post": {
                "tags": [
                    "Kernel"
                ],
                "summary": "Kernel",
                "description": "Batch controller",
                "operationId": "ccc6e973119425047961683f31ea798c",
                "parameters": [
                    {
                        "name": "routeName",
                        "in": "query",
                        "description": "Route to call",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Pairs of object ID's in store and routes to fetch",
                    "content": {
                        "application/json": {
                            "schema": {
                                "items": {
                                    "type": "string"
                                },
                                "example": "{-1317590951: '/api/v2/user/current', -1317590792: '/api/v2/user/current'}"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Key-values with the responses of sub requests"
                    }
                }
            }
        },
        "/api/v1/finder": {
            "get": {
                "tags": [
                    "Finder"
                ],
                "summary": "Find from sources",
                "description": "Find from sources",
                "operationId": "2a1fb87b5840dd4318683714442b7a70",
                "parameters": [
                    {
                        "name": "sources",
                        "in": "query",
                        "description": "Comma separated list of sources",
                        "required": true,
                        "style": "form",
                        "explode": false,
                        "allowReserved": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "recent"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Results from finder sources"
                    },
                    "400": {
                        "description": "Request was malformed"
                    },
                    "401": {
                        "description": "Not authorized for find results from given sources"
                    },
                    "403": {
                        "description": "Find results from given sources is forbidden"
                    }
                }
            }
        },
        "/api/v2/login": {
            "post": {
                "tags": [
                    "Security"
                ],
                "summary": "Login",
                "description": "Login",
                "operationId": "8c1be9369fd421124e67ea7b6f8058cb",
                "requestBody": {
                    "description": "Log in into docupike",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "username": {
                                        "title": "Username",
                                        "description": "User login",
                                        "type": "string"
                                    },
                                    "password": {
                                        "title": "Password",
                                        "description": "User password",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User data"
                    }
                }
            }
        },
        "/api/v2/logout": {
            "post": {
                "tags": [
                    "Security"
                ],
                "summary": "Logout",
                "description": "Logout",
                "operationId": "d1757656fb313e4bc08191ce27135f84",
                "responses": {
                    "200": {
                        "description": "Logged out"
                    }
                }
            }
        },
        "/api/v2/translation": {
            "get": {
                "tags": [
                    "Translation"
                ],
                "summary": "Get translations",
                "description": "Get translations",
                "operationId": "aeceafbeaea3c4c1053302762d54c14d",
                "responses": {
                    "200": {
                        "description": "All available translations for configured locale."
                    },
                    "204": {
                        "description": "No translations found"
                    }
                }
            }
        },
        "/api/v2/translation/{key}": {
            "get": {
                "tags": [
                    "Translation"
                ],
                "summary": "Get Translation",
                "description": "Get Translation",
                "operationId": "9356814a152c1c5ac8b378657a56740f",
                "parameters": [
                    {
                        "name": "key",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Translation by key."
                    },
                    "404": {
                        "description": "Translation not found"
                    }
                }
            }
        },
        "/api/v2/user-group": {
            "get": {
                "tags": [
                    "UserGroup"
                ],
                "summary": "UserGroup Query Find",
                "description": "",
                "operationId": "GET: /api/v2/user-group",
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "description": "",
                            "type": "integer"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "description": "",
                            "type": "integer"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "$ref": "#/components/schemas/idoit.Bundles.CqrsBundle.Domain.Event.Criteria.Criteria"
                        }
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "description": "",
                            "type": "string"
                        }
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "description": "",
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "needsTotal",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "description": "",
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.AdvancedSecurityBundle.Projection.UserGroup.Query.ArrayResult"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.ApiBundle.Exception.MalformedRequestException"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "UserGroup"
                ],
                "summary": "UserGroup Command Create",
                "description": "",
                "operationId": "POST: /api/v2/user-group",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "id": {
                                        "description": "Id of entry",
                                        "type": "string"
                                    },
                                    "name": {
                                        "description": "",
                                        "type": "string"
                                    },
                                    "description": {
                                        "description": "",
                                        "type": "string"
                                    },
                                    "roles": {
                                        "description": "",
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.ApiBundle.Exception.MalformedRequestException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/user-group/{id}": {
            "get": {
                "tags": [
                    "UserGroup"
                ],
                "summary": "UserGroup Query FindOne",
                "description": "",
                "operationId": "GET: /api/v2/user-group/{id}",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of entry",
                        "required": true,
                        "schema": {
                            "description": "Id of entry",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.App.Entity.UserGroup"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.ApiBundle.Exception.MalformedRequestException"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "UserGroup"
                ],
                "summary": "UserGroup Command Update",
                "description": "",
                "operationId": "PUT: /api/v2/user-group/{id}",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of entry",
                        "required": true,
                        "schema": {
                            "description": "Id of entry",
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "description": "",
                                        "type": "string"
                                    },
                                    "description": {
                                        "description": "",
                                        "type": "string"
                                    },
                                    "roles": {
                                        "description": "",
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.ApiBundle.Exception.MalformedRequestException"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "UserGroup"
                ],
                "summary": "UserGroup Command Purge",
                "description": "",
                "operationId": "DELETE: /api/v2/user-group/{id}",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of entry",
                        "required": true,
                        "schema": {
                            "description": "Id of entry",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.ApiBundle.Exception.MalformedRequestException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/permission": {
            "post": {
                "tags": [
                    "Permission"
                ],
                "summary": "Permission Command Create",
                "description": "",
                "operationId": "POST: /api/v2/permission",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "id": {
                                        "description": "Id of entry",
                                        "type": "string"
                                    },
                                    "user": {
                                        "description": "",
                                        "type": "string"
                                    },
                                    "role": {
                                        "description": "",
                                        "type": "string"
                                    },
                                    "group": {
                                        "description": "",
                                        "type": "string"
                                    },
                                    "operations": {
                                        "description": "",
                                        "type": "integer"
                                    },
                                    "parameters": {
                                        "description": "",
                                        "type": "array",
                                        "items": {
                                            "type": "object"
                                        }
                                    },
                                    "scope": {
                                        "description": "",
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.ApiBundle.Exception.MalformedRequestException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/permission/{id}": {
            "delete": {
                "tags": [
                    "Permission"
                ],
                "summary": "Permission Command Purge",
                "description": "",
                "operationId": "DELETE: /api/v2/permission/{id}",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of entry",
                        "required": true,
                        "schema": {
                            "description": "Id of entry",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.ApiBundle.Exception.MalformedRequestException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/right": {
            "post": {
                "tags": [
                    "Right"
                ],
                "summary": "Right Command Create",
                "description": "",
                "operationId": "POST: /api/v2/right",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "id": {
                                        "description": "Id of entry",
                                        "type": "string"
                                    },
                                    "topic": {
                                        "description": "",
                                        "type": "string"
                                    },
                                    "method": {
                                        "description": "",
                                        "type": "string"
                                    },
                                    "right": {
                                        "description": "",
                                        "type": "string"
                                    },
                                    "user": {
                                        "description": "",
                                        "type": "string"
                                    },
                                    "role": {
                                        "description": "",
                                        "type": "string"
                                    },
                                    "group": {
                                        "description": "",
                                        "type": "string"
                                    },
                                    "operations": {
                                        "description": "",
                                        "type": "integer"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.ApiBundle.Exception.MalformedRequestException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/right/{id}": {
            "get": {
                "tags": [
                    "Right"
                ],
                "summary": "Right Query FindOne",
                "description": "",
                "operationId": "GET: /api/v2/right/{id}",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of entry",
                        "required": true,
                        "schema": {
                            "description": "Id of entry",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.AdvancedSecurityBundle.Rights.Configured.Entity.ConfiguredRight"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.ApiBundle.Exception.MalformedRequestException"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Right"
                ],
                "summary": "Right Command Purge",
                "description": "",
                "operationId": "DELETE: /api/v2/right/{id}",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of entry",
                        "required": true,
                        "schema": {
                            "description": "Id of entry",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.ApiBundle.Exception.MalformedRequestException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/token/{id}": {
            "get": {
                "tags": [
                    "ApiToken"
                ],
                "summary": "ApiToken Query FindOne",
                "description": "",
                "operationId": "GET: /api/v2/token/{id}",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of entry",
                        "required": true,
                        "schema": {
                            "description": "Id of entry",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.ApiBundle.Entity.ApiToken"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.ApiBundle.Exception.MalformedRequestException"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "ApiToken"
                ],
                "summary": "ApiToken Command Update",
                "description": "",
                "operationId": "PUT: /api/v2/token/{id}",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of entry",
                        "required": true,
                        "schema": {
                            "description": "Id of entry",
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "description": "",
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.ApiBundle.Exception.MalformedRequestException"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "ApiToken"
                ],
                "summary": "ApiToken Command Purge",
                "description": "",
                "operationId": "DELETE: /api/v2/token/{id}",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of entry",
                        "required": true,
                        "schema": {
                            "description": "Id of entry",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.ApiBundle.Exception.MalformedRequestException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/permission/schema": {
            "get": {
                "tags": [
                    "Permission"
                ],
                "summary": "Permission Query FindDefinition",
                "description": "",
                "operationId": "GET: /api/v2/permission/schema",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.CqrsIntegrationBundle.Projection.User.Query.ArrayResult"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.ApiBundle.Exception.MalformedRequestException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/permission/acl": {
            "get": {
                "tags": [
                    "Permission"
                ],
                "summary": "Permission Query GetAclList",
                "description": "",
                "operationId": "GET: /api/v2/permission/acl",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.AdvancedSecurityBundle.Projection.Permission.Query.AclArrayResult"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.ApiBundle.Exception.MalformedRequestException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/permission/scopeOption/{parameter}": {
            "get": {
                "tags": [
                    "Permission"
                ],
                "summary": "Permission Query FindOptions",
                "description": "",
                "operationId": "GET: /api/v2/permission/scopeOption/{parameter}",
                "parameters": [
                    {
                        "name": "parameter",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "description": "",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.CqrsIntegrationBundle.Projection.User.Query.ArrayResult"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.ApiBundle.Exception.MalformedRequestException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/permission/": {
            "get": {
                "tags": [
                    "Permission"
                ],
                "summary": "Permission Query Find",
                "description": "",
                "operationId": "GET: /api/v2/permission/",
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "description": "",
                            "type": "integer"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "description": "",
                            "type": "integer"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "$ref": "#/components/schemas/idoit.Bundles.CqrsBundle.Domain.Event.Criteria.Criteria"
                        }
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "description": "",
                            "type": "string"
                        }
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "description": "",
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "needsTotal",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "description": "",
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.AdvancedSecurityBundle.Projection.Permission.Query.ArrayResult"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.ApiBundle.Exception.MalformedRequestException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/right/topics": {
            "get": {
                "tags": [
                    "Right"
                ],
                "summary": "Right Query FindDefinition",
                "description": "",
                "operationId": "GET: /api/v2/right/topics",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.AdvancedSecurityBundle.Rights.Definitions.DefinitionCollection"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.ApiBundle.Exception.MalformedRequestException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/right/current": {
            "get": {
                "tags": [
                    "Right"
                ],
                "summary": "Right Query GetMyRights",
                "description": "",
                "operationId": "GET: /api/v2/right/current",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.AdvancedSecurityBundle.Projection.Right.Query.ArrayResult"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.ApiBundle.Exception.MalformedRequestException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/right/": {
            "get": {
                "tags": [
                    "Right"
                ],
                "summary": "Right Query Find",
                "description": "",
                "operationId": "GET: /api/v2/right/",
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "description": "",
                            "type": "integer"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "description": "",
                            "type": "integer"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "$ref": "#/components/schemas/idoit.Bundles.CqrsBundle.Domain.Event.Criteria.Criteria"
                        }
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "description": "",
                            "type": "string"
                        }
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "description": "",
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "needsTotal",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "description": "",
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.AdvancedSecurityBundle.Projection.Right.Query.ArrayResult"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.ApiBundle.Exception.MalformedRequestException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/token": {
            "get": {
                "tags": [
                    "ApiToken"
                ],
                "summary": "ApiToken Query FindUserByToken",
                "description": "",
                "operationId": "GET: /api/v2/token",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "description": "",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.App.Entity.User"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.ApiBundle.Exception.MalformedRequestException"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "ApiToken"
                ],
                "summary": "ApiToken Command Create",
                "description": "",
                "operationId": "POST: /api/v2/token",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "id": {
                                        "description": "Id of entry",
                                        "type": "string"
                                    },
                                    "userId": {
                                        "description": "",
                                        "type": "string"
                                    },
                                    "title": {
                                        "description": "",
                                        "type": "string"
                                    },
                                    "token": {
                                        "description": "",
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.ApiBundle.Exception.MalformedRequestException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/export": {
            "get": {
                "tags": [
                    "Export"
                ],
                "summary": "Export Query Find",
                "description": "",
                "operationId": "GET: /api/v2/export",
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "description": "",
                            "type": "integer"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "description": "",
                            "type": "integer"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "$ref": "#/components/schemas/idoit.Bundles.CqrsBundle.Domain.Event.Criteria.Criteria"
                        }
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "description": "",
                            "type": "string"
                        }
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "description": "",
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "needsTotal",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "description": "",
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.ExportBundle.Projection.Export.Query.ArrayResult"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.ApiBundle.Exception.MalformedRequestException"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Export"
                ],
                "summary": "Export Command Create",
                "description": "",
                "operationId": "POST: /api/v2/export",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "id": {
                                        "description": "Id of entry",
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.ApiBundle.Exception.MalformedRequestException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/export/{id}": {
            "get": {
                "tags": [
                    "Export"
                ],
                "summary": "Export Query FindOne",
                "description": "",
                "operationId": "GET: /api/v2/export/{id}",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of entry",
                        "required": true,
                        "schema": {
                            "description": "Id of entry",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.ExportBundle.Entity.Export"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.ApiBundle.Exception.MalformedRequestException"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Export"
                ],
                "summary": "Export Command Purge",
                "description": "",
                "operationId": "DELETE: /api/v2/export/{id}",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of entry",
                        "required": true,
                        "schema": {
                            "description": "Id of entry",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.ApiBundle.Exception.MalformedRequestException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/file": {
            "get": {
                "tags": [
                    "File"
                ],
                "summary": "File Query Find",
                "description": "## Find files\n\nEndpoint to retrieve different files e.g. logs or images referenced in documentum.\n",
                "operationId": "GET: /api/v2/file",
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "description": "",
                            "type": "integer"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "description": "",
                            "type": "integer"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "$ref": "#/components/schemas/idoit.Bundles.CqrsBundle.Domain.Event.Criteria.Criteria"
                        }
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "description": "",
                            "type": "string"
                        }
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "description": "",
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "needsTotal",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "description": "",
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.FileBundle.Projection.File.Query.ArrayResult"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.ApiBundle.Exception.MalformedRequestException"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "File"
                ],
                "summary": "File Command Create",
                "description": "Create new file entity",
                "operationId": "POST: /api/v2/file",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "id": {
                                        "description": "Id of entry",
                                        "type": "string"
                                    },
                                    "title": {
                                        "description": "Title of file",
                                        "type": "string"
                                    },
                                    "location": {
                                        "description": "",
                                        "type": "string"
                                    },
                                    "format": {
                                        "description": "",
                                        "type": "string"
                                    },
                                    "ttl": {
                                        "description": "Milliseconds",
                                        "type": "integer"
                                    },
                                    "shouldEncrypt": {
                                        "description": "",
                                        "type": "boolean"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.ApiBundle.Exception.MalformedRequestException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/file/{id}": {
            "get": {
                "tags": [
                    "File"
                ],
                "summary": "File Query FindOne",
                "description": "Find one single file by its id",
                "operationId": "GET: /api/v2/file/{id}",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of entry",
                        "required": true,
                        "schema": {
                            "description": "Id of entry",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.FileBundle.Entity.File"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.ApiBundle.Exception.MalformedRequestException"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "File"
                ],
                "summary": "File Command Rename",
                "description": "",
                "operationId": "PUT: /api/v2/file/{id}",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of entry",
                        "required": true,
                        "schema": {
                            "description": "Id of entry",
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "description": "",
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.ApiBundle.Exception.MalformedRequestException"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "File"
                ],
                "summary": "File Command Purge",
                "description": "",
                "operationId": "DELETE: /api/v2/file/{id}",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of entry",
                        "required": true,
                        "schema": {
                            "description": "Id of entry",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.ApiBundle.Exception.MalformedRequestException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/file/{id}/content": {
            "get": {
                "tags": [
                    "File"
                ],
                "summary": "File Query FindOne",
                "description": "Find one single file by its id",
                "operationId": "GET: /api/v2/file/{id}/content",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of entry",
                        "required": true,
                        "schema": {
                            "description": "Id of entry",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.FileBundle.Entity.File"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.ApiBundle.Exception.MalformedRequestException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/import": {
            "get": {
                "tags": [
                    "Import"
                ],
                "summary": "Import Query Find",
                "description": "",
                "operationId": "GET: /api/v2/import",
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "description": "",
                            "type": "integer"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "description": "",
                            "type": "integer"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "$ref": "#/components/schemas/idoit.Bundles.CqrsBundle.Domain.Event.Criteria.Criteria"
                        }
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "description": "",
                            "type": "string"
                        }
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "description": "",
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "needsTotal",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "description": "",
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.ImportBundle.Projection.Import.Query.ArrayResult"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.ApiBundle.Exception.MalformedRequestException"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Import"
                ],
                "summary": "Import Command Start",
                "description": "",
                "operationId": "POST: /api/v2/import",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "id": {
                                        "description": "Id of entry",
                                        "type": "string"
                                    },
                                    "source": {
                                        "$ref": "#/components/schemas/idoit.Bundles.ImportBundle.Source.Source"
                                    },
                                    "matching": {
                                        "$ref": "#/components/schemas/idoit.Bundles.ImportBundle.Matching.Matching"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.ApiBundle.Exception.MalformedRequestException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/import/preview": {
            "get": {
                "tags": [
                    "Import"
                ],
                "summary": "Import Query GetPreview",
                "description": "",
                "operationId": "GET: /api/v2/import/preview",
                "parameters": [
                    {
                        "name": "import",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "$ref": "#/components/schemas/idoit.Bundles.ImportBundle.Domain.Import.Import"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "description": "",
                            "type": "integer"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "description": "",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.ImportBundle.Projection.Import.Query.DataArrayResult"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.ApiBundle.Exception.MalformedRequestException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/import/{id}": {
            "get": {
                "tags": [
                    "Import"
                ],
                "summary": "Import Query FindOne",
                "description": "",
                "operationId": "GET: /api/v2/import/{id}",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of entry",
                        "required": true,
                        "schema": {
                            "description": "Id of entry",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.ImportBundle.Entity.Import"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.ApiBundle.Exception.MalformedRequestException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/report": {
            "get": {
                "tags": [
                    "Report"
                ],
                "summary": "Report Query Find",
                "description": "",
                "operationId": "GET: /api/v2/report",
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "description": "",
                            "type": "integer"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "description": "",
                            "type": "integer"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "$ref": "#/components/schemas/idoit.Bundles.CqrsBundle.Domain.Event.Criteria.Criteria"
                        }
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "description": "",
                            "type": "string"
                        }
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "description": "",
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "needsTotal",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "description": "",
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.ReportBundle.Projection.Report.Query.ArrayResult"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.ApiBundle.Exception.MalformedRequestException"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Report"
                ],
                "summary": "Report Command Create",
                "description": "",
                "operationId": "POST: /api/v2/report",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "eventType": {
                                        "description": "",
                                        "type": "string"
                                    },
                                    "eventId": {
                                        "description": "",
                                        "type": "string"
                                    },
                                    "time": {
                                        "description": "",
                                        "type": "string",
                                        "format": "date-time"
                                    },
                                    "meta": {
                                        "description": "",
                                        "type": "array",
                                        "items": {
                                            "type": "object"
                                        }
                                    },
                                    "id": {
                                        "description": "",
                                        "type": "string"
                                    },
                                    "title": {
                                        "description": "",
                                        "type": "string"
                                    },
                                    "folder": {
                                        "description": "",
                                        "type": "string"
                                    },
                                    "description": {
                                        "description": "",
                                        "type": "string"
                                    },
                                    "selects": {
                                        "description": "",
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/idoit.Bundles.ReportBundle.Data.Select"
                                        }
                                    },
                                    "filters": {
                                        "$ref": "#/components/schemas/idoit.Bundles.CqrsBundle.Domain.Event.Criteria.Criteria"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.ApiBundle.Exception.MalformedRequestException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/report/{id}": {
            "get": {
                "tags": [
                    "Report"
                ],
                "summary": "Report Query FindOne",
                "description": "",
                "operationId": "GET: /api/v2/report/{id}",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of entry",
                        "required": true,
                        "schema": {
                            "description": "Id of entry",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.ReportBundle.Entity.Report"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.ApiBundle.Exception.MalformedRequestException"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Report"
                ],
                "summary": "Report Command Update",
                "description": "",
                "operationId": "PUT: /api/v2/report/{id}",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "description": "",
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "eventId": {
                                        "description": "",
                                        "type": "string"
                                    },
                                    "time": {
                                        "description": "",
                                        "type": "string",
                                        "format": "date-time"
                                    },
                                    "meta": {
                                        "description": "",
                                        "type": "array",
                                        "items": {
                                            "type": "object"
                                        }
                                    },
                                    "title": {
                                        "description": "",
                                        "type": "string"
                                    },
                                    "folder": {
                                        "description": "",
                                        "type": "string"
                                    },
                                    "description": {
                                        "description": "",
                                        "type": "string"
                                    },
                                    "selects": {
                                        "description": "",
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/idoit.Bundles.ReportBundle.Data.Select"
                                        }
                                    },
                                    "filters": {
                                        "$ref": "#/components/schemas/idoit.Bundles.CqrsBundle.Domain.Event.Criteria.Criteria"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.ApiBundle.Exception.MalformedRequestException"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Report"
                ],
                "summary": "Report Command Purge",
                "description": "",
                "operationId": "DELETE: /api/v2/report/{id}",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of entry",
                        "required": true,
                        "schema": {
                            "description": "Id of entry",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.ApiBundle.Exception.MalformedRequestException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/reference": {
            "get": {
                "tags": [
                    "Projection"
                ],
                "summary": "Projection Query Find",
                "description": "",
                "operationId": "GET: /api/v2/reference",
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "description": "",
                            "type": "integer"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "description": "",
                            "type": "integer"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "$ref": "#/components/schemas/idoit.Bundles.CqrsBundle.Domain.Event.Criteria.Criteria"
                        }
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "description": "",
                            "type": "string"
                        }
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "description": "",
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "needsTotal",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "description": "",
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.ReferenceBundle.Projection.Query.ArrayResult"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.ApiBundle.Exception.MalformedRequestException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/reference/{id}": {
            "get": {
                "tags": [
                    "Projection"
                ],
                "summary": "Projection Query FindOne",
                "description": "",
                "operationId": "GET: /api/v2/reference/{id}",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of entry",
                        "required": true,
                        "schema": {
                            "description": "Id of entry",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.ReferenceBundle.Entity.Reference"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.ApiBundle.Exception.MalformedRequestException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/favorite/{type}/{item}": {
            "post": {
                "tags": [
                    "Favorite"
                ],
                "summary": "Favorite Command Create",
                "description": "",
                "operationId": "POST: /api/v2/favorite/{type}/{item}",
                "parameters": [
                    {
                        "name": "type",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "description": "",
                            "type": "string"
                        }
                    },
                    {
                        "name": "item",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "description": "",
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "id": {
                                        "description": "Id of entry",
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.ApiBundle.Exception.MalformedRequestException"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Favorite"
                ],
                "summary": "Favorite Command Remove",
                "description": "",
                "operationId": "DELETE: /api/v2/favorite/{type}/{item}",
                "parameters": [
                    {
                        "name": "type",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "description": "",
                            "type": "string"
                        }
                    },
                    {
                        "name": "item",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "description": "",
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "Id of entry",
                        "required": false,
                        "schema": {
                            "description": "Id of entry",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.ApiBundle.Exception.MalformedRequestException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/favorite/{type}": {
            "get": {
                "tags": [
                    "Favorite"
                ],
                "summary": "Favorite Query FindOne",
                "description": "",
                "operationId": "GET: /api/v2/favorite/{type}",
                "parameters": [
                    {
                        "name": "type",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "description": "",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.FavoriteBundle.Entity.SimpleFavoriteItem"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.ApiBundle.Exception.MalformedRequestException"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Favorite"
                ],
                "summary": "Favorite Command Update",
                "description": "",
                "operationId": "PUT: /api/v2/favorite/{type}",
                "parameters": [
                    {
                        "name": "type",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "description": "",
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "id": {
                                        "description": "Id of entry",
                                        "type": "string"
                                    },
                                    "items": {
                                        "description": "",
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.ApiBundle.Exception.MalformedRequestException"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Favorite"
                ],
                "summary": "Favorite Command CreateMultiple",
                "description": "",
                "operationId": "POST: /api/v2/favorite/{type}",
                "parameters": [
                    {
                        "name": "type",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "description": "",
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "id": {
                                        "description": "Id of entry",
                                        "type": "string"
                                    },
                                    "items": {
                                        "description": "",
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "deleteObsoleteItems": {
                                        "description": "",
                                        "type": "boolean"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.ApiBundle.Exception.MalformedRequestException"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Favorite"
                ],
                "summary": "Favorite Command Purge",
                "description": "",
                "operationId": "DELETE: /api/v2/favorite/{type}",
                "parameters": [
                    {
                        "name": "type",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "description": "",
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "Id of entry",
                        "required": false,
                        "schema": {
                            "description": "Id of entry",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.ApiBundle.Exception.MalformedRequestException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/license": {
            "get": {
                "tags": [
                    "License"
                ],
                "summary": "License Query Find",
                "description": "",
                "operationId": "GET: /api/v2/license",
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "description": "",
                            "type": "integer"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "description": "",
                            "type": "integer"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "$ref": "#/components/schemas/idoit.Bundles.CqrsBundle.Domain.Event.Criteria.Criteria"
                        }
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "description": "",
                            "type": "string"
                        }
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "description": "",
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "needsTotal",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "description": "",
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.LicenseBundle.Projection.License.Query.ArrayResult"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.ApiBundle.Exception.MalformedRequestException"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "TokenInfo"
                ],
                "summary": "TokenInfo Command Refresh",
                "description": "",
                "operationId": "PUT: /api/v2/license",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.ApiBundle.Exception.MalformedRequestException"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "TokenInfo"
                ],
                "summary": "TokenInfo Command SetToken",
                "description": "",
                "operationId": "POST: /api/v2/license",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "token": {
                                        "description": "",
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.ApiBundle.Exception.MalformedRequestException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/license/usage": {
            "get": {
                "tags": [
                    "License"
                ],
                "summary": "License Query GetUsage",
                "description": "",
                "operationId": "GET: /api/v2/license/usage",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.LicenseBundle.Data.Usage"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.ApiBundle.Exception.MalformedRequestException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/license/{id}": {
            "get": {
                "tags": [
                    "License"
                ],
                "summary": "License Query FindOne",
                "description": "",
                "operationId": "GET: /api/v2/license/{id}",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of entry",
                        "required": true,
                        "schema": {
                            "description": "Id of entry",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.LicenseBundle.Entity.License"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.ApiBundle.Exception.MalformedRequestException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/filter": {
            "get": {
                "tags": [
                    "Filter"
                ],
                "summary": "Filter Query Find",
                "description": "",
                "operationId": "GET: /api/v2/filter",
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "description": "",
                            "type": "integer"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "description": "",
                            "type": "integer"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "$ref": "#/components/schemas/idoit.Bundles.CqrsBundle.Domain.Event.Criteria.Criteria"
                        }
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "description": "",
                            "type": "string"
                        }
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "description": "",
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "needsTotal",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "description": "",
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.PresetBundle.Projection.Filter.Query.ArrayResult"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.ApiBundle.Exception.MalformedRequestException"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Filter"
                ],
                "summary": "Filter Command Create",
                "description": "",
                "operationId": "POST: /api/v2/filter",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "eventType": {
                                        "description": "",
                                        "type": "string"
                                    },
                                    "eventId": {
                                        "description": "",
                                        "type": "string"
                                    },
                                    "time": {
                                        "description": "",
                                        "type": "string",
                                        "format": "date-time"
                                    },
                                    "meta": {
                                        "description": "",
                                        "type": "array",
                                        "items": {
                                            "type": "object"
                                        }
                                    },
                                    "id": {
                                        "description": "",
                                        "type": "string"
                                    },
                                    "presetItem": {
                                        "description": "",
                                        "type": "string"
                                    },
                                    "name": {
                                        "description": "",
                                        "type": "string"
                                    },
                                    "filter": {
                                        "description": "",
                                        "type": "string"
                                    },
                                    "user": {
                                        "description": "",
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.ApiBundle.Exception.MalformedRequestException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/filter/{id}": {
            "get": {
                "tags": [
                    "Filter"
                ],
                "summary": "Filter Query FindOne",
                "description": "",
                "operationId": "GET: /api/v2/filter/{id}",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of entry",
                        "required": true,
                        "schema": {
                            "description": "Id of entry",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.PresetBundle.Entity.Filter"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.ApiBundle.Exception.MalformedRequestException"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Filter"
                ],
                "summary": "Filter Command Update",
                "description": "",
                "operationId": "PUT: /api/v2/filter/{id}",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of entry",
                        "required": true,
                        "schema": {
                            "description": "Id of entry",
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "presetItem": {
                                        "description": "",
                                        "type": "string"
                                    },
                                    "name": {
                                        "description": "",
                                        "type": "string"
                                    },
                                    "filter": {
                                        "description": "",
                                        "type": "string"
                                    },
                                    "user": {
                                        "description": "",
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.ApiBundle.Exception.MalformedRequestException"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Filter"
                ],
                "summary": "Filter Command Purge",
                "description": "Class Purge",
                "operationId": "DELETE: /api/v2/filter/{id}",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of entry",
                        "required": true,
                        "schema": {
                            "description": "Id of entry",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.ApiBundle.Exception.MalformedRequestException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/preset/system": {
            "post": {
                "tags": [
                    "Preset"
                ],
                "summary": "Preset Command CreateSystemPreset",
                "description": "",
                "operationId": "POST: /api/v2/preset/system",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "id": {
                                        "description": "Id of entry",
                                        "type": "string"
                                    },
                                    "title": {
                                        "description": "",
                                        "type": "string"
                                    },
                                    "items": {
                                        "description": "",
                                        "type": "array",
                                        "items": {
                                            "type": "object"
                                        }
                                    },
                                    "properties": {
                                        "description": "",
                                        "type": "array",
                                        "items": {
                                            "type": "object"
                                        }
                                    },
                                    "isDefault": {
                                        "description": "",
                                        "type": "boolean"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.ApiBundle.Exception.MalformedRequestException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/preset/user": {
            "post": {
                "tags": [
                    "Preset"
                ],
                "summary": "Preset Command CreateUserPreset",
                "description": "",
                "operationId": "POST: /api/v2/preset/user",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "id": {
                                        "description": "Id of entry",
                                        "type": "string"
                                    },
                                    "title": {
                                        "description": "",
                                        "type": "string"
                                    },
                                    "items": {
                                        "description": "",
                                        "type": "array",
                                        "items": {
                                            "type": "object"
                                        }
                                    },
                                    "properties": {
                                        "description": "",
                                        "type": "array",
                                        "items": {
                                            "type": "object"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.ApiBundle.Exception.MalformedRequestException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/preset/{id}": {
            "put": {
                "tags": [
                    "Preset"
                ],
                "summary": "Preset Command Update",
                "description": "",
                "operationId": "PUT: /api/v2/preset/{id}",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of entry",
                        "required": true,
                        "schema": {
                            "description": "Id of entry",
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "description": "",
                                        "type": "string"
                                    },
                                    "items": {
                                        "description": "",
                                        "type": "array",
                                        "items": {
                                            "type": "object"
                                        }
                                    },
                                    "properties": {
                                        "description": "",
                                        "type": "array",
                                        "items": {
                                            "type": "object"
                                        }
                                    },
                                    "isDefault": {
                                        "description": "",
                                        "type": "boolean"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.ApiBundle.Exception.MalformedRequestException"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Preset"
                ],
                "summary": "Preset Command Purge",
                "description": "Class Purge",
                "operationId": "DELETE: /api/v2/preset/{id}",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of entry",
                        "required": true,
                        "schema": {
                            "description": "Id of entry",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.ApiBundle.Exception.MalformedRequestException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/preset/{type}": {
            "get": {
                "tags": [
                    "Preset"
                ],
                "summary": "Preset Query FindByType",
                "description": "",
                "operationId": "GET: /api/v2/preset/{type}",
                "parameters": [
                    {
                        "name": "type",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "description": "",
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "description": "",
                            "type": "integer"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "description": "",
                            "type": "integer"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "$ref": "#/components/schemas/idoit.Bundles.CqrsBundle.Domain.Event.Criteria.Criteria"
                        }
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "description": "",
                            "type": "string"
                        }
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "description": "",
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "needsTotal",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "description": "",
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.PresetBundle.Projection.Preset.Query.ArrayResult"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.ApiBundle.Exception.MalformedRequestException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/preset/{type}/{id}": {
            "get": {
                "tags": [
                    "Preset"
                ],
                "summary": "Preset Query FindOne",
                "description": "",
                "operationId": "GET: /api/v2/preset/{type}/{id}",
                "parameters": [
                    {
                        "name": "type",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "description": "",
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of entry",
                        "required": true,
                        "schema": {
                            "description": "Id of entry",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.PresetBundle.PresetItem.PresetItem"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.ApiBundle.Exception.MalformedRequestException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/widget": {
            "get": {
                "tags": [
                    "Widget"
                ],
                "summary": "Widget Query Find",
                "description": "",
                "operationId": "GET: /api/v2/widget",
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "description": "",
                            "type": "integer"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "description": "",
                            "type": "integer"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "$ref": "#/components/schemas/idoit.Bundles.CqrsBundle.Domain.Event.Criteria.Criteria"
                        }
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "description": "",
                            "type": "string"
                        }
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "description": "",
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "needsTotal",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "description": "",
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.WidgetBundle.Projection.Widget.Query.ArrayResult"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.ApiBundle.Exception.MalformedRequestException"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Widget"
                ],
                "summary": "Widget Command Create",
                "description": "",
                "operationId": "POST: /api/v2/widget",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "id": {
                                        "description": "Id of entry",
                                        "type": "string"
                                    },
                                    "title": {
                                        "description": "",
                                        "type": "string"
                                    },
                                    "widget_type": {
                                        "description": "",
                                        "type": "string"
                                    },
                                    "collection": {
                                        "description": "",
                                        "type": "string"
                                    },
                                    "configuration": {
                                        "description": "",
                                        "type": "array",
                                        "items": {
                                            "type": "object"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.ApiBundle.Exception.MalformedRequestException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/widget/{id}": {
            "get": {
                "tags": [
                    "Widget"
                ],
                "summary": "Widget Query FindOne",
                "description": "",
                "operationId": "GET: /api/v2/widget/{id}",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of entry",
                        "required": true,
                        "schema": {
                            "description": "Id of entry",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.WidgetBundle.Entity.Widget"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.ApiBundle.Exception.MalformedRequestException"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Widget"
                ],
                "summary": "Widget Command Update",
                "description": "",
                "operationId": "PUT: /api/v2/widget/{id}",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of entry",
                        "required": true,
                        "schema": {
                            "description": "Id of entry",
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "description": "",
                                        "type": "string"
                                    },
                                    "configuration": {
                                        "description": "",
                                        "type": "array",
                                        "items": {
                                            "type": "object"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.ApiBundle.Exception.MalformedRequestException"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Widget"
                ],
                "summary": "Widget Command Purge",
                "description": "",
                "operationId": "DELETE: /api/v2/widget/{id}",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of entry",
                        "required": true,
                        "schema": {
                            "description": "Id of entry",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.ApiBundle.Exception.MalformedRequestException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/widget-collection": {
            "get": {
                "tags": [
                    "WidgetCollection"
                ],
                "summary": "WidgetCollection Query Find",
                "description": "",
                "operationId": "GET: /api/v2/widget-collection",
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "description": "",
                            "type": "integer"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "description": "",
                            "type": "integer"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "$ref": "#/components/schemas/idoit.Bundles.CqrsBundle.Domain.Event.Criteria.Criteria"
                        }
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "description": "",
                            "type": "string"
                        }
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "description": "",
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "needsTotal",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "description": "",
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.WidgetBundle.Projection.WidgetCollection.Query.ArrayResult"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.ApiBundle.Exception.MalformedRequestException"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "WidgetCollection"
                ],
                "summary": "WidgetCollection Command Create",
                "description": "",
                "operationId": "POST: /api/v2/widget-collection",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "id": {
                                        "description": "Id of entry",
                                        "type": "string"
                                    },
                                    "title": {
                                        "description": "",
                                        "type": "string"
                                    },
                                    "classifications": {
                                        "description": "",
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.ApiBundle.Exception.MalformedRequestException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/widget-collection/{id}": {
            "get": {
                "tags": [
                    "WidgetCollection"
                ],
                "summary": "WidgetCollection Query FindOne",
                "description": "",
                "operationId": "GET: /api/v2/widget-collection/{id}",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of entry",
                        "required": true,
                        "schema": {
                            "description": "Id of entry",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.WidgetBundle.Entity.WidgetCollection"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.ApiBundle.Exception.MalformedRequestException"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "WidgetCollection"
                ],
                "summary": "WidgetCollection Command Update",
                "description": "",
                "operationId": "PUT: /api/v2/widget-collection/{id}",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of entry",
                        "required": true,
                        "schema": {
                            "description": "Id of entry",
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "description": "",
                                        "type": "string"
                                    },
                                    "classifications": {
                                        "description": "",
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.ApiBundle.Exception.MalformedRequestException"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "WidgetCollection"
                ],
                "summary": "WidgetCollection Command Purge",
                "description": "",
                "operationId": "DELETE: /api/v2/widget-collection/{id}",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of entry",
                        "required": true,
                        "schema": {
                            "description": "Id of entry",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.ApiBundle.Exception.MalformedRequestException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/setting/system/{id}": {
            "put": {
                "tags": [
                    "Setting"
                ],
                "summary": "Setting Command SetSystemSetting",
                "description": "",
                "operationId": "PUT: /api/v2/setting/system/{id}",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of entry",
                        "required": true,
                        "schema": {
                            "description": "Id of entry",
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "value": {
                                        "description": "",
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.ApiBundle.Exception.MalformedRequestException"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Setting"
                ],
                "summary": "Setting Command ResetSystemSetting",
                "description": "",
                "operationId": "DELETE: /api/v2/setting/system/{id}",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of entry",
                        "required": true,
                        "schema": {
                            "description": "Id of entry",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.ApiBundle.Exception.MalformedRequestException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/setting/user/{id}": {
            "put": {
                "tags": [
                    "Setting"
                ],
                "summary": "Setting Command SetUserSetting",
                "description": "",
                "operationId": "PUT: /api/v2/setting/user/{id}",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of entry",
                        "required": true,
                        "schema": {
                            "description": "Id of entry",
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "value": {
                                        "description": "",
                                        "type": "string"
                                    },
                                    "userId": {
                                        "description": "",
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.ApiBundle.Exception.MalformedRequestException"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Setting"
                ],
                "summary": "Setting Command ResetUserSetting",
                "description": "",
                "operationId": "DELETE: /api/v2/setting/user/{id}",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of entry",
                        "required": true,
                        "schema": {
                            "description": "Id of entry",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.ApiBundle.Exception.MalformedRequestException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/token/": {
            "get": {
                "tags": [
                    "ApiToken"
                ],
                "summary": "ApiToken Query Find",
                "description": "",
                "operationId": "GET: /api/v2/token/",
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "description": "",
                            "type": "integer"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "description": "",
                            "type": "integer"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "$ref": "#/components/schemas/idoit.Bundles.CqrsBundle.Domain.Event.Criteria.Criteria"
                        }
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "description": "",
                            "type": "string"
                        }
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "description": "",
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "needsTotal",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "description": "",
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.AdvancedSecurityBundle.Projection.ApiToken.Query.ArrayResult"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.ApiBundle.Exception.MalformedRequestException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/addon/{id}": {
            "get": {
                "tags": [
                    "Addon"
                ],
                "summary": "Addon Query FindOne",
                "description": "",
                "operationId": "GET: /api/v2/addon/{id}",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of entry",
                        "required": true,
                        "schema": {
                            "description": "Id of entry",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.AddonBundle.Entity.Addon"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.ApiBundle.Exception.MalformedRequestException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/addon": {
            "get": {
                "tags": [
                    "Addon"
                ],
                "summary": "Addon Query Find",
                "description": "",
                "operationId": "GET: /api/v2/addon",
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "description": "",
                            "type": "integer"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "description": "",
                            "type": "integer"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "$ref": "#/components/schemas/idoit.Bundles.CqrsBundle.Domain.Event.Criteria.Criteria"
                        }
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "description": "",
                            "type": "string"
                        }
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "description": "",
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "needsTotal",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "description": "",
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.AddonBundle.Projection.Addon.Query.ArrayResult"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.ApiBundle.Exception.MalformedRequestException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/widget/schema": {
            "get": {
                "tags": [
                    "Widget"
                ],
                "summary": "Widget Query FindSchema",
                "description": "",
                "operationId": "GET: /api/v2/widget/schema",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.CqrsBundle.Domain.Query.ArrayResult"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.ApiBundle.Exception.MalformedRequestException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/widget/{id}/{objectId}": {
            "get": {
                "tags": [
                    "Widget"
                ],
                "summary": "Widget Query GetWidgetData",
                "description": "",
                "operationId": "GET: /api/v2/widget/{id}/{objectId}",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of entry",
                        "required": true,
                        "schema": {
                            "description": "Id of entry",
                            "type": "string"
                        }
                    },
                    {
                        "name": "objectId",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "description": "",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.ApiBundle.Exception.MalformedRequestException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/setting/schema": {
            "get": {
                "tags": [
                    "Setting"
                ],
                "summary": "Setting Query GetSchema",
                "description": "",
                "operationId": "GET: /api/v2/setting/schema",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.ApiBundle.Exception.MalformedRequestException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/setting": {
            "get": {
                "tags": [
                    "Setting"
                ],
                "summary": "Setting Query Find",
                "description": "",
                "operationId": "GET: /api/v2/setting",
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "description": "",
                            "type": "integer"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "description": "",
                            "type": "integer"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "$ref": "#/components/schemas/idoit.Bundles.CqrsBundle.Domain.Event.Criteria.Criteria"
                        }
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "description": "",
                            "type": "string"
                        }
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "description": "",
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "needsTotal",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "description": "",
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "userId",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "description": "",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.ApiBundle.Exception.MalformedRequestException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/setting/{id}": {
            "get": {
                "tags": [
                    "Setting"
                ],
                "summary": "Setting Query FindOne",
                "description": "",
                "operationId": "GET: /api/v2/setting/{id}",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of entry",
                        "required": true,
                        "schema": {
                            "description": "Id of entry",
                            "type": "string"
                        }
                    },
                    {
                        "name": "userId",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "description": "",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.ApiBundle.Exception.MalformedRequestException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/category/{id}": {
            "get": {
                "tags": [
                    "Category"
                ],
                "summary": "Category Query FindOne",
                "description": "",
                "operationId": "GET: /api/v2/category/{id}",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of entry",
                        "required": true,
                        "schema": {
                            "description": "Id of entry",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.CqrsIntegrationBundle.Entity.Category"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.ApiBundle.Exception.MalformedRequestException"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Category"
                ],
                "summary": "Category Command Update",
                "description": "",
                "operationId": "PUT: /api/v2/category/{id}",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of entry",
                        "required": true,
                        "schema": {
                            "description": "Id of entry",
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "status": {
                                        "description": "",
                                        "type": "integer"
                                    },
                                    "title": {
                                        "description": "",
                                        "type": "string"
                                    },
                                    "multivalue": {
                                        "description": "",
                                        "type": "boolean"
                                    },
                                    "meta": {
                                        "description": "",
                                        "type": "array",
                                        "items": {
                                            "type": "object"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.ApiBundle.Exception.MalformedRequestException"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Category"
                ],
                "summary": "Category Command Purge",
                "description": "",
                "operationId": "DELETE: /api/v2/category/{id}",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of entry",
                        "required": true,
                        "schema": {
                            "description": "Id of entry",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.ApiBundle.Exception.MalformedRequestException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/category/{id}/property": {
            "get": {
                "tags": [
                    "Category"
                ],
                "summary": "Category Query FindProperties",
                "description": "",
                "operationId": "GET: /api/v2/category/{id}/property",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of entry",
                        "required": true,
                        "schema": {
                            "description": "Id of entry",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.CqrsIntegrationBundle.Projection.Property.Query.ArrayResult"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.ApiBundle.Exception.MalformedRequestException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/category": {
            "get": {
                "tags": [
                    "Category"
                ],
                "summary": "Category Query Find",
                "description": "",
                "operationId": "GET: /api/v2/category",
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "description": "",
                            "type": "integer"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "description": "",
                            "type": "integer"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "$ref": "#/components/schemas/idoit.Bundles.CqrsBundle.Domain.Event.Criteria.Criteria"
                        }
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "description": "",
                            "type": "string"
                        }
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "description": "",
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "needsTotal",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "description": "",
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.CqrsIntegrationBundle.Projection.Category.Query.ArrayResult"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.ApiBundle.Exception.MalformedRequestException"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Category"
                ],
                "summary": "Category Command Create",
                "description": "",
                "operationId": "POST: /api/v2/category",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "id": {
                                        "description": "Id of entry",
                                        "type": "string"
                                    },
                                    "title": {
                                        "description": "",
                                        "type": "string"
                                    },
                                    "object-fields": {
                                        "description": "",
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "referenceId": {
                                        "description": "",
                                        "type": "string"
                                    },
                                    "multivalue": {
                                        "description": "",
                                        "type": "boolean"
                                    },
                                    "meta": {
                                        "description": "",
                                        "type": "array",
                                        "items": {
                                            "type": "object"
                                        }
                                    },
                                    "class": {
                                        "description": "",
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.ApiBundle.Exception.MalformedRequestException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/collection/{id}": {
            "get": {
                "tags": [
                    "ClassCollection"
                ],
                "summary": "ClassCollection Query FindOne",
                "description": "",
                "operationId": "GET: /api/v2/collection/{id}",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of entry",
                        "required": true,
                        "schema": {
                            "description": "Id of entry",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.DataBundle.Entity.ClassCollection"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.ApiBundle.Exception.MalformedRequestException"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "ClassCollection"
                ],
                "summary": "ClassCollection Command Update",
                "description": "",
                "operationId": "PUT: /api/v2/collection/{id}",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of entry",
                        "required": true,
                        "schema": {
                            "description": "Id of entry",
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "status": {
                                        "description": "",
                                        "type": "integer"
                                    },
                                    "title": {
                                        "description": "",
                                        "type": "string"
                                    },
                                    "classes": {
                                        "description": "",
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "enabled": {
                                        "description": "",
                                        "type": "boolean"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.ApiBundle.Exception.MalformedRequestException"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "ClassCollection"
                ],
                "summary": "ClassCollection Command Purge",
                "description": "",
                "operationId": "DELETE: /api/v2/collection/{id}",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of entry",
                        "required": true,
                        "schema": {
                            "description": "Id of entry",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.ApiBundle.Exception.MalformedRequestException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/collection": {
            "get": {
                "tags": [
                    "ClassCollection"
                ],
                "summary": "ClassCollection Query Find",
                "description": "",
                "operationId": "GET: /api/v2/collection",
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "description": "",
                            "type": "integer"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "description": "",
                            "type": "integer"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "$ref": "#/components/schemas/idoit.Bundles.CqrsBundle.Domain.Event.Criteria.Criteria"
                        }
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "description": "",
                            "type": "string"
                        }
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "description": "",
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "needsTotal",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "description": "",
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.CqrsIntegrationBundle.Projection.DataLayer.ClassCollection.Query.ArrayResult"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.ApiBundle.Exception.MalformedRequestException"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "ClassCollection"
                ],
                "summary": "ClassCollection Command Create",
                "description": "",
                "operationId": "POST: /api/v2/collection",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "id": {
                                        "description": "Id of entry",
                                        "type": "string"
                                    },
                                    "title": {
                                        "description": "",
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.ApiBundle.Exception.MalformedRequestException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/class/{id}": {
            "get": {
                "tags": [
                    "Classification"
                ],
                "summary": "Classification Query FindOne",
                "description": "",
                "operationId": "GET: /api/v2/class/{id}",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of entry",
                        "required": true,
                        "schema": {
                            "description": "Id of entry",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.DataBundle.Entity.ObjectClassification"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.ApiBundle.Exception.MalformedRequestException"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Classification"
                ],
                "summary": "Classification Command Update",
                "description": "",
                "operationId": "PUT: /api/v2/class/{id}",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of entry",
                        "required": true,
                        "schema": {
                            "description": "Id of entry",
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "status": {
                                        "description": "",
                                        "type": "integer"
                                    },
                                    "title": {
                                        "description": "",
                                        "type": "string"
                                    },
                                    "icon": {
                                        "description": "",
                                        "type": "string"
                                    },
                                    "categories": {
                                        "description": "",
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "capabilities": {
                                        "description": "",
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "collections": {
                                        "description": "",
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.ApiBundle.Exception.MalformedRequestException"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Classification"
                ],
                "summary": "Classification Command Purge",
                "description": "",
                "operationId": "DELETE: /api/v2/class/{id}",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of entry",
                        "required": true,
                        "schema": {
                            "description": "Id of entry",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.ApiBundle.Exception.MalformedRequestException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/class": {
            "get": {
                "tags": [
                    "Classification"
                ],
                "summary": "Classification Query Find",
                "description": "",
                "operationId": "GET: /api/v2/class",
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "description": "",
                            "type": "integer"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "description": "",
                            "type": "integer"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "$ref": "#/components/schemas/idoit.Bundles.CqrsBundle.Domain.Event.Criteria.Criteria"
                        }
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "description": "",
                            "type": "string"
                        }
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "description": "",
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "needsTotal",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "description": "",
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.CqrsIntegrationBundle.Projection.DataLayer.Classification.Query.ArrayResult"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.ApiBundle.Exception.MalformedRequestException"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Classification"
                ],
                "summary": "Classification Command Create",
                "description": "",
                "operationId": "POST: /api/v2/class",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "id": {
                                        "description": "Id of entry",
                                        "type": "string"
                                    },
                                    "title": {
                                        "description": "",
                                        "type": "string"
                                    },
                                    "collections": {
                                        "description": "",
                                        "type": "array",
                                        "items": {
                                            "type": "object"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.ApiBundle.Exception.MalformedRequestException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/object/count": {
            "get": {
                "tags": [
                    "IdoitObject"
                ],
                "summary": "IdoitObject Query Count",
                "description": "Count existing objects in your cmdb which will match a defined condition.\n\n# Examples\n\n## Get amount of objects which has accounting category assigned\n\n```\nGET /api/v2/object/count?categories[]=idoit.cmdb.accounting\n```\n\nTo determine the category id you can just use [/api/v2/category](#get-/api/v2/category).\n\n## Get amount of objects which belongs to a specific collection\n\nLet us first determine the `id` of the collection by using the [collection endpoint.](#get-/api/v2/collection)\n\nNow we can use the following request to get amount of objects in a specific collection:\n\n```http request\nGET /api/v2/object/count?collection=35f8b7463f1ec720\n```\n\n## Get amount of objects depending on ids\n\nThis query could be used to check whether a set of objects still exists by given list of ids.\n\n```http request\nGET /api/v2/object/count?ids[]=id1&ids[]=id2&ids[]=id3\n```\n\n## Get amount of objects based on conditions\n\nThis use case will rely on `criterias`. You can get detailed information about criterias in\nthe [introduction section](#overview) of this documentation.\n\nIn this example we want to determine the number of all `Server` and `Client` objects. This can be done with the\nfollowing criteria definition:\n\n```json\n{\n  \"type\": \"or\",\n  \"items\": [\n    {\n      \"type\": \"eq\",\n      \"field\": \"idoit.cmdb.general.classification\",\n      \"value\": \"ID_OF_SERVER_CLASS\"\n    },\n    {\n      \"type\": \"eq\",\n      \"field\": \"idoit.cmdb.general.classification\",\n      \"value\": \"ID_OF_CLIENT_CLASS\"\n    }\n  ]\n}\n```\n\nNow this definition needs to be passed as query parameter named `category`:\n\n```\nGET /api/v2/object/count?criteria={\"type\":\"or\",\"items\":[{\"type\":\"eq\",\"field\":\"idoit.cmdb.general.classification\",\"value\":\"ID_OF_SERVER_CLASS\"},{\"type\":\"eq\",\"field\":\"idoit.cmdb.general.classification\",\"value\":\"ID_OF_CLIENT_CLASS\"}]}\n```\n\n# List of attributes\n\nThe following list includes the most important attributes which can be used in criterias to define conditions:\n\n* idoit.cmdb.general.id\n* idoit.cmdb.general.title\n* idoit.cmdb.general.classification\n* idoit.cmdb.general.collection\n* idoit.cmdb.general.creator\n* idoit.cmdb.general.lastAuditor\n* idoit.cmdb.general.lifecycleStage\n\nIn general it is possible to address all attributes and use them in conditions. To identify an attributes id you can just check section [\"Id of category and properties\"](#post-/api/v2/entry/-category-).\n",
                "operationId": "GET: /api/v2/object/count",
                "parameters": [
                    {
                        "name": "categories",
                        "in": "query",
                        "description": "Array of category ids (use [/api/v2/category](#get-/api/v2/category) to retrieve) which will only include objects which\nhas given categories.",
                        "required": false,
                        "schema": {
                            "description": "Array of category ids (use [/api/v2/category](#get-/api/v2/category) to retrieve) which will only include objects which\nhas given categories.",
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "collection",
                        "in": "query",
                        "description": "Id of specific collection (see [collection endpoint.](#get-/api/v2/collection))",
                        "required": false,
                        "schema": {
                            "description": "Id of specific collection (see [collection endpoint.](#get-/api/v2/collection))",
                            "type": "string"
                        }
                    },
                    {
                        "name": "f",
                        "in": "query",
                        "description": "DEPRECATED: Please use `criteria` instead",
                        "required": false,
                        "schema": {
                            "description": "DEPRECATED: Please use `criteria` instead",
                            "type": "array",
                            "items": {
                                "type": "object"
                            }
                        }
                    },
                    {
                        "name": "criteria",
                        "in": "query",
                        "description": "Definition of criterias (see [introduction section](#overview))",
                        "required": false,
                        "schema": {
                            "$ref": "#/components/schemas/idoit.Bundles.CqrsBundle.Domain.Event.Criteria.Criteria"
                        }
                    },
                    {
                        "name": "ids",
                        "in": "query",
                        "description": "List of asset ids",
                        "required": false,
                        "schema": {
                            "description": "List of asset ids",
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.ApiBundle.Exception.MalformedRequestException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/object": {
            "get": {
                "tags": [
                    "IdoitObject"
                ],
                "summary": "IdoitObject Query Find",
                "description": "Get existing objects in your cmdb which will match a defined condition.\n\n# Examples\n\n## Get objects which has accounting category assigned\n\n```\nGET /api/v2/object?categories[]=idoit.cmdb.accounting\n```\n\nTo determine the category id you can just use [/api/v2/category](#get-/api/v2/category).\n\n## Get objects which belongs to a specific collection\n\nLet us first determine the `id` of the collection by using the [collection endpoint.](#get-/api/v2/collection)\n\nNow we can use the following request to get objects in a specific collection:\n\n```http request\nGET /api/v2/object?collection=35f8b7463f1ec720\n```\n\n## Get objects depending on ids\n\nThis query could be used to check whether a set of objects still exists by given list of ids.\n\n```http request\nGET /api/v2/object?ids[]=id1&ids[]=id2&ids[]=id3\n```\n\n## Get objects based on conditions\n\nThis use case will rely on `criterias`. You can get detailed information about criterias in\nthe [introduction section](#overview) of this documentation.\n\nIn this example we want to determine the number of all `Server` and `Client` objects. This can be done with the\nfollowing criteria definition:\n\n```json\n{\n  \"type\": \"or\",\n  \"items\": [\n    {\n      \"type\": \"eq\",\n      \"field\": \"idoit.cmdb.general.classification\",\n      \"value\": \"ID_OF_SERVER_CLASS\"\n    },\n    {\n      \"type\": \"eq\",\n      \"field\": \"idoit.cmdb.general.classification\",\n      \"value\": \"ID_OF_CLIENT_CLASS\"\n    }\n  ]\n}\n```\n\nNow this definition needs to be passed as query parameter named `category`:\n\n```\nGET /api/v2/object?criteria={\"type\":\"or\",\"items\":[{\"type\":\"eq\",\"field\":\"idoit.cmdb.general.classification\",\"value\":\"ID_OF_SERVER_CLASS\"},{\"type\":\"eq\",\"field\":\"idoit.cmdb.general.classification\",\"value\":\"ID_OF_CLIENT_CLASS\"}]}\n```\n\n# List of attributes\n\nThe following list includes the most important attributes which can be used in criterias to define conditions:\n\n* idoit.cmdb.general.id\n* idoit.cmdb.general.title\n* idoit.cmdb.general.classification\n* idoit.cmdb.general.collection\n* idoit.cmdb.general.creator\n* idoit.cmdb.general.lastAuditor\n* idoit.cmdb.general.lifecycleStage\n\nIn general it is possible to address all attributes and use them in conditions. To identify an attributes id you can just check section [\"Id of category and properties\"](#post-/api/v2/entry/-category-).\n",
                "operationId": "GET: /api/v2/object",
                "parameters": [
                    {
                        "name": "categories",
                        "in": "query",
                        "description": "Array of category ids (use [/api/v2/category](#get-/api/v2/category) to retrieve) which will only include objects which\nhas given categories.",
                        "required": false,
                        "schema": {
                            "description": "Array of category ids (use [/api/v2/category](#get-/api/v2/category) to retrieve) which will only include objects which\nhas given categories.",
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "collection",
                        "in": "query",
                        "description": "Id of specific collection (see [collection endpoint.](#get-/api/v2/collection))",
                        "required": false,
                        "schema": {
                            "description": "Id of specific collection (see [collection endpoint.](#get-/api/v2/collection))",
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Offset to be applied to the results",
                        "required": false,
                        "schema": {
                            "description": "Offset to be applied to the results",
                            "type": "integer"
                        }
                    },
                    {
                        "name": "select",
                        "in": "query",
                        "description": "List of attributes to be selected",
                        "required": false,
                        "schema": {
                            "description": "List of attributes to be selected",
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Identifier of attribute to be used to sort the results",
                        "required": false,
                        "schema": {
                            "description": "Identifier of attribute to be used to sort the results",
                            "type": "string"
                        }
                    },
                    {
                        "name": "f",
                        "in": "query",
                        "description": "DEPRECATED: Please use `criteria` instead",
                        "required": false,
                        "schema": {
                            "description": "DEPRECATED: Please use `criteria` instead",
                            "type": "array",
                            "items": {
                                "type": "object"
                            }
                        }
                    },
                    {
                        "name": "criteria",
                        "in": "query",
                        "description": "Definition of criterias (see [introduction section](#overview))",
                        "required": false,
                        "schema": {
                            "$ref": "#/components/schemas/idoit.Bundles.CqrsBundle.Domain.Event.Criteria.Criteria"
                        }
                    },
                    {
                        "name": "ids",
                        "in": "query",
                        "description": "List of asset ids",
                        "required": false,
                        "schema": {
                            "description": "List of asset ids",
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of max. results",
                        "required": false,
                        "schema": {
                            "description": "Number of max. results",
                            "type": "integer"
                        }
                    },
                    {
                        "name": "groupBy",
                        "in": "query",
                        "description": "Attribute to be used for grouping the results",
                        "required": false,
                        "schema": {
                            "description": "Attribute to be used for grouping the results",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.CqrsIntegrationBundle.Projection.DataLayer.IdoitObject.Query.ObjectResult"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.ApiBundle.Exception.MalformedRequestException"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "IdoitObject"
                ],
                "summary": "IdoitObject Command Create",
                "description": "This endpoint allows you to create new objects in your cmdb. Furthermore you have the possiblity to also create category\nentries without the necessity to use seperate requests for that.\n\n# Examples\n\n## Create new object\n\nThis request only require the class id which can be determined by using [/api/v2/class](#get-/api/v2/class). If class id\nis known you can just use the following request:\n\n```json\nPOST /api/v2/object\nContent-Type: application/json\n\n{\n  \"title\": \"My special Server\",\n  \"class\": \"SERVER_CLASS_ID\"\n}\n```\n\n## Create new object and category entries\n\nAs mentioned you also have the possiblity to directly create corresponding category entries for objects. These category\nentries will be defined in `entries` key and have the following shape:\n\n```json\n{\n  // Id of category (see /api/v2/category)\n  \"categoryId\": \"string\",\n  // Category entries for given category\n  \"data\": {\n    \"property1\": \"value1\",\n    \"property2\": \"value2\",\n    [...]\n  },\n}\n```\n\nThe following use case will create an object with two cpu entries and also some specific information in the accounting category:\n\n```json\nPOST /api/v2/object\nContent-Type: application/json\n\n{\n  \"title\": \"My Special Server\",\n  \"class\": \"3de4f901fffb30ac\",\n  \"entries\": [\n    {\n      \"categoryId\": \"idoit.cmdb.cpu\",\n      \"data\": {\n        \"cores\": \"8\"\n      }\n    },\n    {\n      \"categoryId\": \"idoit.cmdb.cpu\",\n      \"data\": {\n        \"cores\": \"4\"\n      }\n    },\n    {\n      \"categoryId\": \"idoit.cmdb.accounting\",\n      \"data\": {\n        \"inventoryNumber\": \"INV-000-111-222\",\n        \"invoiceDate\": \"2022-01-01\",\n        \"invoiceNumber\": \"111-222-333\"\n      }\n    }\n  ]\n}\n```\n",
                "operationId": "POST: /api/v2/object",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "id": {
                                        "description": "Id of entry",
                                        "type": "string"
                                    },
                                    "title": {
                                        "description": "Title of objec",
                                        "type": "string"
                                    },
                                    "class": {
                                        "description": "Id of class",
                                        "type": "string"
                                    },
                                    "entries": {
                                        "description": "Category entries to be created",
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/idoit.Bundles.CqrsIntegrationBundle.Domain.IdoitObject.Command.CreateEntry"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.ApiBundle.Exception.MalformedRequestException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/object/{id}": {
            "get": {
                "tags": [
                    "IdoitObject"
                ],
                "summary": "IdoitObject Query FindOne",
                "description": "You can use this endpoint to retrieve a single object with all its meta information by accessing `GET /api/v2/object/{id}`.\nThe `id` attribute is required and will consist of 16 alphanumerical characters.\nThe response will not include any category information and is limited for this reason.\n\nIf you would like to retrieve object and also category data at once you can use [object data](#get-/api/v2/objectData/-id-) endpoint.\n",
                "operationId": "GET: /api/v2/object/{id}",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of entry",
                        "required": true,
                        "schema": {
                            "description": "Id of entry",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.InfrastructureBundle.Response.Model.ObjectData"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.ApiBundle.Exception.MalformedRequestException"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "IdoitObject"
                ],
                "summary": "IdoitObject Command Update",
                "description": "This endpoint allows you to execute modifications on three main information of an object and serves as shortcut for direct modifications of `idoit.cmdb.general`:\n\n* Status\n* Title\n* Class\n\n> You can only set attributes which should be changed and dismiss ones which should not be touched.\n\n# Examples\n\n## Perform update\n\nThis request only require the class id which can be determined by using [/api/v2/class](#get-/api/v2/class). If class id\nis known you can just use the following request:\n\n```json\nPUT /api/v2/object\nContent-Type: application/json\n\n{\n  \"title\": \"New Server Title\",\n  \"class\": \"SERVER_CLASS_ID\",\n  \"status\": 0\n}\n```\n",
                "operationId": "PUT: /api/v2/object/{id}",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of entry",
                        "required": true,
                        "schema": {
                            "description": "Id of entry",
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "status": {
                                        "description": "New object status (1 = normal, 2 = archived, 3 = purged)",
                                        "type": "integer"
                                    },
                                    "title": {
                                        "description": "New object title",
                                        "type": "string"
                                    },
                                    "class": {
                                        "description": "New object class",
                                        "type": "string"
                                    },
                                    "categories": {
                                        "description": "",
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/idoit.Bundles.CqrsIntegrationBundle.Domain.IdoitObject.Command.UpdateCategory"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.ApiBundle.Exception.MalformedRequestException"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "IdoitObject"
                ],
                "summary": "IdoitObject Command Delete",
                "description": "",
                "operationId": "DELETE: /api/v2/object/{id}",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of entry",
                        "required": true,
                        "schema": {
                            "description": "Id of entry",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.ApiBundle.Exception.MalformedRequestException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/role/{id}": {
            "get": {
                "tags": [
                    "UserRole"
                ],
                "summary": "UserRole Query FindOne",
                "description": "",
                "operationId": "GET: /api/v2/role/{id}",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of entry",
                        "required": true,
                        "schema": {
                            "description": "Id of entry",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.App.Entity.UserRole"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.ApiBundle.Exception.MalformedRequestException"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "UserRole"
                ],
                "summary": "UserRole Command Update",
                "description": "",
                "operationId": "PUT: /api/v2/role/{id}",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of entry",
                        "required": true,
                        "schema": {
                            "description": "Id of entry",
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "description": "",
                                        "type": "string"
                                    },
                                    "description": {
                                        "description": "",
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.ApiBundle.Exception.MalformedRequestException"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "UserRole"
                ],
                "summary": "UserRole Command Purge",
                "description": "",
                "operationId": "DELETE: /api/v2/role/{id}",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of entry",
                        "required": true,
                        "schema": {
                            "description": "Id of entry",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.ApiBundle.Exception.MalformedRequestException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/role/title/{title}": {
            "get": {
                "tags": [
                    "UserRole"
                ],
                "summary": "UserRole Query FindOneByTitle",
                "description": "",
                "operationId": "GET: /api/v2/role/title/{title}",
                "parameters": [
                    {
                        "name": "title",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "description": "",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.App.Entity.UserRole"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.ApiBundle.Exception.MalformedRequestException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/role": {
            "get": {
                "tags": [
                    "UserRole"
                ],
                "summary": "UserRole Query Find",
                "description": "",
                "operationId": "GET: /api/v2/role",
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "description": "",
                            "type": "integer"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "description": "",
                            "type": "integer"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "$ref": "#/components/schemas/idoit.Bundles.CqrsBundle.Domain.Event.Criteria.Criteria"
                        }
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "description": "",
                            "type": "string"
                        }
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "description": "",
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "needsTotal",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "description": "",
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.CqrsIntegrationBundle.Projection.UserRole.Query.ArrayResult"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.ApiBundle.Exception.MalformedRequestException"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "UserRole"
                ],
                "summary": "UserRole Command Create",
                "description": "",
                "operationId": "POST: /api/v2/role",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "id": {
                                        "description": "Id of entry",
                                        "type": "string"
                                    },
                                    "title": {
                                        "description": "",
                                        "type": "string"
                                    },
                                    "description": {
                                        "description": "",
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.ApiBundle.Exception.MalformedRequestException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/property-type/{id}": {
            "get": {
                "tags": [
                    "PropertyType"
                ],
                "summary": "PropertyType Query FindOne",
                "description": "",
                "operationId": "GET: /api/v2/property-type/{id}",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "description": "",
                            "type": "string"
                        }
                    },
                    {
                        "name": "v",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "description": "",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.CqrsIntegrationBundle.PropertyType.PropertyType"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.ApiBundle.Exception.MalformedRequestException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/property-type": {
            "get": {
                "tags": [
                    "PropertyType"
                ],
                "summary": "PropertyType Query Find",
                "description": "",
                "operationId": "GET: /api/v2/property-type",
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "description": "",
                            "type": "integer"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "description": "",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.CqrsIntegrationBundle.PropertyType.Query.ArrayResult"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.ApiBundle.Exception.MalformedRequestException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/dialog": {
            "get": {
                "tags": [
                    "DialogType"
                ],
                "summary": "DialogType Query Find",
                "description": "",
                "operationId": "GET: /api/v2/dialog",
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "description": "",
                            "type": "integer"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "description": "",
                            "type": "integer"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "$ref": "#/components/schemas/idoit.Bundles.CqrsBundle.Domain.Event.Criteria.Criteria"
                        }
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "description": "",
                            "type": "string"
                        }
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "description": "",
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "needsTotal",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "description": "",
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.CqrsIntegrationBundle.Projection.DialogType.Query.ArrayResult"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.ApiBundle.Exception.MalformedRequestException"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "DialogType"
                ],
                "summary": "DialogType Command Create",
                "description": "",
                "operationId": "POST: /api/v2/dialog",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "id": {
                                        "description": "Id of entry",
                                        "type": "string"
                                    },
                                    "title": {
                                        "description": "",
                                        "type": "string"
                                    },
                                    "class": {
                                        "description": "",
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.ApiBundle.Exception.MalformedRequestException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/dialog/{id}": {
            "get": {
                "tags": [
                    "DialogType"
                ],
                "summary": "DialogType Query FindOne",
                "description": "",
                "operationId": "GET: /api/v2/dialog/{id}",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of entry",
                        "required": true,
                        "schema": {
                            "description": "Id of entry",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.CqrsIntegrationBundle.Entity.DialogType"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.ApiBundle.Exception.MalformedRequestException"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "DialogType"
                ],
                "summary": "DialogType Command Update",
                "description": "",
                "operationId": "PUT: /api/v2/dialog/{id}",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of entry",
                        "required": true,
                        "schema": {
                            "description": "Id of entry",
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "description": "",
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.ApiBundle.Exception.MalformedRequestException"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "DialogType"
                ],
                "summary": "DialogType Command Purge",
                "description": "",
                "operationId": "DELETE: /api/v2/dialog/{id}",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of entry",
                        "required": true,
                        "schema": {
                            "description": "Id of entry",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.ApiBundle.Exception.MalformedRequestException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/dialog/{key}/entry": {
            "get": {
                "tags": [
                    "Dialog"
                ],
                "summary": "Dialog Query Find",
                "description": "",
                "operationId": "GET: /api/v2/dialog/{key}/entry",
                "parameters": [
                    {
                        "name": "key",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "description": "",
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "description": "",
                            "type": "integer"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "description": "",
                            "type": "integer"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "$ref": "#/components/schemas/idoit.Bundles.CqrsBundle.Domain.Event.Criteria.Criteria"
                        }
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "description": "",
                            "type": "string"
                        }
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "description": "",
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "needsTotal",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "description": "",
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.CqrsIntegrationBundle.Projection.Dialog.Query.ArrayResult"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.ApiBundle.Exception.MalformedRequestException"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "DialogEntry"
                ],
                "summary": "DialogEntry Command Create",
                "description": "",
                "operationId": "POST: /api/v2/dialog/{key}/entry",
                "parameters": [
                    {
                        "name": "key",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "description": "",
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "id": {
                                        "description": "Id of entry",
                                        "type": "string"
                                    },
                                    "title": {
                                        "description": "",
                                        "type": "string"
                                    },
                                    "meta": {
                                        "description": "",
                                        "type": "array",
                                        "items": {
                                            "type": "object"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.ApiBundle.Exception.MalformedRequestException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/dialog/{key}/entry/{id}": {
            "get": {
                "tags": [
                    "Dialog"
                ],
                "summary": "Dialog Query FindOne",
                "description": "",
                "operationId": "GET: /api/v2/dialog/{key}/entry/{id}",
                "parameters": [
                    {
                        "name": "key",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "description": "",
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of entry",
                        "required": true,
                        "schema": {
                            "description": "Id of entry",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.CqrsIntegrationBundle.Entity.DialogEntry"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.ApiBundle.Exception.MalformedRequestException"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "DialogEntry"
                ],
                "summary": "DialogEntry Command Update",
                "description": "",
                "operationId": "PUT: /api/v2/dialog/{key}/entry/{id}",
                "parameters": [
                    {
                        "name": "key",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "description": "",
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of entry",
                        "required": true,
                        "schema": {
                            "description": "Id of entry",
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "description": "",
                                        "type": "string"
                                    },
                                    "meta": {
                                        "description": "",
                                        "type": "array",
                                        "items": {
                                            "type": "object"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.ApiBundle.Exception.MalformedRequestException"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "DialogEntry"
                ],
                "summary": "DialogEntry Command Purge",
                "description": "",
                "operationId": "DELETE: /api/v2/dialog/{key}/entry/{id}",
                "parameters": [
                    {
                        "name": "key",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "description": "",
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of entry",
                        "required": true,
                        "schema": {
                            "description": "Id of entry",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.ApiBundle.Exception.MalformedRequestException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/entry/{category}": {
            "get": {
                "tags": [
                    "Entry"
                ],
                "summary": "Entry Query Find",
                "description": "This endpoint is primarily responsible for retrieving category entry data based on conditions. The definition of\nconditions can be done by using `criterias`. Furthermore it also offers shortcuts to simplify the most common use cases.\nIn all cases it is required to set the path parameter `category` which represents the id of an category (\nsee [/api/v2/category](#get-/api/v2/category)).\n\n# Examples\n\n## Get all category entries of a category\n\nThe following request will retrieve all existing category entries in `Accounting` category without scoping this to an\nspecific object:\n\n```json\nGET /api/v2/entry/idoit.cmdb.accounting\n```\n\nEach result will also include the belonging object id (see `object.id`) and also the entry id:\n\n```json\n{\n  [...]\n  \"object\": {\n  // Object id\n  \"id\": \"db0fJUOdfwcLQyXH\"\n  },\n  // Category entry id\n  \"id\": \"db0fJUOdFFHdWugJ\"\n}\n```\n\n## Get category entries for specific object(s)\n\nThis use case is demonstrating how to retrieve category data of `Accounting` category for one or multiple objects by\nusing `objects` parameter. This parameter represents a comma separated list and can hold a single object id or several\nobject ids.\n\n### Single object\n\n```\nGET /api/v2/entry/idoit.cmdb.accounting?object=OBJECT_ID\n```\n\n### Multiple objects\n\n```\nGET /api/v2/entry/idoit.cmdb.accounting?object=OBJECT_ID1,OBJECT_ID2,OBJECT_ID3\n```\n\n## Limit results to specific attributes\n\nThis endpoint is also able to limit the information in the resultset. This will help to reduce the traffic and also the\nsize of the response. For this purpose `select` parameter can be used. This will get a list of attributes which should\nbe included. This list will be interpreted as whitelist. Currently there is no `blacklist` functionality\n\nThe following example will retrieve all category entries from `CPU` and limit the response to `cores` and `vendor`:\n\n```json\nGET /api/v2/entry/idoit.cmdb.cpu?select[]=cores&select[]=vendor\n```\n\n## Get only category entries with specific entry ids\n\nLet us assume that only a set of category entries should be retrieved based on their ids. In this situation the `ids`\nparameter can be used and will get a list of entry ids.\n\nThe following request will retrieve all entries in `CPU` category with ids `ENTRY_ID_1` and `ENTRY_ID_2`. It is also\npossible to provide a single entry id.\n\n```json\nGET /api/v2/entry/idoit.cmdb.cpu?ids[]=ENTRY_ID_1&ids[]=ENTRY_ID_2\n```\n\n## Get category entries based on conditions\n\nThe following example will describe how to search for specific entries filtered by conditions. For this purpose we will\nuse criterias.\n\nIn this example we want to retrieve all cpu entries which `cores` attribute is between `2` and `5` and `smtpMultiplier`\nis equal to `4`. This can look like this as `criteria`:\n\n\n```json\n{\n  \"type\": \"and\",\n  \"items\": [\n    {\n      \"type\": \"gte\",\n      \"field\": \"idoit.cmdb.cpu.cores\",\n      \"value\": 2\n    },\n    {\n      \"type\": \"lte\",\n      \"field\": \"idoit.cmdb.cpu.cores\",\n      \"value\": 5\n    },\n    {\n      \"type\": \"eq\",\n      \"field\": \"idoit.cmdb.cpu.smtMultiplier\",\n      \"value\": 4\n    }\n  ]\n}\n```\n\nThe corresponding request will use this criteria in `criteria` parameter:\n\n```json\nGET /api/v2/entry/idoit.cmdb.cpu?criteria={\"type\":\"and\",\"items\":[{\"type\":\"gte\",\"field\":\"idoit.cmdb.cpu.cores\",\"value\":2},{\"type\":\"lte\",\"field\":\"idoit.cmdb.cpu.cores\",\"value\":5},{\"type\":\"eq\",\"field\":\"idoit.cmdb.cpu.smtMultiplier\",\"value\":4}]}\n```\n",
                "operationId": "GET: /api/v2/entry/{category}",
                "parameters": [
                    {
                        "name": "category",
                        "in": "path",
                        "description": "Id of category (see [/api/v2/category](#get-/api/v2/category))",
                        "required": true,
                        "schema": {
                            "description": "Id of category (see [/api/v2/category](#get-/api/v2/category))",
                            "type": "string"
                        }
                    },
                    {
                        "name": "object",
                        "in": "query",
                        "description": "Only show category entries belonging to specific objec",
                        "required": false,
                        "schema": {
                            "description": "Only show category entries belonging to specific objec",
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Offset to be applied to the results",
                        "required": false,
                        "schema": {
                            "description": "Offset to be applied to the results",
                            "type": "integer"
                        }
                    },
                    {
                        "name": "select",
                        "in": "query",
                        "description": "List of attributes to be selected",
                        "required": false,
                        "schema": {
                            "description": "List of attributes to be selected",
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Identifier of attribute to be used to sort the results",
                        "required": false,
                        "schema": {
                            "description": "Identifier of attribute to be used to sort the results",
                            "type": "string"
                        }
                    },
                    {
                        "name": "f",
                        "in": "query",
                        "description": "DEPRECATED: Please use `criteria` instead",
                        "required": false,
                        "schema": {
                            "description": "DEPRECATED: Please use `criteria` instead",
                            "type": "array",
                            "items": {
                                "type": "object"
                            }
                        }
                    },
                    {
                        "name": "criteria",
                        "in": "query",
                        "description": "Definition of criterias (see [introduction section](#overview))",
                        "required": false,
                        "schema": {
                            "$ref": "#/components/schemas/idoit.Bundles.CqrsBundle.Domain.Event.Criteria.Criteria"
                        }
                    },
                    {
                        "name": "ids",
                        "in": "query",
                        "description": "List of asset ids",
                        "required": false,
                        "schema": {
                            "description": "List of asset ids",
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of max. results",
                        "required": false,
                        "schema": {
                            "description": "Number of max. results",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.CqrsIntegrationBundle.Projection.DataLayer.Entry.Query.EntryResult"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.ApiBundle.Exception.MalformedRequestException"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Entry"
                ],
                "summary": "Entry Command Create",
                "description": "This endpoint will allow you to create new category entries for specific categories. Actually it is only possible to request the creation of one single category entry.\nIf you want to create multiple entries with a single request please consider to use [Batch requests](#overview).\n\n## Preparation\n\nTo be able to create a new category entry we need three essential information:\n\n* Id of category\n* Id of object\n* Properties of category\n\n### Id of category and properties\n\nThe id of category is available in the category data itself which can be retrieved in [/api/v2/category](#get-/api/v2/category). Let us assume that we want to get the id of\nthe `Accounting` category and the title of the category is known:\n\n```json\nGET /api/v2/category?filter={\"type\": \"like\", \"field\": \"title\", \"value\":\"accounting\"}\n```\n\nThis request will return all information about the `Accounting` category also including its properties and their ids which we need to create the entry:\n\n```json\n{\n  \"results\": [\n    {\n      // Id of category\n      \"id\": \"idoit.cmdb.accounting\",\n      // List of all property ids included in category\n      \"properties\": [\n        \"idoit.cmdb.accounting.annualOperationExpenseCurrency\",\n        \"idoit.cmdb.accounting.annualOperationExpenseValue\",\n        \"idoit.cmdb.accounting.costCenter\",\n        \"idoit.cmdb.accounting.costUnit\",\n        \"idoit.cmdb.accounting.deliveryDate\",\n        \"idoit.cmdb.accounting.deliveryNumber\",\n        \"idoit.cmdb.accounting.id\",\n        \"idoit.cmdb.accounting.inventoryNumber\",\n        \"idoit.cmdb.accounting.investmentCostCurrency\",\n        \"idoit.cmdb.accounting.investmentCostValue\",\n        \"idoit.cmdb.accounting.invoiceDate\",\n        \"idoit.cmdb.accounting.invoiceNumber\",\n        \"idoit.cmdb.accounting.object\",\n        \"idoit.cmdb.accounting.orderDate\",\n        \"idoit.cmdb.accounting.orderNumber\",\n        \"idoit.cmdb.accounting.purchasedAt\",\n        \"idoit.cmdb.accounting.recurring\"\n      ],\n      [...]\n    }\n  ],\n  \"offset\": 0,\n  \"total\": 1,\n  \"perPage\": null\n}\n```\n\n### Id of object\n\nNow we want to identify the id of the object. Let us assume that we know the title of our object. In this situation we can use [/api/v2/object](#get-/api/v2/object):\n\n```\nGET /api/v2/object?criteria={\"type\": \"like\", \"field\": \"idoit.cmdb.general.title\", \"value\":\"Web-Server\"}\n```\n\nThis will return all objects which includes `Web-Server` in its names.\n\n## Create an entry\n\nNow all necessary information are collected and we can create a new entry for the identified object in the `Accounting` category:\n\n```json\nPOST /api/v2/entry/idoit.cmdb.accounting\n\n{\n  \"objectId\": \"OBJECT_ID\",\n  \"data\": {\n    \"deliveryDate\": \"2022-05-05\",\n    \"deliveryNumber\": \"DEV-NO-123\",\n    \"orderNumber\": \"ORDER-NO-123\",\n    \"orderDate\": \"2022-04-04\"\n  }\n}\n```\n\n\n",
                "operationId": "POST: /api/v2/entry/{category}",
                "parameters": [
                    {
                        "name": "category",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "description": "",
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "id": {
                                        "description": "Id of entry",
                                        "type": "string"
                                    },
                                    "data": {
                                        "$ref": "#/components/schemas/idoit.category.data"
                                    },
                                    "objectId": {
                                        "description": "",
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.ApiBundle.Exception.MalformedRequestException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/entry/{category}/{id}": {
            "get": {
                "tags": [
                    "Entry"
                ],
                "summary": "Entry Query FindOne",
                "description": "This endpoint will retrieve a single category entry specified by the category id `category` itself and also the category entry id `id`.\nThe response will only include category attributes why the schema depends on the retrieved category.\n\n# Example\n\n## Get a specific category entry specified by its id\n\nThis use case requires two parameters:\n\n* Category id (see [/api/v2/category](#get-/api/v2/category))\n* Category entry id\n\nBoth parameters will be specified as path parameters.\n\nThe following example will get a specific entry from the `Accounting` category\n\n```json\nGET /api/v2/idoit.cmdb.accounting/ENTRY_ID\n```\n\n> Please use [this](#get-/api/v2/entry/-category-) endpoint for more complex use cases\n",
                "operationId": "GET: /api/v2/entry/{category}/{id}",
                "parameters": [
                    {
                        "name": "category",
                        "in": "path",
                        "description": "Id of category",
                        "required": true,
                        "schema": {
                            "description": "Id of category",
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of entry",
                        "required": true,
                        "schema": {
                            "description": "Id of entry",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.InfrastructureBundle.Response.Model.CategoryData"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.ApiBundle.Exception.MalformedRequestException"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Entry"
                ],
                "summary": "Entry Command Update",
                "description": "This endpoint will allow you to update an already existing category entry which will be identified over its `id`. In\ngeneral you can refer to the [creation of entries](#post-/api/v2/entry/-category-) which will guide you through the\nprocess of collecting all necessary information to perform this action.\n\n# Example\n\n## Update entry by its id\n\nThis use case will describe how to update an existing entry in `Accounting` category. Specifically it will only touch the `inventoryNumber` attribute and will let all other attributes untouched:\n\n```json\nPUT /api/v2/entry/idoit.cmdb.accounting/ENTRY_ID\n\n{\n  \"data\": {\n    \"inventoryNumber\": \"New Inventory Number\"\n  }\n}\n```\n",
                "operationId": "PUT: /api/v2/entry/{category}/{id}",
                "parameters": [
                    {
                        "name": "category",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "description": "",
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of entry",
                        "required": true,
                        "schema": {
                            "description": "Id of entry",
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "data": {
                                        "description": "",
                                        "type": "array",
                                        "items": {
                                            "type": "object"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.ApiBundle.Exception.MalformedRequestException"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Entry"
                ],
                "summary": "Entry Command Delete",
                "description": "",
                "operationId": "DELETE: /api/v2/entry/{category}/{id}",
                "parameters": [
                    {
                        "name": "category",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "description": "",
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of entry",
                        "required": true,
                        "schema": {
                            "description": "Id of entry",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.ApiBundle.Exception.MalformedRequestException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/object/{source}/duplicate": {
            "post": {
                "tags": [
                    "IdoitObject"
                ],
                "summary": "IdoitObject Command Duplicate",
                "description": "This endpoint allows you to duplicate objects and their category data and create identical assets. For this purpose it is necessary to address an existing `source` object.\nFurthermore you can define a set of categories in `categories` which should be considered. By default all category data will be copied to the duplicate. Finally the duplicate needs a title.\n\n# Examples\n\n## Duplicate an `source` object and all of its categories\n\nTo duplicate a given `source` object you will only need to define the query parameter `source` and a title:\n\n```json\nPOST /api/v2/object/{SOURCE_OBJECT_ID}/duplicate\nContent-Type: application/json\n\n{\n  \"title\": \"Copy of Source Object\",\n}\n```\n\n## Duplicate an `source` object and only some categories\n\nThis request demonstrates how a selection of categories can be made to limit the copied category entries in the duplicated object. This can be done by defining `categories` in the request body and\nprovide an array of category ids (see [/api/v2/category](#get-/api/v2/category)).\n\nThe following request just addresses the `cpu` and `accounting` category and ignores all others:\n\n```json\nPOST /api/v2/object/{SOURCE_OBJECT_ID}/duplicate\nContent-Type: application/json\n\n{\n  \"title\": \"Copy of Source Object\",\n  \"categories\": [\"idoit.cmdb.cpu\", \"idoit.cmdb.accounting\"]\n}\n```\n",
                "operationId": "POST: /api/v2/object/{source}/duplicate",
                "parameters": [
                    {
                        "name": "source",
                        "in": "path",
                        "description": "Id of source objec",
                        "required": true,
                        "schema": {
                            "description": "Id of source objec",
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "description": "Title of duplicated objec",
                                        "type": "string"
                                    },
                                    "categories": {
                                        "description": "List of category ids to be considered",
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.ApiBundle.Exception.MalformedRequestException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/property": {
            "get": {
                "tags": [
                    "Property"
                ],
                "summary": "Property Query Find",
                "description": "",
                "operationId": "GET: /api/v2/property",
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "description": "",
                            "type": "integer"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "description": "",
                            "type": "integer"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "$ref": "#/components/schemas/idoit.Bundles.CqrsBundle.Domain.Event.Criteria.Criteria"
                        }
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "description": "",
                            "type": "string"
                        }
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "description": "",
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "needsTotal",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "description": "",
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.CqrsIntegrationBundle.Projection.Property.Query.ArrayResult"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.ApiBundle.Exception.MalformedRequestException"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Property"
                ],
                "summary": "Property Command Create",
                "description": "",
                "operationId": "POST: /api/v2/property",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "id": {
                                        "description": "Id of entry",
                                        "type": "string"
                                    },
                                    "title": {
                                        "description": "",
                                        "type": "string"
                                    },
                                    "type": {
                                        "description": "",
                                        "type": "string"
                                    },
                                    "category": {
                                        "description": "",
                                        "type": "string"
                                    },
                                    "config": {
                                        "description": "",
                                        "type": "array",
                                        "items": {
                                            "type": "object"
                                        }
                                    },
                                    "meta": {
                                        "description": "",
                                        "type": "array",
                                        "items": {
                                            "type": "object"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.ApiBundle.Exception.MalformedRequestException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/property/{id}": {
            "get": {
                "tags": [
                    "Property"
                ],
                "summary": "Property Query FindOne",
                "description": "",
                "operationId": "GET: /api/v2/property/{id}",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of entry",
                        "required": true,
                        "schema": {
                            "description": "Id of entry",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.CqrsIntegrationBundle.Entity.Property"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.ApiBundle.Exception.MalformedRequestException"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Property"
                ],
                "summary": "Property Command Update",
                "description": "",
                "operationId": "PUT: /api/v2/property/{id}",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of entry",
                        "required": true,
                        "schema": {
                            "description": "Id of entry",
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "status": {
                                        "description": "",
                                        "type": "integer"
                                    },
                                    "title": {
                                        "description": "",
                                        "type": "string"
                                    },
                                    "isSystem": {
                                        "description": "",
                                        "type": "boolean"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.ApiBundle.Exception.MalformedRequestException"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Property"
                ],
                "summary": "Property Command Purge",
                "description": "",
                "operationId": "DELETE: /api/v2/property/{id}",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of entry",
                        "required": true,
                        "schema": {
                            "description": "Id of entry",
                            "type": "string"
                        }
                    },
                    {
                        "name": "force",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "description": "",
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.ApiBundle.Exception.MalformedRequestException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/user": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "User Query Find",
                "description": "",
                "operationId": "GET: /api/v2/user",
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "description": "",
                            "type": "integer"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "description": "",
                            "type": "integer"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "$ref": "#/components/schemas/idoit.Bundles.CqrsBundle.Domain.Event.Criteria.Criteria"
                        }
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "description": "",
                            "type": "string"
                        }
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "description": "",
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "needsTotal",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "description": "",
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.CqrsIntegrationBundle.Projection.User.Query.ArrayResult"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.ApiBundle.Exception.MalformedRequestException"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "User Command Create",
                "description": "",
                "operationId": "POST: /api/v2/user",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "id": {
                                        "description": "Id of entry",
                                        "type": "string"
                                    },
                                    "username": {
                                        "description": "",
                                        "type": "string"
                                    },
                                    "name": {
                                        "description": "",
                                        "type": "string"
                                    },
                                    "email": {
                                        "description": "",
                                        "type": "string"
                                    },
                                    "password": {
                                        "description": "",
                                        "type": "string"
                                    },
                                    "passwordConfirmation": {
                                        "description": "",
                                        "type": "string"
                                    },
                                    "roles": {
                                        "description": "",
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "status": {
                                        "description": "",
                                        "type": "string"
                                    },
                                    "groups": {
                                        "description": "",
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.ApiBundle.Exception.MalformedRequestException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/user/{id}": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "User Query FindOne",
                "description": "",
                "operationId": "GET: /api/v2/user/{id}",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of entry",
                        "required": true,
                        "schema": {
                            "description": "Id of entry",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.App.Entity.User"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.ApiBundle.Exception.MalformedRequestException"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "User"
                ],
                "summary": "User Command Update",
                "description": "",
                "operationId": "PUT: /api/v2/user/{id}",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of entry",
                        "required": true,
                        "schema": {
                            "description": "Id of entry",
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "username": {
                                        "description": "",
                                        "type": "string"
                                    },
                                    "password": {
                                        "description": "",
                                        "type": "string"
                                    },
                                    "confirmation": {
                                        "description": "",
                                        "type": "string"
                                    },
                                    "name": {
                                        "description": "",
                                        "type": "string"
                                    },
                                    "email": {
                                        "description": "",
                                        "type": "string"
                                    },
                                    "status": {
                                        "description": "",
                                        "type": "string"
                                    },
                                    "groups": {
                                        "description": "",
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "roles": {
                                        "description": "",
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.ApiBundle.Exception.MalformedRequestException"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "User"
                ],
                "summary": "User Command Purge",
                "description": "",
                "operationId": "DELETE: /api/v2/user/{id}",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of entry",
                        "required": true,
                        "schema": {
                            "description": "Id of entry",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.ApiBundle.Exception.MalformedRequestException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/user/{id}/password": {
            "put": {
                "tags": [
                    "User"
                ],
                "summary": "User Command SetPassword",
                "description": "",
                "operationId": "PUT: /api/v2/user/{id}/password",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of entry",
                        "required": true,
                        "schema": {
                            "description": "Id of entry",
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "newPassword": {
                                        "description": "",
                                        "type": "string"
                                    },
                                    "confirmation": {
                                        "description": "",
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.ApiBundle.Exception.MalformedRequestException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/user/current": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "User Query GetCurrentUser",
                "description": "",
                "operationId": "GET: /api/v2/user/current",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.App.Entity.User"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.ApiBundle.Exception.MalformedRequestException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/property/{propertyId}/entry": {
            "get": {
                "tags": [
                    "Property"
                ],
                "summary": "Property Query FindEntries",
                "description": "",
                "operationId": "GET: /api/v2/property/{propertyId}/entry",
                "parameters": [
                    {
                        "name": "propertyId",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "description": "",
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "description": "",
                            "type": "integer"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "description": "",
                            "type": "integer"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "$ref": "#/components/schemas/idoit.Bundles.CqrsBundle.Domain.Event.Criteria.Criteria"
                        }
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "description": "",
                            "type": "string"
                        }
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "description": "",
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "needsTotal",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "description": "",
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "parameters",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "description": "",
                            "type": "array",
                            "items": {
                                "type": "object"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.CqrsIntegrationBundle.Entity.Property"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.ApiBundle.Exception.MalformedRequestException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/entry/{category}/{objectId}/validate": {
            "get": {
                "tags": [
                    "Entry"
                ],
                "summary": "Entry Query Validate",
                "description": "This endpoint will allow to validate a entry before it will be [created](#post-/api/v2/entry/-category-) or [modified](#put-/api/v2/entry/-category-/-id-)\n\n# Example\n\n## Validate an entry\n\nThe following use case will describe how to validate an entry for the `Accounting` category. For this purpose we need the `id` of the object and will pass the data as query parameters.\nThe following request will pass `orderNumber` and `orderDate` attributes:\n\n```\nGET /api/v2/entry/idoit.cmdb.accounting/OBJECT_ID/validate?data[orderNumber]=myOrderNumber&data[orderDate]=2022-01-01\n```\n\nThe endpoint will respond with the whole entry and all of its attributes if everything is fine. Otherwise a `400` will be returned to indicate that the entry is invalid.\n",
                "operationId": "GET: /api/v2/entry/{category}/{objectId}/validate",
                "parameters": [
                    {
                        "name": "category",
                        "in": "path",
                        "description": "Id of category",
                        "required": true,
                        "schema": {
                            "description": "Id of category",
                            "type": "string"
                        }
                    },
                    {
                        "name": "objectId",
                        "in": "path",
                        "description": "Id of objec",
                        "required": true,
                        "schema": {
                            "description": "Id of objec",
                            "type": "string"
                        }
                    },
                    {
                        "name": "data",
                        "in": "query",
                        "description": "Entry data to be considered during validatio",
                        "required": false,
                        "schema": {
                            "description": "Entry data to be considered during validatio",
                            "type": "array",
                            "items": {
                                "type": "object"
                            }
                        }
                    },
                    {
                        "name": "entryId",
                        "in": "query",
                        "description": "Id of entry",
                        "required": false,
                        "schema": {
                            "description": "Id of entry",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.ApiBundle.Exception.MalformedRequestException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/entry/{category}/stub": {
            "get": {
                "tags": [
                    "Entry"
                ],
                "summary": "Entry Query GetStub",
                "description": "This endpoint will create a stub for an entry in a specific category. This stub will include default values if available. If not the corresponding attributes will be setted to null.\nThe generated stub entry can be used as starting point before the [creation of an entry](#post-/api/v2/entry/-category-).\n# Example\n\n## Retrieve a stub entry\n\nThe following use case will describe how to retrieve an stub entry for the `Accounting` category. For this purpose we need the `id` of the object and can also pass the data as query parameters.\nThe following request will pass `invoiceDate` directly so that this attribute can be merged to the stub entry:\n\n```\nGET /api/v2/entry/idoit.cmdb.accounting/stub?objectId=OBJECT_ID&data[invoiceDate]=2022-01-01\n```\n\nThe response will look like:\n\n```json\n{\n  \"invoiceDate\": \"2022-01-01\",\n  \"object\": {\n    \"id\": \"OBJECT_ID\"\n  },\n  \"inventoryNumber\": null,\n  \"costCenter\": null,\n  \"costUnit\": null,\n  \"investmentCostCurrency\": null,\n  \"investmentCostValue\": null,\n  \"annualOperationExpenseCurrency\": null,\n  \"annualOperationExpenseValue\": null,\n  \"purchasedAt\": [],\n  \"recurring\": null,\n  \"orderDate\": null,\n  \"orderNumber\": null,\n  \"invoiceNumber\": null,\n  \"deliveryDate\": null,\n  \"deliveryNumber\": null\n}\n```\n\n\nThis stub can be used now to create new category entries.\n",
                "operationId": "GET: /api/v2/entry/{category}/stub",
                "parameters": [
                    {
                        "name": "category",
                        "in": "path",
                        "description": "Id of category",
                        "required": true,
                        "schema": {
                            "description": "Id of category",
                            "type": "string"
                        }
                    },
                    {
                        "name": "objectId",
                        "in": "query",
                        "description": "Id of objec",
                        "required": false,
                        "schema": {
                            "description": "Id of objec",
                            "type": "string"
                        }
                    },
                    {
                        "name": "data",
                        "in": "query",
                        "description": "Data to be merged into stub entry",
                        "required": false,
                        "schema": {
                            "description": "Data to be merged into stub entry",
                            "type": "array",
                            "items": {
                                "type": "object"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.ApiBundle.Exception.MalformedRequestException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/objectData/{id}": {
            "get": {
                "tags": [
                    "Query"
                ],
                "summary": "Query ObjectData FindOneObjectData",
                "description": "",
                "operationId": "GET: /api/v2/objectData/{id}",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of entry",
                        "required": true,
                        "schema": {
                            "description": "Id of entry",
                            "type": "string"
                        }
                    },
                    {
                        "name": "category",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "description": "",
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/idoit.Bundles.CqrsIntegrationBundle.Projection.DataLayer.Entry.Query.Find"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.CqrsIntegrationBundle.Projection.DataLayer.IdoitObject.Query.ObjectData.ObjectDataResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.ApiBundle.Exception.MalformedRequestException"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/objectData": {
            "get": {
                "tags": [
                    "Query"
                ],
                "summary": "Query ObjectData FindObjectData",
                "description": "",
                "operationId": "GET: /api/v2/objectData",
                "parameters": [
                    {
                        "name": "categories",
                        "in": "query",
                        "description": "Array of category ids (use [/api/v2/category](#get-/api/v2/category) to retrieve) which will only include objects which\nhas given categories.",
                        "required": false,
                        "schema": {
                            "description": "Array of category ids (use [/api/v2/category](#get-/api/v2/category) to retrieve) which will only include objects which\nhas given categories.",
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "collection",
                        "in": "query",
                        "description": "Id of specific collection (see [collection endpoint.](#get-/api/v2/collection))",
                        "required": false,
                        "schema": {
                            "description": "Id of specific collection (see [collection endpoint.](#get-/api/v2/collection))",
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Offset to be applied to the results",
                        "required": false,
                        "schema": {
                            "description": "Offset to be applied to the results",
                            "type": "integer"
                        }
                    },
                    {
                        "name": "select",
                        "in": "query",
                        "description": "List of attributes to be selected",
                        "required": false,
                        "schema": {
                            "description": "List of attributes to be selected",
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Identifier of attribute to be used to sort the results",
                        "required": false,
                        "schema": {
                            "description": "Identifier of attribute to be used to sort the results",
                            "type": "string"
                        }
                    },
                    {
                        "name": "f",
                        "in": "query",
                        "description": "DEPRECATED: Please use `criteria` instead",
                        "required": false,
                        "schema": {
                            "description": "DEPRECATED: Please use `criteria` instead",
                            "type": "array",
                            "items": {
                                "type": "object"
                            }
                        }
                    },
                    {
                        "name": "criteria",
                        "in": "query",
                        "description": "Definition of criterias (see [introduction section](#overview))",
                        "required": false,
                        "schema": {
                            "$ref": "#/components/schemas/idoit.Bundles.CqrsBundle.Domain.Event.Criteria.Criteria"
                        }
                    },
                    {
                        "name": "ids",
                        "in": "query",
                        "description": "List of asset ids",
                        "required": false,
                        "schema": {
                            "description": "List of asset ids",
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of max. results",
                        "required": false,
                        "schema": {
                            "description": "Number of max. results",
                            "type": "integer"
                        }
                    },
                    {
                        "name": "category",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "schema": {
                            "description": "",
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/idoit.Bundles.CqrsIntegrationBundle.Projection.DataLayer.Entry.Query.Find"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.CqrsIntegrationBundle.Projection.DataLayer.IdoitObject.Query.ObjectData.ObjectDataResponseArrayResult"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/idoit.Bundles.ApiBundle.Exception.MalformedRequestException"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "idoit.Bundles.InfrastructureBundle.Response.Model.ObjectData": {
                "$ref": "#/components/schemas/idoit.Bundles.DataBundle.Entity.IdoitObject"
            },
            "idoit.Bundles.ApiBundle.Exception.MalformedRequestException": {
                "description": "",
                "properties": {
                    "string": {
                        "description": "",
                        "type": "string"
                    },
                    "file": {
                        "description": "",
                        "type": "string"
                    },
                    "line": {
                        "description": "",
                        "type": "integer"
                    },
                    "previous": {
                        "description": "",
                        "type": "object"
                    },
                    "errors": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "idoit.App.Entity.UserInfo": {
                "description": "",
                "properties": {
                    "name": {
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "idoit.App.Entity.UserRole": {
                "description": "",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "status": {
                        "description": "",
                        "type": "integer"
                    },
                    "created": {
                        "description": "",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated": {
                        "description": "",
                        "type": "string",
                        "format": "date-time"
                    },
                    "lastAuditor": {
                        "$ref": "#/components/schemas/idoit.App.Entity.User"
                    },
                    "roleName": {
                        "description": "",
                        "type": "string"
                    },
                    "roleKey": {
                        "description": "",
                        "type": "string"
                    },
                    "description": {
                        "description": "",
                        "type": "string"
                    },
                    "users": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/idoit.App.Entity.User"
                        }
                    },
                    "userGroups": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/idoit.App.Entity.UserGroup"
                        }
                    }
                }
            },
            "idoit.App.Entity.UserGroup": {
                "description": "",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "status": {
                        "description": "",
                        "type": "integer"
                    },
                    "created": {
                        "description": "",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated": {
                        "description": "",
                        "type": "string",
                        "format": "date-time"
                    },
                    "lastAuditor": {
                        "$ref": "#/components/schemas/idoit.App.Entity.User"
                    },
                    "description": {
                        "description": "",
                        "type": "string"
                    },
                    "name": {
                        "description": "",
                        "type": "string"
                    },
                    "roles": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/idoit.App.Entity.UserRole"
                        }
                    },
                    "users": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/idoit.App.Entity.User"
                        }
                    }
                }
            },
            "idoit.Bundles.ApiBundle.Entity.ApiToken": {
                "description": "",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "token": {
                        "description": "",
                        "type": "string"
                    },
                    "title": {
                        "description": "",
                        "type": "string"
                    },
                    "disabled": {
                        "description": "",
                        "type": "boolean"
                    },
                    "user": {
                        "$ref": "#/components/schemas/idoit.App.Entity.User"
                    }
                }
            },
            "idoit.App.Entity.User": {
                "description": "",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "username": {
                        "description": "",
                        "type": "string"
                    },
                    "password": {
                        "description": "",
                        "type": "string"
                    },
                    "created": {
                        "description": "",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated": {
                        "description": "",
                        "type": "string",
                        "format": "date-time"
                    },
                    "status": {
                        "description": "",
                        "type": "string"
                    },
                    "email": {
                        "description": "",
                        "type": "string"
                    },
                    "userInfo": {
                        "$ref": "#/components/schemas/idoit.App.Entity.UserInfo"
                    },
                    "groups": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/idoit.App.Entity.UserGroup"
                        }
                    },
                    "tokens": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/idoit.Bundles.ApiBundle.Entity.ApiToken"
                        }
                    }
                }
            },
            "idoit.Bundles.CqrsIntegrationBundle.Projection.User.Query.ArrayResult": {
                "description": "",
                "properties": {
                    "results": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/idoit.App.Entity.User"
                        }
                    },
                    "offset": {
                        "description": "",
                        "type": "integer"
                    },
                    "total": {
                        "description": "",
                        "type": "integer"
                    },
                    "perPage": {
                        "description": "",
                        "type": "integer"
                    }
                }
            },
            "idoit.Bundles.AdvancedSecurityBundle.Permissions.Acl.AclEntry": {
                "description": "",
                "properties": {
                    "operation": {
                        "description": "",
                        "type": "integer"
                    },
                    "category": {
                        "description": "",
                        "type": "string"
                    },
                    "attribute": {
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "idoit.Bundles.AdvancedSecurityBundle.Projection.Permission.Query.AclArrayResult": {
                "description": "",
                "properties": {
                    "results": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/idoit.Bundles.AdvancedSecurityBundle.Permissions.Acl.AclEntry"
                        }
                    },
                    "offset": {
                        "description": "",
                        "type": "integer"
                    },
                    "total": {
                        "description": "",
                        "type": "integer"
                    },
                    "perPage": {
                        "description": "",
                        "type": "integer"
                    }
                }
            },
            "idoit.Bundles.CqrsBundle.Domain.Event.Criteria.OrCriteria": {
                "description": "",
                "properties": {
                    "items": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/idoit.Bundles.CqrsBundle.Domain.Event.Criteria.Criteria"
                        }
                    },
                    "type": {
                        "description": "",
                        "type": "string",
                        "enum": [
                            "or"
                        ]
                    }
                }
            },
            "idoit.Bundles.CqrsBundle.Domain.Event.Criteria.AndCriteria": {
                "description": "",
                "properties": {
                    "items": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/idoit.Bundles.CqrsBundle.Domain.Event.Criteria.Criteria"
                        }
                    },
                    "type": {
                        "description": "",
                        "type": "string",
                        "enum": [
                            "and"
                        ]
                    }
                }
            },
            "idoit.Bundles.CqrsBundle.Domain.Event.Criteria.NotCriteria": {
                "description": "",
                "properties": {
                    "item": {
                        "$ref": "#/components/schemas/idoit.Bundles.CqrsBundle.Domain.Event.Criteria.Criteria"
                    },
                    "type": {
                        "description": "",
                        "type": "string",
                        "enum": [
                            "not"
                        ]
                    }
                }
            },
            "idoit.Bundles.CqrsBundle.Domain.Event.Criteria.EqCriteria": {
                "description": "",
                "properties": {
                    "meta": {
                        "description": "",
                        "type": "boolean"
                    },
                    "field": {
                        "description": "",
                        "type": "string"
                    },
                    "value": {
                        "description": "",
                        "type": "string"
                    },
                    "extra": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    },
                    "type": {
                        "description": "",
                        "type": "string",
                        "enum": [
                            "eq"
                        ]
                    }
                }
            },
            "idoit.Bundles.CqrsBundle.Domain.Event.Criteria.NotEqCriteria": {
                "description": "",
                "properties": {
                    "meta": {
                        "description": "",
                        "type": "boolean"
                    },
                    "field": {
                        "description": "",
                        "type": "string"
                    },
                    "value": {
                        "description": "",
                        "type": "string"
                    },
                    "extra": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    },
                    "type": {
                        "description": "",
                        "type": "string",
                        "enum": [
                            "neq"
                        ]
                    }
                }
            },
            "idoit.Bundles.CqrsBundle.Domain.Event.Criteria.TypeCriteria": {
                "description": "",
                "properties": {
                    "value": {
                        "description": "",
                        "type": "string"
                    },
                    "type": {
                        "description": "",
                        "type": "string",
                        "enum": [
                            "type"
                        ]
                    }
                }
            },
            "idoit.Bundles.CqrsBundle.Domain.Event.Criteria.TypesCriteria": {
                "description": "",
                "properties": {
                    "value": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "type": {
                        "description": "",
                        "type": "string",
                        "enum": [
                            "types"
                        ]
                    }
                }
            },
            "idoit.Bundles.CqrsBundle.Domain.Event.Criteria.LessCriteria": {
                "description": "",
                "properties": {
                    "meta": {
                        "description": "",
                        "type": "boolean"
                    },
                    "field": {
                        "description": "",
                        "type": "string"
                    },
                    "value": {
                        "description": "",
                        "type": "string"
                    },
                    "extra": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    },
                    "type": {
                        "description": "",
                        "type": "string",
                        "enum": [
                            "lt"
                        ]
                    }
                }
            },
            "idoit.Bundles.CqrsBundle.Domain.Event.Criteria.LessOrEqualCriteria": {
                "description": "",
                "properties": {
                    "meta": {
                        "description": "",
                        "type": "boolean"
                    },
                    "field": {
                        "description": "",
                        "type": "string"
                    },
                    "value": {
                        "description": "",
                        "type": "string"
                    },
                    "extra": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    },
                    "type": {
                        "description": "",
                        "type": "string",
                        "enum": [
                            "lte"
                        ]
                    }
                }
            },
            "idoit.Bundles.CqrsBundle.Domain.Event.Criteria.MoreCriteria": {
                "description": "",
                "properties": {
                    "meta": {
                        "description": "",
                        "type": "boolean"
                    },
                    "field": {
                        "description": "",
                        "type": "string"
                    },
                    "value": {
                        "description": "",
                        "type": "string"
                    },
                    "extra": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    },
                    "type": {
                        "description": "",
                        "type": "string",
                        "enum": [
                            "gt"
                        ]
                    }
                }
            },
            "idoit.Bundles.CqrsBundle.Domain.Event.Criteria.MoreOrEqualCriteria": {
                "description": "",
                "properties": {
                    "meta": {
                        "description": "",
                        "type": "boolean"
                    },
                    "field": {
                        "description": "",
                        "type": "string"
                    },
                    "value": {
                        "description": "",
                        "type": "string"
                    },
                    "extra": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    },
                    "type": {
                        "description": "",
                        "type": "string",
                        "enum": [
                            "gte"
                        ]
                    }
                }
            },
            "idoit.Bundles.CqrsBundle.Domain.Event.Criteria.RangeCriteria": {
                "description": "",
                "properties": {
                    "meta": {
                        "description": "",
                        "type": "boolean"
                    },
                    "field": {
                        "description": "",
                        "type": "string"
                    },
                    "start": {
                        "description": "",
                        "type": "string"
                    },
                    "end": {
                        "description": "",
                        "type": "string"
                    },
                    "extra": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    },
                    "type": {
                        "description": "",
                        "type": "string",
                        "enum": [
                            "range"
                        ]
                    }
                }
            },
            "idoit.Bundles.CqrsBundle.Domain.Event.Criteria.LikeCriteria": {
                "description": "",
                "properties": {
                    "meta": {
                        "description": "",
                        "type": "boolean"
                    },
                    "field": {
                        "description": "",
                        "type": "string"
                    },
                    "value": {
                        "description": "",
                        "type": "string"
                    },
                    "extra": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    },
                    "type": {
                        "description": "",
                        "type": "string",
                        "enum": [
                            "like"
                        ]
                    }
                }
            },
            "idoit.Bundles.CqrsBundle.Domain.Event.Criteria.NotLikeCriteria": {
                "description": "",
                "properties": {
                    "meta": {
                        "description": "",
                        "type": "boolean"
                    },
                    "field": {
                        "description": "",
                        "type": "string"
                    },
                    "value": {
                        "description": "",
                        "type": "string"
                    },
                    "extra": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    },
                    "type": {
                        "description": "",
                        "type": "string",
                        "enum": [
                            "not_like"
                        ]
                    }
                }
            },
            "idoit.Bundles.CqrsBundle.Domain.Event.Criteria.InCriteria": {
                "description": "",
                "properties": {
                    "meta": {
                        "description": "",
                        "type": "boolean"
                    },
                    "field": {
                        "description": "",
                        "type": "string"
                    },
                    "value": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    },
                    "type": {
                        "description": "",
                        "type": "string",
                        "enum": [
                            "in"
                        ]
                    }
                }
            },
            "idoit.Bundles.CqrsBundle.Domain.Event.Criteria.NotInCriteria": {
                "description": "",
                "properties": {
                    "meta": {
                        "description": "",
                        "type": "boolean"
                    },
                    "field": {
                        "description": "",
                        "type": "string"
                    },
                    "value": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    },
                    "type": {
                        "description": "",
                        "type": "string",
                        "enum": [
                            "not_in"
                        ]
                    }
                }
            },
            "idoit.Bundles.CqrsBundle.Domain.Event.Criteria.IsNullCriteria": {
                "description": "",
                "properties": {
                    "field": {
                        "description": "",
                        "type": "string"
                    },
                    "type": {
                        "description": "",
                        "type": "string",
                        "enum": [
                            "isNull"
                        ]
                    }
                }
            },
            "idoit.Bundles.CqrsBundle.Domain.Event.Criteria.IsNotNullCriteria": {
                "description": "",
                "properties": {
                    "field": {
                        "description": "",
                        "type": "string"
                    },
                    "type": {
                        "description": "",
                        "type": "string",
                        "enum": [
                            "isNotNull"
                        ]
                    }
                }
            },
            "idoit.Bundles.CqrsBundle.Domain.Event.Criteria.BitAndCriteria": {
                "description": "",
                "properties": {
                    "meta": {
                        "description": "",
                        "type": "boolean"
                    },
                    "field": {
                        "description": "",
                        "type": "string"
                    },
                    "value": {
                        "description": "",
                        "type": "integer"
                    },
                    "type": {
                        "description": "",
                        "type": "string",
                        "enum": [
                            "bitAnd"
                        ]
                    }
                }
            },
            "idoit.Bundles.CqrsBundle.Domain.Event.Criteria.QueryCriteria": {
                "description": "",
                "properties": {
                    "field": {
                        "description": "",
                        "type": "string"
                    },
                    "criteria": {
                        "$ref": "#/components/schemas/idoit.Bundles.CqrsBundle.Domain.Event.Criteria.Criteria"
                    },
                    "type": {
                        "description": "",
                        "type": "string",
                        "enum": [
                            "query"
                        ]
                    }
                }
            },
            "idoit.Bundles.CqrsBundle.Domain.Event.Criteria.OperationCriteria": {
                "description": "",
                "properties": {
                    "value": {
                        "description": "",
                        "type": "string"
                    },
                    "type": {
                        "description": "",
                        "type": "string",
                        "enum": [
                            "operation"
                        ]
                    }
                }
            },
            "idoit.Bundles.CqrsBundle.Domain.Event.Criteria.SourceCriteria": {
                "description": "",
                "properties": {
                    "value": {
                        "description": "",
                        "type": "string"
                    },
                    "type": {
                        "description": "",
                        "type": "string",
                        "enum": [
                            "source"
                        ]
                    }
                }
            },
            "idoit.Bundles.CqrsBundle.Domain.Event.Criteria.ModelIdCriteria": {
                "description": "",
                "properties": {
                    "field": {
                        "description": "",
                        "type": "string"
                    },
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "type": {
                        "description": "",
                        "type": "string",
                        "enum": [
                            "model-id"
                        ]
                    }
                }
            },
            "idoit.Bundles.CqrsBundle.Domain.Event.Criteria.Criteria": {
                "description": "Definition of the filter criteria",
                "type": "object",
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "or": "#/components/schemas/idoit.Bundles.CqrsBundle.Domain.Event.Criteria.OrCriteria",
                        "and": "#/components/schemas/idoit.Bundles.CqrsBundle.Domain.Event.Criteria.AndCriteria",
                        "not": "#/components/schemas/idoit.Bundles.CqrsBundle.Domain.Event.Criteria.NotCriteria",
                        "eq": "#/components/schemas/idoit.Bundles.CqrsBundle.Domain.Event.Criteria.EqCriteria",
                        "neq": "#/components/schemas/idoit.Bundles.CqrsBundle.Domain.Event.Criteria.NotEqCriteria",
                        "type": "#/components/schemas/idoit.Bundles.CqrsBundle.Domain.Event.Criteria.TypeCriteria",
                        "types": "#/components/schemas/idoit.Bundles.CqrsBundle.Domain.Event.Criteria.TypesCriteria",
                        "lt": "#/components/schemas/idoit.Bundles.CqrsBundle.Domain.Event.Criteria.LessCriteria",
                        "lte": "#/components/schemas/idoit.Bundles.CqrsBundle.Domain.Event.Criteria.LessOrEqualCriteria",
                        "gt": "#/components/schemas/idoit.Bundles.CqrsBundle.Domain.Event.Criteria.MoreCriteria",
                        "gte": "#/components/schemas/idoit.Bundles.CqrsBundle.Domain.Event.Criteria.MoreOrEqualCriteria",
                        "range": "#/components/schemas/idoit.Bundles.CqrsBundle.Domain.Event.Criteria.RangeCriteria",
                        "like": "#/components/schemas/idoit.Bundles.CqrsBundle.Domain.Event.Criteria.LikeCriteria",
                        "not_like": "#/components/schemas/idoit.Bundles.CqrsBundle.Domain.Event.Criteria.NotLikeCriteria",
                        "in": "#/components/schemas/idoit.Bundles.CqrsBundle.Domain.Event.Criteria.InCriteria",
                        "not_in": "#/components/schemas/idoit.Bundles.CqrsBundle.Domain.Event.Criteria.NotInCriteria",
                        "isNull": "#/components/schemas/idoit.Bundles.CqrsBundle.Domain.Event.Criteria.IsNullCriteria",
                        "isNotNull": "#/components/schemas/idoit.Bundles.CqrsBundle.Domain.Event.Criteria.IsNotNullCriteria",
                        "bitAnd": "#/components/schemas/idoit.Bundles.CqrsBundle.Domain.Event.Criteria.BitAndCriteria",
                        "query": "#/components/schemas/idoit.Bundles.CqrsBundle.Domain.Event.Criteria.QueryCriteria",
                        "operation": "#/components/schemas/idoit.Bundles.CqrsBundle.Domain.Event.Criteria.OperationCriteria",
                        "source": "#/components/schemas/idoit.Bundles.CqrsBundle.Domain.Event.Criteria.SourceCriteria",
                        "model-id": "#/components/schemas/idoit.Bundles.CqrsBundle.Domain.Event.Criteria.ModelIdCriteria"
                    }
                },
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/idoit.Bundles.CqrsBundle.Domain.Event.Criteria.OrCriteria"
                    },
                    {
                        "$ref": "#/components/schemas/idoit.Bundles.CqrsBundle.Domain.Event.Criteria.AndCriteria"
                    },
                    {
                        "$ref": "#/components/schemas/idoit.Bundles.CqrsBundle.Domain.Event.Criteria.NotCriteria"
                    },
                    {
                        "$ref": "#/components/schemas/idoit.Bundles.CqrsBundle.Domain.Event.Criteria.EqCriteria"
                    },
                    {
                        "$ref": "#/components/schemas/idoit.Bundles.CqrsBundle.Domain.Event.Criteria.NotEqCriteria"
                    },
                    {
                        "$ref": "#/components/schemas/idoit.Bundles.CqrsBundle.Domain.Event.Criteria.TypeCriteria"
                    },
                    {
                        "$ref": "#/components/schemas/idoit.Bundles.CqrsBundle.Domain.Event.Criteria.TypesCriteria"
                    },
                    {
                        "$ref": "#/components/schemas/idoit.Bundles.CqrsBundle.Domain.Event.Criteria.LessCriteria"
                    },
                    {
                        "$ref": "#/components/schemas/idoit.Bundles.CqrsBundle.Domain.Event.Criteria.LessOrEqualCriteria"
                    },
                    {
                        "$ref": "#/components/schemas/idoit.Bundles.CqrsBundle.Domain.Event.Criteria.MoreCriteria"
                    },
                    {
                        "$ref": "#/components/schemas/idoit.Bundles.CqrsBundle.Domain.Event.Criteria.MoreOrEqualCriteria"
                    },
                    {
                        "$ref": "#/components/schemas/idoit.Bundles.CqrsBundle.Domain.Event.Criteria.RangeCriteria"
                    },
                    {
                        "$ref": "#/components/schemas/idoit.Bundles.CqrsBundle.Domain.Event.Criteria.LikeCriteria"
                    },
                    {
                        "$ref": "#/components/schemas/idoit.Bundles.CqrsBundle.Domain.Event.Criteria.NotLikeCriteria"
                    },
                    {
                        "$ref": "#/components/schemas/idoit.Bundles.CqrsBundle.Domain.Event.Criteria.InCriteria"
                    },
                    {
                        "$ref": "#/components/schemas/idoit.Bundles.CqrsBundle.Domain.Event.Criteria.NotInCriteria"
                    },
                    {
                        "$ref": "#/components/schemas/idoit.Bundles.CqrsBundle.Domain.Event.Criteria.IsNullCriteria"
                    },
                    {
                        "$ref": "#/components/schemas/idoit.Bundles.CqrsBundle.Domain.Event.Criteria.IsNotNullCriteria"
                    },
                    {
                        "$ref": "#/components/schemas/idoit.Bundles.CqrsBundle.Domain.Event.Criteria.BitAndCriteria"
                    },
                    {
                        "$ref": "#/components/schemas/idoit.Bundles.CqrsBundle.Domain.Event.Criteria.QueryCriteria"
                    },
                    {
                        "$ref": "#/components/schemas/idoit.Bundles.CqrsBundle.Domain.Event.Criteria.OperationCriteria"
                    },
                    {
                        "$ref": "#/components/schemas/idoit.Bundles.CqrsBundle.Domain.Event.Criteria.SourceCriteria"
                    },
                    {
                        "$ref": "#/components/schemas/idoit.Bundles.CqrsBundle.Domain.Event.Criteria.ModelIdCriteria"
                    }
                ]
            },
            "idoit.Bundles.AdvancedSecurityBundle.Permissions.Configured.Entity.ConfiguredPermission": {
                "description": "",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "scope": {
                        "description": "",
                        "type": "string"
                    },
                    "parameters": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    },
                    "operations": {
                        "description": "Bitmask of allowed operations for configured righ",
                        "type": "integer"
                    },
                    "user": {
                        "$ref": "#/components/schemas/idoit.App.Entity.User"
                    },
                    "role": {
                        "$ref": "#/components/schemas/idoit.App.Entity.UserRole"
                    },
                    "group": {
                        "$ref": "#/components/schemas/idoit.App.Entity.UserGroup"
                    }
                }
            },
            "idoit.Bundles.AdvancedSecurityBundle.Projection.Permission.Query.ArrayResult": {
                "description": "",
                "properties": {
                    "results": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/idoit.Bundles.AdvancedSecurityBundle.Permissions.Configured.Entity.ConfiguredPermission"
                        }
                    },
                    "offset": {
                        "description": "",
                        "type": "integer"
                    },
                    "total": {
                        "description": "",
                        "type": "integer"
                    },
                    "perPage": {
                        "description": "",
                        "type": "integer"
                    }
                }
            },
            "idoit.Bundles.AdvancedSecurityBundle.Rights.Definitions.DefinitionCollection": {
                "description": "",
                "properties": {}
            },
            "idoit.Bundles.AdvancedSecurityBundle.Rights.Configured.Entity.ConfiguredRight": {
                "description": "",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "topic": {
                        "description": "",
                        "type": "string"
                    },
                    "method": {
                        "description": "",
                        "type": "string"
                    },
                    "right": {
                        "description": "",
                        "type": "string"
                    },
                    "context": {
                        "description": "",
                        "type": "string"
                    },
                    "operations": {
                        "description": "Bitmask of allowed operations for configured righ",
                        "type": "integer"
                    },
                    "user": {
                        "$ref": "#/components/schemas/idoit.App.Entity.User"
                    },
                    "role": {
                        "$ref": "#/components/schemas/idoit.App.Entity.UserRole"
                    },
                    "group": {
                        "$ref": "#/components/schemas/idoit.App.Entity.UserGroup"
                    }
                }
            },
            "idoit.Bundles.AdvancedSecurityBundle.Projection.Right.Query.ArrayResult": {
                "description": "",
                "properties": {
                    "results": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/idoit.Bundles.AdvancedSecurityBundle.Rights.Configured.Entity.ConfiguredRight"
                        }
                    },
                    "offset": {
                        "description": "",
                        "type": "integer"
                    },
                    "total": {
                        "description": "",
                        "type": "integer"
                    },
                    "perPage": {
                        "description": "",
                        "type": "integer"
                    }
                }
            },
            "idoit.Bundles.CqrsBundle.Domain.Model.ModelMeta": {
                "description": "",
                "properties": {
                    "version": {
                        "description": "",
                        "type": "integer"
                    },
                    "changed": {
                        "description": "",
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "idoit.Bundles.ExportBundle.Entity.Export": {
                "description": "Class Expo",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "meta": {
                        "$ref": "#/components/schemas/idoit.Bundles.CqrsBundle.Domain.Model.ModelMeta"
                    },
                    "status": {
                        "description": "",
                        "type": "integer"
                    },
                    "exportStatus": {
                        "description": "",
                        "type": "string"
                    },
                    "fileId": {
                        "description": "",
                        "type": "string"
                    },
                    "error": {
                        "description": "",
                        "type": "string"
                    },
                    "started": {
                        "description": "",
                        "type": "string",
                        "format": "date-time"
                    },
                    "completed": {
                        "description": "",
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "idoit.Bundles.ExportBundle.Projection.Export.Query.ArrayResult": {
                "description": "",
                "properties": {
                    "results": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/idoit.Bundles.ExportBundle.Entity.Export"
                        }
                    },
                    "offset": {
                        "description": "",
                        "type": "integer"
                    },
                    "total": {
                        "description": "",
                        "type": "integer"
                    },
                    "perPage": {
                        "description": "",
                        "type": "integer"
                    }
                }
            },
            "idoit.Bundles.FileBundle.Entity.File": {
                "description": "Class File",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "meta": {
                        "$ref": "#/components/schemas/idoit.Bundles.CqrsBundle.Domain.Model.ModelMeta"
                    },
                    "status": {
                        "description": "",
                        "type": "integer"
                    },
                    "title": {
                        "description": "",
                        "type": "string"
                    },
                    "size": {
                        "description": "",
                        "type": "integer"
                    },
                    "location": {
                        "description": "",
                        "type": "string"
                    },
                    "checksum": {
                        "description": "",
                        "type": "string"
                    },
                    "contentType": {
                        "description": "",
                        "type": "string"
                    },
                    "format": {
                        "description": "",
                        "type": "string"
                    },
                    "isEncrypted": {
                        "description": "",
                        "type": "boolean"
                    }
                }
            },
            "idoit.Bundles.FileBundle.Projection.File.Query.ArrayResult": {
                "description": "",
                "properties": {
                    "results": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/idoit.Bundles.FileBundle.Entity.File"
                        }
                    },
                    "offset": {
                        "description": "",
                        "type": "integer"
                    },
                    "total": {
                        "description": "",
                        "type": "integer"
                    },
                    "perPage": {
                        "description": "",
                        "type": "integer"
                    }
                }
            },
            "idoit.Bundles.ImportBundle.Source.Csv.Mapping": {
                "description": "Class Mapping",
                "properties": {
                    "column": {
                        "description": "",
                        "type": "integer"
                    },
                    "attribute": {
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "idoit.Bundles.ImportBundle.Source.CsvSource": {
                "description": "",
                "properties": {
                    "file": {
                        "description": "",
                        "type": "string"
                    },
                    "hasHeader": {
                        "description": "",
                        "type": "boolean"
                    },
                    "separator": {
                        "description": "",
                        "type": "string"
                    },
                    "mvSeparator": {
                        "description": "",
                        "type": "string"
                    },
                    "mapping": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/idoit.Bundles.ImportBundle.Source.Csv.Mapping"
                        }
                    },
                    "type": {
                        "description": "",
                        "type": "string",
                        "enum": [
                            "csv"
                        ]
                    }
                }
            },
            "idoit.Bundles.ImportBundle.Source.Source": {
                "description": "",
                "type": "object",
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "csv": "#/components/schemas/idoit.Bundles.ImportBundle.Source.CsvSource"
                    }
                },
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/idoit.Bundles.ImportBundle.Source.CsvSource"
                    }
                ]
            },
            "idoit.Bundles.ImportBundle.Matching.Identify": {
                "description": "Class Identify",
                "properties": {
                    "attribute": {
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "idoit.Bundles.ImportBundle.Matching.Matching": {
                "description": "Class Matching",
                "properties": {
                    "class": {
                        "description": "",
                        "type": "string"
                    },
                    "identify": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/idoit.Bundles.ImportBundle.Matching.Identify"
                        }
                    },
                    "overwrite": {
                        "description": "",
                        "type": "boolean"
                    },
                    "mvEmptyStrategy": {
                        "description": "",
                        "type": "string"
                    },
                    "mvCreateStrategy": {
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "idoit.Bundles.ImportBundle.Domain.Import.Import": {
                "description": "",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "meta": {
                        "$ref": "#/components/schemas/idoit.Bundles.CqrsBundle.Domain.Model.ModelMeta"
                    },
                    "source": {
                        "$ref": "#/components/schemas/idoit.Bundles.ImportBundle.Source.Source"
                    },
                    "matching": {
                        "$ref": "#/components/schemas/idoit.Bundles.ImportBundle.Matching.Matching"
                    },
                    "status": {
                        "description": "",
                        "type": "integer"
                    },
                    "logId": {
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "idoit.Bundles.ImportBundle.Extractor.Csv.LineContext": {
                "description": "Class LineContex",
                "properties": {
                    "line": {
                        "description": "",
                        "type": "integer"
                    },
                    "type": {
                        "description": "",
                        "type": "string",
                        "enum": [
                            "line"
                        ]
                    }
                }
            },
            "idoit.Bundles.ImportBundle.Extractor.Context": {
                "description": "",
                "type": "object",
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "line": "#/components/schemas/idoit.Bundles.ImportBundle.Extractor.Csv.LineContext"
                    }
                },
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/idoit.Bundles.ImportBundle.Extractor.Csv.LineContext"
                    }
                ]
            },
            "idoit.Bundles.ImportBundle.Extractor.Data": {
                "description": "Class Data",
                "properties": {
                    "context": {
                        "$ref": "#/components/schemas/idoit.Bundles.ImportBundle.Extractor.Context"
                    },
                    "data": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                }
            },
            "idoit.Bundles.ImportBundle.Projection.Import.Query.DataArrayResult": {
                "description": "",
                "properties": {
                    "results": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/idoit.Bundles.ImportBundle.Extractor.Data"
                        }
                    },
                    "offset": {
                        "description": "",
                        "type": "integer"
                    },
                    "total": {
                        "description": "",
                        "type": "integer"
                    },
                    "perPage": {
                        "description": "",
                        "type": "integer"
                    }
                }
            },
            "idoit.Bundles.ImportBundle.Entity.Import": {
                "description": "Class Impo",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "meta": {
                        "$ref": "#/components/schemas/idoit.Bundles.CqrsBundle.Domain.Model.ModelMeta"
                    },
                    "source": {
                        "$ref": "#/components/schemas/idoit.Bundles.ImportBundle.Source.Source"
                    },
                    "matching": {
                        "$ref": "#/components/schemas/idoit.Bundles.ImportBundle.Matching.Matching"
                    },
                    "status": {
                        "description": "",
                        "type": "integer"
                    },
                    "logId": {
                        "description": "",
                        "type": "string"
                    },
                    "processed": {
                        "description": "",
                        "type": "integer"
                    },
                    "prepared": {
                        "description": "",
                        "type": "integer"
                    },
                    "failed": {
                        "description": "",
                        "type": "integer"
                    }
                }
            },
            "idoit.Bundles.ImportBundle.Projection.Import.Query.ArrayResult": {
                "description": "",
                "properties": {
                    "results": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/idoit.Bundles.ImportBundle.Entity.Import"
                        }
                    },
                    "offset": {
                        "description": "",
                        "type": "integer"
                    },
                    "total": {
                        "description": "",
                        "type": "integer"
                    },
                    "perPage": {
                        "description": "",
                        "type": "integer"
                    }
                }
            },
            "idoit.Bundles.ReportBundle.Data.FieldSelect": {
                "description": "",
                "properties": {
                    "field": {
                        "description": "",
                        "type": "string"
                    },
                    "name": {
                        "description": "",
                        "type": "string"
                    },
                    "hidden": {
                        "description": "",
                        "type": "boolean"
                    },
                    "type": {
                        "description": "",
                        "type": "string",
                        "enum": [
                            "path"
                        ]
                    }
                }
            },
            "idoit.Bundles.ReportBundle.Data.SubSelect": {
                "description": "",
                "properties": {
                    "field": {
                        "description": "",
                        "type": "string"
                    },
                    "name": {
                        "description": "",
                        "type": "string"
                    },
                    "hidden": {
                        "description": "",
                        "type": "boolean"
                    },
                    "type": {
                        "description": "",
                        "type": "string",
                        "enum": [
                            "subselect"
                        ]
                    },
                    "selects": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/idoit.Bundles.ReportBundle.Data.Select"
                        }
                    }
                }
            },
            "idoit.Bundles.ReportBundle.Data.Select": {
                "description": "",
                "type": "object",
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "path": "#/components/schemas/idoit.Bundles.ReportBundle.Data.FieldSelect",
                        "subselect": "#/components/schemas/idoit.Bundles.ReportBundle.Data.SubSelect"
                    }
                },
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/idoit.Bundles.ReportBundle.Data.FieldSelect"
                    },
                    {
                        "$ref": "#/components/schemas/idoit.Bundles.ReportBundle.Data.SubSelect"
                    }
                ]
            },
            "idoit.Bundles.ReferenceBundle.Domain.Reference.Model.EntryAssigned": {
                "description": "",
                "properties": {
                    "category": {
                        "description": "",
                        "type": "string"
                    },
                    "field": {
                        "description": "",
                        "type": "string"
                    },
                    "type": {
                        "description": "",
                        "type": "string",
                        "enum": [
                            "assigned"
                        ]
                    }
                }
            },
            "idoit.Bundles.ReferenceBundle.Domain.Reference.Model.EntrySet": {
                "description": "",
                "properties": {
                    "category": {
                        "description": "",
                        "type": "string"
                    },
                    "field": {
                        "description": "",
                        "type": "string"
                    },
                    "type": {
                        "description": "",
                        "type": "string",
                        "enum": [
                            "set"
                        ]
                    }
                }
            },
            "idoit.Bundles.ReferenceBundle.Domain.Reference.Model.ClassAssigned": {
                "description": "",
                "properties": {
                    "type": {
                        "description": "",
                        "type": "string",
                        "enum": [
                            "class"
                        ]
                    }
                }
            },
            "idoit.Bundles.ReferenceBundle.Domain.Reference.Model.FileAssigned": {
                "description": "",
                "properties": {
                    "type": {
                        "description": "",
                        "type": "string",
                        "enum": [
                            "file"
                        ]
                    }
                }
            },
            "idoit.Bundles.ReferenceBundle.Domain.Reference.Model.PermissionAssigned": {
                "description": "",
                "properties": {
                    "type": {
                        "description": "",
                        "type": "string",
                        "enum": [
                            "permission"
                        ]
                    }
                }
            },
            "idoit.Bundles.ReferenceBundle.Domain.Reference.Model.ReferenceInfo": {
                "description": "Class ReferenceInfo",
                "type": "object",
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "assigned": "#/components/schemas/idoit.Bundles.ReferenceBundle.Domain.Reference.Model.EntryAssigned",
                        "set": "#/components/schemas/idoit.Bundles.ReferenceBundle.Domain.Reference.Model.EntrySet",
                        "class": "#/components/schemas/idoit.Bundles.ReferenceBundle.Domain.Reference.Model.ClassAssigned",
                        "file": "#/components/schemas/idoit.Bundles.ReferenceBundle.Domain.Reference.Model.FileAssigned",
                        "permission": "#/components/schemas/idoit.Bundles.ReferenceBundle.Domain.Reference.Model.PermissionAssigned"
                    }
                },
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/idoit.Bundles.ReferenceBundle.Domain.Reference.Model.EntryAssigned"
                    },
                    {
                        "$ref": "#/components/schemas/idoit.Bundles.ReferenceBundle.Domain.Reference.Model.EntrySet"
                    },
                    {
                        "$ref": "#/components/schemas/idoit.Bundles.ReferenceBundle.Domain.Reference.Model.ClassAssigned"
                    },
                    {
                        "$ref": "#/components/schemas/idoit.Bundles.ReferenceBundle.Domain.Reference.Model.FileAssigned"
                    },
                    {
                        "$ref": "#/components/schemas/idoit.Bundles.ReferenceBundle.Domain.Reference.Model.PermissionAssigned"
                    }
                ]
            },
            "idoit.Bundles.ReferenceBundle.Entity.Reference": {
                "description": "",
                "properties": {
                    "hash": {
                        "description": "",
                        "type": "string"
                    },
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "info": {
                        "$ref": "#/components/schemas/idoit.Bundles.ReferenceBundle.Domain.Reference.Model.ReferenceInfo"
                    },
                    "object": {
                        "description": "",
                        "type": "string"
                    },
                    "reference": {
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "idoit.Bundles.ReferenceBundle.Projection.Query.ArrayResult": {
                "description": "",
                "properties": {
                    "results": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/idoit.Bundles.ReferenceBundle.Entity.Reference"
                        }
                    },
                    "offset": {
                        "description": "",
                        "type": "integer"
                    },
                    "total": {
                        "description": "",
                        "type": "integer"
                    },
                    "perPage": {
                        "description": "",
                        "type": "integer"
                    }
                }
            },
            "idoit.Bundles.LicenseBundle.Entity.License": {
                "description": "",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "meta": {
                        "$ref": "#/components/schemas/idoit.Bundles.CqrsBundle.Domain.Model.ModelMeta"
                    },
                    "status": {
                        "description": "",
                        "type": "boolean"
                    },
                    "externalId": {
                        "description": "",
                        "type": "string"
                    },
                    "isActive": {
                        "description": "",
                        "type": "boolean"
                    },
                    "licensedObjects": {
                        "description": "",
                        "type": "integer"
                    },
                    "licensedSystems": {
                        "description": "",
                        "type": "integer"
                    },
                    "productType": {
                        "description": "",
                        "type": "string"
                    },
                    "productId": {
                        "description": "",
                        "type": "string"
                    },
                    "productName": {
                        "description": "",
                        "type": "string"
                    },
                    "isEvaluation": {
                        "description": "",
                        "type": "boolean"
                    },
                    "environment": {
                        "description": "",
                        "type": "string"
                    },
                    "validFrom": {
                        "description": "",
                        "type": "string",
                        "format": "date-time"
                    },
                    "validTo": {
                        "description": "",
                        "type": "string",
                        "format": "date-time"
                    },
                    "created": {
                        "description": "",
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "idoit.Bundles.LicenseBundle.Projection.License.Query.ArrayResult": {
                "description": "",
                "properties": {
                    "results": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/idoit.Bundles.LicenseBundle.Entity.License"
                        }
                    },
                    "offset": {
                        "description": "",
                        "type": "integer"
                    },
                    "total": {
                        "description": "",
                        "type": "integer"
                    },
                    "perPage": {
                        "description": "",
                        "type": "integer"
                    }
                }
            },
            "idoit.Bundles.LicenseBundle.Data.Usage": {
                "description": "",
                "properties": {
                    "licensed": {
                        "description": "",
                        "type": "integer"
                    },
                    "active": {
                        "description": "",
                        "type": "integer"
                    }
                }
            },
            "idoit.Bundles.PresetBundle.PresetItem.PresetItem": {
                "description": "Interface to represent preset items.",
                "properties": {}
            },
            "idoit.Bundles.PresetBundle.Projection.Preset.Query.ArrayResult": {
                "description": "",
                "properties": {
                    "results": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/idoit.Bundles.PresetBundle.PresetItem.PresetItem"
                        }
                    },
                    "offset": {
                        "description": "",
                        "type": "integer"
                    },
                    "total": {
                        "description": "",
                        "type": "integer"
                    },
                    "perPage": {
                        "description": "",
                        "type": "integer"
                    }
                }
            },
            "idoit.Bundles.AdvancedSecurityBundle.Projection.ApiToken.Query.ArrayResult": {
                "description": "",
                "properties": {
                    "results": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/idoit.Bundles.ApiBundle.Entity.ApiToken"
                        }
                    },
                    "offset": {
                        "description": "",
                        "type": "integer"
                    },
                    "total": {
                        "description": "",
                        "type": "integer"
                    },
                    "perPage": {
                        "description": "",
                        "type": "integer"
                    }
                }
            },
            "idoit.Bundles.AdvancedSecurityBundle.Projection.UserGroup.Query.ArrayResult": {
                "description": "",
                "properties": {
                    "results": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/idoit.App.Entity.UserGroup"
                        }
                    },
                    "offset": {
                        "description": "",
                        "type": "integer"
                    },
                    "total": {
                        "description": "",
                        "type": "integer"
                    },
                    "perPage": {
                        "description": "",
                        "type": "integer"
                    }
                }
            },
            "idoit.Bundles.ReportBundle.Entity.Report": {
                "description": "",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "meta": {
                        "$ref": "#/components/schemas/idoit.Bundles.CqrsBundle.Domain.Model.ModelMeta"
                    },
                    "title": {
                        "description": "",
                        "type": "string"
                    },
                    "status": {
                        "description": "",
                        "type": "integer"
                    },
                    "created": {
                        "description": "",
                        "type": "string",
                        "format": "date-time"
                    },
                    "owner": {
                        "description": "",
                        "type": "string"
                    },
                    "updated": {
                        "description": "",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedBy": {
                        "description": "",
                        "type": "string"
                    },
                    "description": {
                        "description": "",
                        "type": "string"
                    },
                    "folder": {
                        "description": "",
                        "type": "string"
                    },
                    "filters": {
                        "$ref": "#/components/schemas/idoit.Bundles.CqrsBundle.Domain.Event.Criteria.Criteria"
                    }
                }
            },
            "idoit.Bundles.ReportBundle.Projection.Report.Query.ArrayResult": {
                "description": "",
                "properties": {
                    "results": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/idoit.Bundles.ReportBundle.Entity.Report"
                        }
                    },
                    "offset": {
                        "description": "",
                        "type": "integer"
                    },
                    "total": {
                        "description": "",
                        "type": "integer"
                    },
                    "perPage": {
                        "description": "",
                        "type": "integer"
                    }
                }
            },
            "idoit.Bundles.AddonBundle.Data.Route.SpaRoute": {
                "description": "",
                "properties": {
                    "name": {
                        "description": "",
                        "type": "string"
                    },
                    "path": {
                        "description": "",
                        "type": "string"
                    },
                    "component": {
                        "description": "",
                        "type": "string"
                    },
                    "menu": {
                        "description": "",
                        "type": "string"
                    },
                    "resources": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "type": {
                        "description": "",
                        "type": "string",
                        "enum": [
                            "spa"
                        ]
                    }
                }
            },
            "idoit.Bundles.AddonBundle.Data.Route.ThirdPartyRoute": {
                "description": "",
                "properties": {
                    "name": {
                        "description": "",
                        "type": "string"
                    },
                    "path": {
                        "description": "",
                        "type": "string"
                    },
                    "menu": {
                        "description": "",
                        "type": "string"
                    },
                    "type": {
                        "description": "",
                        "type": "string",
                        "enum": [
                            "url"
                        ]
                    }
                }
            },
            "idoit.Bundles.AddonBundle.Data.Route.RouteInfo": {
                "description": "",
                "type": "object",
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "spa": "#/components/schemas/idoit.Bundles.AddonBundle.Data.Route.SpaRoute",
                        "url": "#/components/schemas/idoit.Bundles.AddonBundle.Data.Route.ThirdPartyRoute"
                    }
                },
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/idoit.Bundles.AddonBundle.Data.Route.SpaRoute"
                    },
                    {
                        "$ref": "#/components/schemas/idoit.Bundles.AddonBundle.Data.Route.ThirdPartyRoute"
                    }
                ]
            },
            "idoit.Bundles.AddonBundle.Data.Setting.StringSettingInfo": {
                "description": "",
                "properties": {
                    "name": {
                        "description": "",
                        "type": "string"
                    },
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "default": {
                        "description": "",
                        "type": "string"
                    },
                    "type": {
                        "description": "",
                        "type": "string",
                        "enum": [
                            "string"
                        ]
                    }
                }
            },
            "idoit.Bundles.AddonBundle.Data.Setting.NumberSettingInfo": {
                "description": "",
                "properties": {
                    "name": {
                        "description": "",
                        "type": "string"
                    },
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "default": {
                        "description": "",
                        "type": "integer"
                    },
                    "type": {
                        "description": "",
                        "type": "string",
                        "enum": [
                            "int"
                        ]
                    }
                }
            },
            "idoit.Bundles.AddonBundle.Data.Setting.SettingInfo": {
                "description": "",
                "type": "object",
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "string": "#/components/schemas/idoit.Bundles.AddonBundle.Data.Setting.StringSettingInfo",
                        "int": "#/components/schemas/idoit.Bundles.AddonBundle.Data.Setting.NumberSettingInfo"
                    }
                },
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/idoit.Bundles.AddonBundle.Data.Setting.StringSettingInfo"
                    },
                    {
                        "$ref": "#/components/schemas/idoit.Bundles.AddonBundle.Data.Setting.NumberSettingInfo"
                    }
                ]
            },
            "idoit.Bundles.AddonBundle.Data.Hook.UrlHook": {
                "description": "",
                "properties": {
                    "trigger": {
                        "description": "",
                        "type": "string"
                    },
                    "url": {
                        "description": "",
                        "type": "string"
                    },
                    "type": {
                        "description": "",
                        "type": "string",
                        "enum": [
                            "url"
                        ]
                    }
                }
            },
            "idoit.Bundles.AddonBundle.Data.Hook.HookInfo": {
                "description": "",
                "type": "object",
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "url": "#/components/schemas/idoit.Bundles.AddonBundle.Data.Hook.UrlHook"
                    }
                },
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/idoit.Bundles.AddonBundle.Data.Hook.UrlHook"
                    }
                ]
            },
            "idoit.Bundles.AddonBundle.Data.Cmdb.Collection": {
                "description": "",
                "properties": {
                    "refId": {
                        "description": "",
                        "type": "string"
                    },
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "title": {
                        "description": "",
                        "type": "string"
                    },
                    "classes": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "idoit.Bundles.AddonBundle.Data.Cmdb.Classification": {
                "description": "",
                "properties": {
                    "refId": {
                        "description": "",
                        "type": "string"
                    },
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "icon": {
                        "description": "",
                        "type": "string"
                    },
                    "title": {
                        "description": "",
                        "type": "string"
                    },
                    "categories": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "idoit.Bundles.AddonBundle.Data.Cmdb.Property": {
                "description": "",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "title": {
                        "description": "",
                        "type": "string"
                    },
                    "type": {
                        "description": "",
                        "type": "string"
                    },
                    "config": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                }
            },
            "idoit.Bundles.AddonBundle.Data.Cmdb.Category": {
                "description": "",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "title": {
                        "description": "",
                        "type": "string"
                    },
                    "multivalue": {
                        "description": "",
                        "type": "boolean"
                    },
                    "properties": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/idoit.Bundles.AddonBundle.Data.Cmdb.Property"
                        }
                    }
                }
            },
            "idoit.Bundles.AddonBundle.Data.Cmdb.Cmdb": {
                "description": "",
                "properties": {
                    "collections": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/idoit.Bundles.AddonBundle.Data.Cmdb.Collection"
                        }
                    },
                    "classes": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/idoit.Bundles.AddonBundle.Data.Cmdb.Classification"
                        }
                    },
                    "categories": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/idoit.Bundles.AddonBundle.Data.Cmdb.Category"
                        }
                    }
                }
            },
            "idoit.Bundles.AddonBundle.Data.AddonInfo": {
                "description": "Class AddonInfo",
                "properties": {
                    "identifier": {
                        "description": "",
                        "type": "string"
                    },
                    "title": {
                        "description": "",
                        "type": "string"
                    },
                    "description": {
                        "description": "",
                        "type": "string"
                    },
                    "vendor": {
                        "description": "",
                        "type": "string"
                    },
                    "product": {
                        "description": "",
                        "type": "string"
                    },
                    "version": {
                        "description": "",
                        "type": "string"
                    },
                    "routes": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/idoit.Bundles.AddonBundle.Data.Route.RouteInfo"
                        }
                    },
                    "settings": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/idoit.Bundles.AddonBundle.Data.Setting.SettingInfo"
                        }
                    },
                    "hooks": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/idoit.Bundles.AddonBundle.Data.Hook.HookInfo"
                        }
                    },
                    "cmdb": {
                        "$ref": "#/components/schemas/idoit.Bundles.AddonBundle.Data.Cmdb.Cmdb"
                    }
                }
            },
            "idoit.Bundles.AddonBundle.Data.Server.RemoteInstance": {
                "description": "",
                "properties": {
                    "host": {
                        "description": "",
                        "type": "string"
                    },
                    "type": {
                        "description": "",
                        "type": "string",
                        "enum": [
                            "remote"
                        ]
                    }
                }
            },
            "idoit.Bundles.AddonBundle.Data.Server.ServerInfo": {
                "description": "",
                "type": "object",
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "remote": "#/components/schemas/idoit.Bundles.AddonBundle.Data.Server.RemoteInstance"
                    }
                },
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/idoit.Bundles.AddonBundle.Data.Server.RemoteInstance"
                    }
                ]
            },
            "idoit.Bundles.AddonBundle.Entity.Addon": {
                "description": "",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "meta": {
                        "$ref": "#/components/schemas/idoit.Bundles.CqrsBundle.Domain.Model.ModelMeta"
                    },
                    "info": {
                        "$ref": "#/components/schemas/idoit.Bundles.AddonBundle.Data.AddonInfo"
                    },
                    "server": {
                        "$ref": "#/components/schemas/idoit.Bundles.AddonBundle.Data.Server.ServerInfo"
                    },
                    "status": {
                        "description": "",
                        "type": "string"
                    },
                    "enabled": {
                        "description": "",
                        "type": "boolean"
                    }
                }
            },
            "idoit.Bundles.AddonBundle.Projection.Addon.Query.ArrayResult": {
                "description": "",
                "properties": {
                    "results": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/idoit.Bundles.AddonBundle.Entity.Addon"
                        }
                    },
                    "offset": {
                        "description": "",
                        "type": "integer"
                    },
                    "total": {
                        "description": "",
                        "type": "integer"
                    },
                    "perPage": {
                        "description": "",
                        "type": "integer"
                    }
                }
            },
            "idoit.Bundles.FavoriteBundle.Entity.SimpleFavoriteItem": {
                "description": "Class SimpleFavoriteItem.",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "type": {
                        "description": "",
                        "type": "string"
                    },
                    "items": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "idoit.Bundles.PresetBundle.Entity.Filter": {
                "description": "",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "status": {
                        "description": "",
                        "type": "integer"
                    },
                    "created": {
                        "description": "",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated": {
                        "description": "",
                        "type": "string",
                        "format": "date-time"
                    },
                    "lastAuditor": {
                        "$ref": "#/components/schemas/idoit.App.Entity.User"
                    },
                    "presetItem": {
                        "description": "",
                        "type": "string"
                    },
                    "name": {
                        "description": "",
                        "type": "string"
                    },
                    "filter": {
                        "description": "",
                        "type": "string"
                    },
                    "user": {
                        "$ref": "#/components/schemas/idoit.App.Entity.User"
                    }
                }
            },
            "idoit.Bundles.PresetBundle.Projection.Filter.Query.ArrayResult": {
                "description": "",
                "properties": {
                    "results": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/idoit.Bundles.PresetBundle.Entity.Filter"
                        }
                    },
                    "offset": {
                        "description": "",
                        "type": "integer"
                    },
                    "total": {
                        "description": "",
                        "type": "integer"
                    },
                    "perPage": {
                        "description": "",
                        "type": "integer"
                    }
                }
            },
            "idoit.Bundles.CqrsBundle.Domain.Query.ArrayResult": {
                "description": "",
                "properties": {
                    "results": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    },
                    "offset": {
                        "description": "",
                        "type": "integer"
                    },
                    "total": {
                        "description": "",
                        "type": "integer"
                    },
                    "perPage": {
                        "description": "",
                        "type": "integer"
                    }
                }
            },
            "idoit.Bundles.WidgetBundle.Entity.WidgetCollection": {
                "description": "Class WidgetCollectio",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "title": {
                        "description": "",
                        "type": "string"
                    },
                    "widgets": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/idoit.Bundles.WidgetBundle.Entity.Widget"
                        }
                    },
                    "user": {
                        "$ref": "#/components/schemas/idoit.App.Entity.User"
                    }
                }
            },
            "idoit.Bundles.WidgetBundle.Entity.Widget": {
                "description": "Class Widge",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "title": {
                        "description": "",
                        "type": "string"
                    },
                    "widgetType": {
                        "description": "",
                        "type": "string"
                    },
                    "collection": {
                        "$ref": "#/components/schemas/idoit.Bundles.WidgetBundle.Entity.WidgetCollection"
                    }
                }
            },
            "idoit.Bundles.WidgetBundle.Projection.Widget.Query.ArrayResult": {
                "description": "",
                "properties": {
                    "results": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/idoit.Bundles.WidgetBundle.Entity.Widget"
                        }
                    },
                    "offset": {
                        "description": "",
                        "type": "integer"
                    },
                    "total": {
                        "description": "",
                        "type": "integer"
                    },
                    "perPage": {
                        "description": "",
                        "type": "integer"
                    }
                }
            },
            "idoit.Bundles.WidgetBundle.Projection.WidgetCollection.Query.ArrayResult": {
                "description": "",
                "properties": {
                    "results": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/idoit.Bundles.WidgetBundle.Entity.WidgetCollection"
                        }
                    },
                    "offset": {
                        "description": "",
                        "type": "integer"
                    },
                    "total": {
                        "description": "",
                        "type": "integer"
                    },
                    "perPage": {
                        "description": "",
                        "type": "integer"
                    }
                }
            },
            "idoit.Bundles.CqrsIntegrationBundle.Entity.Category": {
                "description": "",
                "properties": {
                    "groups": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "meta": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    },
                    "isMultivalue": {
                        "description": "",
                        "type": "boolean"
                    },
                    "object-fields": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "referencedCategories": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    },
                    "status": {
                        "description": "",
                        "type": "integer"
                    },
                    "title": {
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "idoit.Bundles.CqrsIntegrationBundle.Entity.Property": {
                "description": "",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "status": {
                        "description": "",
                        "type": "integer"
                    },
                    "system": {
                        "description": "",
                        "type": "boolean"
                    },
                    "title": {
                        "description": "",
                        "type": "string"
                    },
                    "type": {
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "idoit.Bundles.CqrsIntegrationBundle.Projection.Property.Query.ArrayResult": {
                "description": "",
                "properties": {
                    "results": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/idoit.Bundles.CqrsIntegrationBundle.Entity.Property"
                        }
                    },
                    "offset": {
                        "description": "",
                        "type": "integer"
                    },
                    "total": {
                        "description": "",
                        "type": "integer"
                    },
                    "perPage": {
                        "description": "",
                        "type": "integer"
                    }
                }
            },
            "idoit.Bundles.CqrsIntegrationBundle.Projection.Category.Query.ArrayResult": {
                "description": "",
                "properties": {
                    "results": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/idoit.Bundles.CqrsIntegrationBundle.Entity.Category"
                        }
                    },
                    "offset": {
                        "description": "",
                        "type": "integer"
                    },
                    "total": {
                        "description": "",
                        "type": "integer"
                    },
                    "perPage": {
                        "description": "",
                        "type": "integer"
                    }
                }
            },
            "idoit.Bundles.DataBundle.Entity.ClassCollection": {
                "description": "",
                "properties": {
                    "title": {
                        "description": "",
                        "type": "string"
                    },
                    "enabled": {
                        "description": "",
                        "type": "boolean"
                    },
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "status": {
                        "description": "",
                        "type": "integer"
                    },
                    "created": {
                        "description": "",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated": {
                        "description": "",
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "idoit.Bundles.CqrsIntegrationBundle.Projection.DataLayer.ClassCollection.Query.ArrayResult": {
                "description": "",
                "properties": {
                    "results": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/idoit.Bundles.DataBundle.Entity.ClassCollection"
                        }
                    },
                    "offset": {
                        "description": "",
                        "type": "integer"
                    },
                    "total": {
                        "description": "",
                        "type": "integer"
                    },
                    "perPage": {
                        "description": "",
                        "type": "integer"
                    }
                }
            },
            "idoit.Bundles.DataBundle.Entity.ObjectClassification": {
                "description": "",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "meta": {
                        "$ref": "#/components/schemas/idoit.Bundles.CqrsBundle.Domain.Model.ModelMeta"
                    },
                    "status": {
                        "description": "",
                        "type": "integer"
                    },
                    "title": {
                        "description": "",
                        "type": "string"
                    },
                    "categories": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "collections": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/idoit.Bundles.DataBundle.Entity.ClassCollection"
                        }
                    },
                    "icon": {
                        "description": "",
                        "type": "string"
                    },
                    "capabilities": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "isContainer": {
                        "description": "",
                        "type": "boolean"
                    },
                    "created": {
                        "description": "",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated": {
                        "description": "",
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "idoit.Bundles.CqrsIntegrationBundle.Projection.DataLayer.Classification.Query.ArrayResult": {
                "description": "",
                "properties": {
                    "results": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/idoit.Bundles.DataBundle.Entity.ObjectClassification"
                        }
                    },
                    "offset": {
                        "description": "",
                        "type": "integer"
                    },
                    "total": {
                        "description": "",
                        "type": "integer"
                    },
                    "perPage": {
                        "description": "",
                        "type": "integer"
                    }
                }
            },
            "idoit.Bundles.InfrastructureBundle.Response.Model.Paging": {
                "description": "",
                "properties": {
                    "offset": {
                        "description": "Results offse",
                        "type": "integer"
                    },
                    "perPage": {
                        "description": "Results per page",
                        "type": "integer"
                    },
                    "total": {
                        "description": "Total results",
                        "type": "integer"
                    }
                }
            },
            "idoit.Bundles.CqrsIntegrationBundle.Projection.DataLayer.IdoitObject.Query.ObjectResult": {
                "description": "",
                "properties": {
                    "paging": {
                        "$ref": "#/components/schemas/idoit.Bundles.InfrastructureBundle.Response.Model.Paging"
                    },
                    "results": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/idoit.cmdb.general"
                        }
                    }
                }
            },
            "idoit.Bundles.CqrsIntegrationBundle.Projection.UserRole.Query.ArrayResult": {
                "description": "",
                "properties": {
                    "results": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/idoit.App.Entity.UserRole"
                        }
                    },
                    "offset": {
                        "description": "",
                        "type": "integer"
                    },
                    "total": {
                        "description": "",
                        "type": "integer"
                    },
                    "perPage": {
                        "description": "",
                        "type": "integer"
                    }
                }
            },
            "idoit.Bundles.CqrsIntegrationBundle.PropertyType.PropertyType": {
                "description": "",
                "properties": {}
            },
            "idoit.Bundles.CqrsIntegrationBundle.PropertyType.Query.ArrayResult": {
                "description": "",
                "properties": {
                    "results": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/idoit.Bundles.CqrsIntegrationBundle.PropertyType.PropertyType"
                        }
                    },
                    "offset": {
                        "description": "",
                        "type": "integer"
                    },
                    "total": {
                        "description": "",
                        "type": "integer"
                    },
                    "perPage": {
                        "description": "",
                        "type": "integer"
                    }
                }
            },
            "idoit.Bundles.CqrsIntegrationBundle.Domain.IdoitObject.Command.CreateEntry": {
                "description": "",
                "properties": {
                    "categoryId": {
                        "description": "Id of category",
                        "type": "string"
                    },
                    "data": {
                        "description": "Properties of category entry",
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                }
            },
            "idoit.Bundles.CqrsIntegrationBundle.Domain.IdoitObject.Command.UpdateCreateType": {
                "description": "",
                "properties": {
                    "data": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    },
                    "type": {
                        "description": "",
                        "type": "string",
                        "enum": [
                            "create"
                        ]
                    }
                }
            },
            "idoit.Bundles.CqrsIntegrationBundle.Domain.IdoitObject.Command.UpdateDeleteType": {
                "description": "",
                "properties": {
                    "conditions": {
                        "$ref": "#/components/schemas/idoit.Bundles.CqrsBundle.Domain.Event.Criteria.Criteria"
                    },
                    "type": {
                        "description": "",
                        "type": "string",
                        "enum": [
                            "delete"
                        ]
                    }
                }
            },
            "idoit.Bundles.CqrsIntegrationBundle.Domain.IdoitObject.Command.UpdateSetDataType": {
                "description": "",
                "properties": {
                    "conditions": {
                        "$ref": "#/components/schemas/idoit.Bundles.CqrsBundle.Domain.Event.Criteria.Criteria"
                    },
                    "data": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    },
                    "type": {
                        "description": "",
                        "type": "string",
                        "enum": [
                            "update"
                        ]
                    }
                }
            },
            "idoit.Bundles.CqrsIntegrationBundle.Domain.IdoitObject.Command.UpdateEntry": {
                "description": "",
                "type": "object",
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "create": "#/components/schemas/idoit.Bundles.CqrsIntegrationBundle.Domain.IdoitObject.Command.UpdateCreateType",
                        "delete": "#/components/schemas/idoit.Bundles.CqrsIntegrationBundle.Domain.IdoitObject.Command.UpdateDeleteType",
                        "update": "#/components/schemas/idoit.Bundles.CqrsIntegrationBundle.Domain.IdoitObject.Command.UpdateSetDataType"
                    }
                },
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/idoit.Bundles.CqrsIntegrationBundle.Domain.IdoitObject.Command.UpdateCreateType"
                    },
                    {
                        "$ref": "#/components/schemas/idoit.Bundles.CqrsIntegrationBundle.Domain.IdoitObject.Command.UpdateDeleteType"
                    },
                    {
                        "$ref": "#/components/schemas/idoit.Bundles.CqrsIntegrationBundle.Domain.IdoitObject.Command.UpdateSetDataType"
                    }
                ]
            },
            "idoit.Bundles.CqrsIntegrationBundle.Domain.IdoitObject.Command.UpdateCategory": {
                "description": "",
                "properties": {
                    "categoryId": {
                        "description": "",
                        "type": "string"
                    },
                    "data": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/idoit.Bundles.CqrsIntegrationBundle.Domain.IdoitObject.Command.UpdateEntry"
                        }
                    }
                }
            },
            "idoit.Bundles.CqrsIntegrationBundle.Projection.DataLayer.Entry.Query.EntryResult": {
                "description": "",
                "properties": {
                    "paging": {
                        "$ref": "#/components/schemas/idoit.Bundles.InfrastructureBundle.Response.Model.Paging"
                    },
                    "results": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/idoit.category.data"
                        }
                    }
                }
            },
            "idoit.Bundles.InfrastructureBundle.Response.Model.CategoryData": {
                "description": "",
                "properties": {}
            },
            "idoit.Bundles.CqrsIntegrationBundle.Entity.DialogType": {
                "description": "Class DialogType",
                "properties": {
                    "class": {
                        "description": "",
                        "type": "string"
                    },
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "meta": {
                        "$ref": "#/components/schemas/idoit.Bundles.CqrsBundle.Domain.Model.ModelMeta"
                    },
                    "status": {
                        "description": "",
                        "type": "integer"
                    },
                    "title": {
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "idoit.Bundles.CqrsIntegrationBundle.Projection.DialogType.Query.ArrayResult": {
                "description": "",
                "properties": {
                    "results": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/idoit.Bundles.CqrsIntegrationBundle.Entity.DialogType"
                        }
                    },
                    "offset": {
                        "description": "",
                        "type": "integer"
                    },
                    "total": {
                        "description": "",
                        "type": "integer"
                    },
                    "perPage": {
                        "description": "",
                        "type": "integer"
                    }
                }
            },
            "idoit.Bundles.CqrsIntegrationBundle.Entity.DialogEntry": {
                "description": "Class DialogEntry",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "identity": {
                        "description": "",
                        "type": "string"
                    },
                    "key": {
                        "description": "",
                        "type": "string"
                    },
                    "meta": {
                        "$ref": "#/components/schemas/idoit.Bundles.CqrsBundle.Domain.Model.ModelMeta"
                    },
                    "status": {
                        "description": "",
                        "type": "integer"
                    },
                    "title": {
                        "description": "",
                        "type": "string"
                    },
                    "titleSorting": {
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "idoit.Bundles.CqrsIntegrationBundle.Projection.Dialog.Query.ArrayResult": {
                "description": "",
                "properties": {
                    "results": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/idoit.Bundles.CqrsIntegrationBundle.Entity.DialogEntry"
                        }
                    },
                    "offset": {
                        "description": "",
                        "type": "integer"
                    },
                    "total": {
                        "description": "",
                        "type": "integer"
                    },
                    "perPage": {
                        "description": "",
                        "type": "integer"
                    }
                }
            },
            "idoit.Bundles.CqrsIntegrationBundle.Projection.DataLayer.Entry.Query.Find": {
                "description": "",
                "properties": {
                    "category": {
                        "description": "Id of category (see [/api/v2/category](#get-/api/v2/category))",
                        "type": "string"
                    },
                    "object": {
                        "description": "Only show category entries belonging to specific objec",
                        "type": "string"
                    },
                    "offset": {
                        "description": "Offset to be applied to the results",
                        "type": "integer"
                    },
                    "select": {
                        "description": "List of attributes to be selected",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "sort": {
                        "description": "Identifier of attribute to be used to sort the results",
                        "type": "string"
                    },
                    "f": {
                        "description": "DEPRECATED: Please use `criteria` instead",
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    },
                    "criteria": {
                        "$ref": "#/components/schemas/idoit.Bundles.CqrsBundle.Domain.Event.Criteria.Criteria"
                    },
                    "ids": {
                        "description": "List of asset ids",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "limit": {
                        "description": "Number of max. results",
                        "type": "integer"
                    }
                }
            },
            "idoit.Bundles.CqrsIntegrationBundle.Projection.DataLayer.IdoitObject.Query.ObjectData.ObjectDataResponse": {
                "description": "",
                "properties": {
                    "objectData": {
                        "$ref": "#/components/schemas/idoit.Bundles.InfrastructureBundle.Response.Model.ObjectData"
                    },
                    "category": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "idoit.Bundles.CqrsIntegrationBundle.Projection.DataLayer.IdoitObject.Query.ObjectData.ObjectDataResponseArrayResult": {
                "description": "",
                "properties": {
                    "results": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/idoit.Bundles.CqrsIntegrationBundle.Projection.DataLayer.IdoitObject.Query.ObjectData.ObjectDataResponse"
                        }
                    },
                    "offset": {
                        "description": "",
                        "type": "integer"
                    },
                    "total": {
                        "description": "",
                        "type": "integer"
                    },
                    "perPage": {
                        "description": "",
                        "type": "integer"
                    }
                }
            },
            "idoit.Bundles.DataBundle.Entity.Property.Purpose": {
                "description": "",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "status": {
                        "description": "",
                        "type": "integer"
                    },
                    "created": {
                        "description": "",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated": {
                        "description": "",
                        "type": "string",
                        "format": "date-time"
                    },
                    "lastAuditor": {
                        "$ref": "#/components/schemas/idoit.App.Entity.User"
                    },
                    "title": {
                        "description": "",
                        "type": "string"
                    },
                    "identity": {
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "idoit.Bundles.DataBundle.Entity.Property.LifecycleStage": {
                "description": "",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "status": {
                        "description": "",
                        "type": "integer"
                    },
                    "created": {
                        "description": "",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated": {
                        "description": "",
                        "type": "string",
                        "format": "date-time"
                    },
                    "lastAuditor": {
                        "$ref": "#/components/schemas/idoit.App.Entity.User"
                    },
                    "title": {
                        "description": "",
                        "type": "string"
                    },
                    "identity": {
                        "description": "",
                        "type": "string"
                    },
                    "color": {
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "idoit.Bundles.DataBundle.Entity.Property.Tag": {
                "description": "",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "status": {
                        "description": "",
                        "type": "integer"
                    },
                    "created": {
                        "description": "",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated": {
                        "description": "",
                        "type": "string",
                        "format": "date-time"
                    },
                    "lastAuditor": {
                        "$ref": "#/components/schemas/idoit.App.Entity.User"
                    },
                    "title": {
                        "description": "",
                        "type": "string"
                    },
                    "identity": {
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "idoit.Bundles.DataBundle.Entity.IdoitObject": {
                "description": "",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "status": {
                        "description": "",
                        "type": "integer"
                    },
                    "created": {
                        "description": "",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated": {
                        "description": "",
                        "type": "string",
                        "format": "date-time"
                    },
                    "creator": {
                        "$ref": "#/components/schemas/idoit.App.Entity.User"
                    },
                    "lastAuditor": {
                        "$ref": "#/components/schemas/idoit.App.Entity.User"
                    },
                    "classification": {
                        "$ref": "#/components/schemas/idoit.Bundles.DataBundle.Entity.ObjectClassification"
                    },
                    "title": {
                        "description": "",
                        "type": "string"
                    },
                    "titleSorting": {
                        "description": "",
                        "type": "string"
                    },
                    "description": {
                        "description": "",
                        "type": "string"
                    },
                    "purpose": {
                        "$ref": "#/components/schemas/idoit.Bundles.DataBundle.Entity.Property.Purpose"
                    },
                    "lifecycleStage": {
                        "$ref": "#/components/schemas/idoit.Bundles.DataBundle.Entity.Property.LifecycleStage"
                    },
                    "tags": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/idoit.Bundles.DataBundle.Entity.Property.Tag"
                        }
                    },
                    "systemId": {
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "idoit.Bundles.DataBundle.Entity.Logbook.LogSet": {
                "description": "Class LogSe",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "object": {
                        "$ref": "#/components/schemas/idoit.Bundles.DataBundle.Entity.IdoitObject"
                    },
                    "entries": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/idoit.Bundles.DataBundle.Entity.Logbook.LogEntry"
                        }
                    },
                    "category": {
                        "description": "",
                        "type": "string"
                    },
                    "context": {
                        "description": "",
                        "type": "string"
                    },
                    "creator": {
                        "$ref": "#/components/schemas/idoit.App.Entity.User"
                    },
                    "status": {
                        "description": "",
                        "type": "integer"
                    },
                    "created": {
                        "description": "",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated": {
                        "description": "",
                        "type": "string",
                        "format": "date-time"
                    },
                    "lastAuditor": {
                        "$ref": "#/components/schemas/idoit.App.Entity.User"
                    }
                }
            },
            "idoit.Bundles.DataBundle.Entity.Logbook.LogEntry": {
                "description": "",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "status": {
                        "description": "",
                        "type": "integer"
                    },
                    "created": {
                        "description": "",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated": {
                        "description": "",
                        "type": "string",
                        "format": "date-time"
                    },
                    "lastAuditor": {
                        "$ref": "#/components/schemas/idoit.App.Entity.User"
                    },
                    "logset": {
                        "$ref": "#/components/schemas/idoit.Bundles.DataBundle.Entity.Logbook.LogSet"
                    },
                    "previousValue": {
                        "description": "",
                        "type": "string"
                    },
                    "newValue": {
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "idoit.basic.logset": {
                "properties": {
                    "category": {
                        "description": "",
                        "type": "string"
                    },
                    "context": {
                        "description": "",
                        "type": "string"
                    },
                    "created": {
                        "description": "",
                        "type": "string",
                        "format": "date-time"
                    },
                    "creator": {
                        "$ref": "#/components/schemas/idoit.App.Entity.User"
                    },
                    "entries": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/idoit.Bundles.DataBundle.Entity.Logbook.LogEntry"
                        }
                    },
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "lastAuditor": {
                        "$ref": "#/components/schemas/idoit.App.Entity.User"
                    },
                    "status": {
                        "description": "",
                        "type": "integer"
                    },
                    "updated": {
                        "description": "",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "idoit.basic.search": {
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "idoit.Bundles.BasicCategoriesBundle.Entity.Category.Network.Access.AccessType": {
                "description": "",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "status": {
                        "description": "",
                        "type": "integer"
                    },
                    "created": {
                        "description": "",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated": {
                        "description": "",
                        "type": "string",
                        "format": "date-time"
                    },
                    "lastAuditor": {
                        "$ref": "#/components/schemas/idoit.App.Entity.User"
                    },
                    "title": {
                        "description": "",
                        "type": "string"
                    },
                    "identity": {
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "idoit.cmdb.access": {
                "properties": {
                    "accessType": {
                        "$ref": "#/components/schemas/idoit.Bundles.BasicCategoriesBundle.Entity.Category.Network.Access.AccessType"
                    },
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "password": {
                        "description": "",
                        "type": "string"
                    },
                    "privateKey": {
                        "description": "",
                        "type": "string"
                    },
                    "privateKeyPassphrase": {
                        "description": "",
                        "type": "string"
                    },
                    "publicKey": {
                        "description": "",
                        "type": "string"
                    },
                    "recoveryInformation": {
                        "description": "",
                        "type": "string"
                    },
                    "title": {
                        "description": "",
                        "type": "string"
                    },
                    "url": {
                        "description": "",
                        "type": "string"
                    },
                    "username": {
                        "description": "",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "idoit.Bundles.BasicCategoriesBundle.Entity.Category.Office.Accounting.CostCenter": {
                "description": "",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "status": {
                        "description": "",
                        "type": "integer"
                    },
                    "created": {
                        "description": "",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated": {
                        "description": "",
                        "type": "string",
                        "format": "date-time"
                    },
                    "lastAuditor": {
                        "$ref": "#/components/schemas/idoit.App.Entity.User"
                    },
                    "title": {
                        "description": "",
                        "type": "string"
                    },
                    "identity": {
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "idoit.Bundles.BasicCategoriesBundle.Entity.Category.Office.Accounting.CostUnit": {
                "description": "",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "status": {
                        "description": "",
                        "type": "integer"
                    },
                    "created": {
                        "description": "",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated": {
                        "description": "",
                        "type": "string",
                        "format": "date-time"
                    },
                    "lastAuditor": {
                        "$ref": "#/components/schemas/idoit.App.Entity.User"
                    },
                    "title": {
                        "description": "",
                        "type": "string"
                    },
                    "identity": {
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "idoit.Bundles.BasicCategoriesBundle.Entity.DialogPlus.Currency": {
                "description": "",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "status": {
                        "description": "",
                        "type": "integer"
                    },
                    "created": {
                        "description": "",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated": {
                        "description": "",
                        "type": "string",
                        "format": "date-time"
                    },
                    "lastAuditor": {
                        "$ref": "#/components/schemas/idoit.App.Entity.User"
                    },
                    "title": {
                        "description": "",
                        "type": "string"
                    },
                    "identity": {
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "idoit.Bundles.DataBundle.Entity.Property.Recurring": {
                "description": "",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "status": {
                        "description": "",
                        "type": "integer"
                    },
                    "created": {
                        "description": "",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated": {
                        "description": "",
                        "type": "string",
                        "format": "date-time"
                    },
                    "lastAuditor": {
                        "$ref": "#/components/schemas/idoit.App.Entity.User"
                    },
                    "title": {
                        "description": "",
                        "type": "string"
                    },
                    "identity": {
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "idoit.cmdb.accounting": {
                "properties": {
                    "annualOperationExpenseCurrency": {
                        "$ref": "#/components/schemas/idoit.Bundles.BasicCategoriesBundle.Entity.DialogPlus.Currency"
                    },
                    "annualOperationExpenseValue": {
                        "description": "",
                        "type": "number"
                    },
                    "costCenter": {
                        "$ref": "#/components/schemas/idoit.Bundles.BasicCategoriesBundle.Entity.Category.Office.Accounting.CostCenter"
                    },
                    "costUnit": {
                        "$ref": "#/components/schemas/idoit.Bundles.BasicCategoriesBundle.Entity.Category.Office.Accounting.CostUnit"
                    },
                    "deliveryDate": {
                        "description": "",
                        "type": "string",
                        "format": "date-time"
                    },
                    "deliveryNumber": {
                        "description": "",
                        "type": "string"
                    },
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "inventoryNumber": {
                        "description": "",
                        "type": "string"
                    },
                    "investmentCostCurrency": {
                        "$ref": "#/components/schemas/idoit.Bundles.BasicCategoriesBundle.Entity.DialogPlus.Currency"
                    },
                    "investmentCostValue": {
                        "description": "",
                        "type": "number"
                    },
                    "invoiceDate": {
                        "description": "",
                        "type": "string",
                        "format": "date-time"
                    },
                    "invoiceNumber": {
                        "description": "",
                        "type": "string"
                    },
                    "orderDate": {
                        "description": "",
                        "type": "string",
                        "format": "date-time"
                    },
                    "orderNumber": {
                        "description": "",
                        "type": "string"
                    },
                    "purchasedAt": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/idoit.Bundles.DataBundle.Entity.IdoitObject"
                        }
                    },
                    "recurring": {
                        "$ref": "#/components/schemas/idoit.Bundles.DataBundle.Entity.Property.Recurring"
                    }
                },
                "type": "object"
            },
            "idoit.Bundles.BasicCategoriesBundle.Entity.Category.Information.Address.Country": {
                "description": "",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "status": {
                        "description": "",
                        "type": "integer"
                    },
                    "created": {
                        "description": "",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated": {
                        "description": "",
                        "type": "string",
                        "format": "date-time"
                    },
                    "lastAuditor": {
                        "$ref": "#/components/schemas/idoit.App.Entity.User"
                    },
                    "title": {
                        "description": "",
                        "type": "string"
                    },
                    "identity": {
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "idoit.cmdb.address": {
                "properties": {
                    "businessEmail": {
                        "description": "",
                        "type": "string"
                    },
                    "businessPhone": {
                        "description": "",
                        "type": "string"
                    },
                    "city": {
                        "description": "",
                        "type": "string"
                    },
                    "country": {
                        "$ref": "#/components/schemas/idoit.Bundles.BasicCategoriesBundle.Entity.Category.Information.Address.Country"
                    },
                    "fax": {
                        "description": "",
                        "type": "string"
                    },
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "mobilePhone": {
                        "description": "",
                        "type": "string"
                    },
                    "postCode": {
                        "description": "",
                        "type": "string"
                    },
                    "privateEmail": {
                        "description": "",
                        "type": "string"
                    },
                    "privatePhone": {
                        "description": "",
                        "type": "string"
                    },
                    "streetAddress": {
                        "description": "",
                        "type": "string"
                    },
                    "streetAddressLine": {
                        "description": "",
                        "type": "string"
                    },
                    "website": {
                        "description": "",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "idoit.Bundles.BasicCategoriesBundle.Entity.Category.Contact.ContactAssignment.ContactRole": {
                "description": "",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "status": {
                        "description": "",
                        "type": "integer"
                    },
                    "created": {
                        "description": "",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated": {
                        "description": "",
                        "type": "string",
                        "format": "date-time"
                    },
                    "lastAuditor": {
                        "$ref": "#/components/schemas/idoit.App.Entity.User"
                    },
                    "title": {
                        "description": "",
                        "type": "string"
                    },
                    "identity": {
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "idoit.cmdb.contactlinkedobjects": {
                "properties": {
                    "contact": {
                        "$ref": "#/components/schemas/idoit.Bundles.DataBundle.Entity.IdoitObject"
                    },
                    "contactRole": {
                        "$ref": "#/components/schemas/idoit.Bundles.BasicCategoriesBundle.Entity.Category.Contact.ContactAssignment.ContactRole"
                    },
                    "id": {
                        "description": "",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "idoit.cmdb.contacts": {
                "properties": {
                    "contactRole": {
                        "$ref": "#/components/schemas/idoit.Bundles.BasicCategoriesBundle.Entity.Category.Contact.ContactAssignment.ContactRole"
                    },
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "object": {
                        "$ref": "#/components/schemas/idoit.Bundles.DataBundle.Entity.IdoitObject"
                    }
                },
                "type": "object"
            },
            "idoit.Bundles.BasicCategoriesBundle.Entity.Category.Office.Contract.ContractType": {
                "description": "",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "status": {
                        "description": "",
                        "type": "integer"
                    },
                    "created": {
                        "description": "",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated": {
                        "description": "",
                        "type": "string",
                        "format": "date-time"
                    },
                    "lastAuditor": {
                        "$ref": "#/components/schemas/idoit.App.Entity.User"
                    },
                    "title": {
                        "description": "",
                        "type": "string"
                    },
                    "identity": {
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "idoit.Bundles.DataBundle.Entity.Property.Period": {
                "description": "",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "status": {
                        "description": "",
                        "type": "integer"
                    },
                    "created": {
                        "description": "",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated": {
                        "description": "",
                        "type": "string",
                        "format": "date-time"
                    },
                    "lastAuditor": {
                        "$ref": "#/components/schemas/idoit.App.Entity.User"
                    },
                    "title": {
                        "description": "",
                        "type": "string"
                    },
                    "identity": {
                        "description": "",
                        "type": "string"
                    },
                    "factor": {
                        "description": "",
                        "type": "number"
                    },
                    "designator": {
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "idoit.cmdb.contract": {
                "properties": {
                    "automaticRenewal": {
                        "description": "",
                        "type": "integer"
                    },
                    "cancelationApplies": {
                        "description": "",
                        "type": "integer"
                    },
                    "cancelationDate": {
                        "description": "",
                        "type": "string",
                        "format": "date-time"
                    },
                    "cancelationPeriod": {
                        "description": "",
                        "type": "integer"
                    },
                    "cancelationPeriodUnit": {
                        "$ref": "#/components/schemas/idoit.Bundles.DataBundle.Entity.Property.Period"
                    },
                    "closeDate": {
                        "description": "",
                        "type": "string",
                        "format": "date-time"
                    },
                    "contractId": {
                        "description": "",
                        "type": "string"
                    },
                    "contractStatus": {
                        "description": "",
                        "type": "integer"
                    },
                    "costCurrency": {
                        "$ref": "#/components/schemas/idoit.Bundles.BasicCategoriesBundle.Entity.DialogPlus.Currency"
                    },
                    "costsIncur": {
                        "description": "",
                        "type": "integer"
                    },
                    "costValue": {
                        "description": "",
                        "type": "number"
                    },
                    "customerId": {
                        "description": "",
                        "type": "string"
                    },
                    "endDate": {
                        "description": "",
                        "type": "string",
                        "format": "date-time"
                    },
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "latestCancelationDateBeforeAutoRenewal": {
                        "description": "",
                        "type": "string"
                    },
                    "overallCostsPerPeriod": {
                        "description": "",
                        "type": "string"
                    },
                    "paymentPeriod": {
                        "description": "",
                        "type": "integer"
                    },
                    "renewalPeriod": {
                        "description": "",
                        "type": "integer"
                    },
                    "renewalPeriodUnit": {
                        "$ref": "#/components/schemas/idoit.Bundles.DataBundle.Entity.Property.Period"
                    },
                    "runtime": {
                        "description": "",
                        "type": "integer"
                    },
                    "runtimeLimited": {
                        "description": "",
                        "type": "integer"
                    },
                    "runtimeUnit": {
                        "$ref": "#/components/schemas/idoit.Bundles.DataBundle.Entity.Property.Period"
                    },
                    "startDate": {
                        "description": "",
                        "type": "string",
                        "format": "date-time"
                    },
                    "type": {
                        "$ref": "#/components/schemas/idoit.Bundles.BasicCategoriesBundle.Entity.Category.Office.Contract.ContractType"
                    }
                },
                "type": "object"
            },
            "idoit.cmdb.contractlinkedobjects": {
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "object": {
                        "$ref": "#/components/schemas/idoit.Bundles.DataBundle.Entity.IdoitObject"
                    }
                },
                "type": "object"
            },
            "idoit.cmdb.contracts": {
                "properties": {
                    "contract": {
                        "$ref": "#/components/schemas/idoit.Bundles.DataBundle.Entity.IdoitObject"
                    },
                    "id": {
                        "description": "",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "idoit.Bundles.BasicCategoriesBundle.Entity.Category.Hardware.Cpu.CpuVendor": {
                "description": "",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "status": {
                        "description": "",
                        "type": "integer"
                    },
                    "created": {
                        "description": "",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated": {
                        "description": "",
                        "type": "string",
                        "format": "date-time"
                    },
                    "lastAuditor": {
                        "$ref": "#/components/schemas/idoit.App.Entity.User"
                    },
                    "title": {
                        "description": "",
                        "type": "string"
                    },
                    "identity": {
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "idoit.Bundles.BasicCategoriesBundle.Entity.Category.Hardware.Cpu.CpuModel": {
                "description": "",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "status": {
                        "description": "",
                        "type": "integer"
                    },
                    "created": {
                        "description": "",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated": {
                        "description": "",
                        "type": "string",
                        "format": "date-time"
                    },
                    "lastAuditor": {
                        "$ref": "#/components/schemas/idoit.App.Entity.User"
                    },
                    "title": {
                        "description": "",
                        "type": "string"
                    },
                    "identity": {
                        "description": "",
                        "type": "string"
                    },
                    "cpuVendor": {
                        "$ref": "#/components/schemas/idoit.Bundles.BasicCategoriesBundle.Entity.Category.Hardware.Cpu.CpuVendor"
                    }
                }
            },
            "idoit.cmdb.cpu": {
                "properties": {
                    "cores": {
                        "description": "",
                        "type": "integer"
                    },
                    "coresShownToOs": {
                        "description": "",
                        "type": "integer"
                    },
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "model": {
                        "$ref": "#/components/schemas/idoit.Bundles.BasicCategoriesBundle.Entity.Category.Hardware.Cpu.CpuModel"
                    },
                    "smtMultiplier": {
                        "description": "",
                        "type": "integer"
                    },
                    "vendor": {
                        "$ref": "#/components/schemas/idoit.Bundles.BasicCategoriesBundle.Entity.Category.Hardware.Cpu.CpuVendor"
                    }
                },
                "type": "object"
            },
            "idoit.Bundles.BasicCategoriesBundle.Entity.Category.Hardware.Display.DisplayResolution": {
                "description": "",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "status": {
                        "description": "",
                        "type": "integer"
                    },
                    "created": {
                        "description": "",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated": {
                        "description": "",
                        "type": "string",
                        "format": "date-time"
                    },
                    "lastAuditor": {
                        "$ref": "#/components/schemas/idoit.App.Entity.User"
                    },
                    "title": {
                        "description": "",
                        "type": "string"
                    },
                    "identity": {
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "idoit.cmdb.display": {
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "resolution": {
                        "$ref": "#/components/schemas/idoit.Bundles.BasicCategoriesBundle.Entity.Category.Hardware.Display.DisplayResolution"
                    },
                    "size": {
                        "description": "",
                        "type": "number"
                    },
                    "speaker": {
                        "description": "",
                        "type": "integer"
                    },
                    "usbHub": {
                        "description": "",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "idoit.Bundles.BasicCategoriesBundle.Entity.Category.Contact.Employee.EmployeeAcademicDegree": {
                "description": "",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "status": {
                        "description": "",
                        "type": "integer"
                    },
                    "created": {
                        "description": "",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated": {
                        "description": "",
                        "type": "string",
                        "format": "date-time"
                    },
                    "lastAuditor": {
                        "$ref": "#/components/schemas/idoit.App.Entity.User"
                    },
                    "title": {
                        "description": "",
                        "type": "string"
                    },
                    "identity": {
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "idoit.cmdb.employee": {
                "properties": {
                    "academicDegree": {
                        "$ref": "#/components/schemas/idoit.Bundles.BasicCategoriesBundle.Entity.Category.Contact.Employee.EmployeeAcademicDegree"
                    },
                    "company": {
                        "$ref": "#/components/schemas/idoit.Bundles.DataBundle.Entity.IdoitObject"
                    },
                    "employeeId": {
                        "description": "",
                        "type": "string"
                    },
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "jobTitle": {
                        "description": "",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "idoit.cmdb.employees": {
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "object": {
                        "$ref": "#/components/schemas/idoit.Bundles.DataBundle.Entity.IdoitObject"
                    }
                },
                "type": "object"
            },
            "idoit.Bundles.BasicCategoriesBundle.Entity.Category.Form.Formfactor.FormfactorType": {
                "description": "",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "status": {
                        "description": "",
                        "type": "integer"
                    },
                    "created": {
                        "description": "",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated": {
                        "description": "",
                        "type": "string",
                        "format": "date-time"
                    },
                    "lastAuditor": {
                        "$ref": "#/components/schemas/idoit.App.Entity.User"
                    },
                    "title": {
                        "description": "",
                        "type": "string"
                    },
                    "identity": {
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "idoit.Bundles.DataBundle.Entity.Property.MeasureUnit": {
                "description": "",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "status": {
                        "description": "",
                        "type": "integer"
                    },
                    "created": {
                        "description": "",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated": {
                        "description": "",
                        "type": "string",
                        "format": "date-time"
                    },
                    "lastAuditor": {
                        "$ref": "#/components/schemas/idoit.App.Entity.User"
                    },
                    "title": {
                        "description": "",
                        "type": "string"
                    },
                    "identity": {
                        "description": "",
                        "type": "string"
                    },
                    "factor": {
                        "description": "",
                        "type": "number"
                    }
                }
            },
            "idoit.Bundles.DataBundle.Entity.Property.WeightUnit": {
                "description": "",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "status": {
                        "description": "",
                        "type": "integer"
                    },
                    "created": {
                        "description": "",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated": {
                        "description": "",
                        "type": "string",
                        "format": "date-time"
                    },
                    "lastAuditor": {
                        "$ref": "#/components/schemas/idoit.App.Entity.User"
                    },
                    "title": {
                        "description": "",
                        "type": "string"
                    },
                    "identity": {
                        "description": "",
                        "type": "string"
                    },
                    "factor": {
                        "description": "",
                        "type": "number"
                    }
                }
            },
            "idoit.cmdb.formfactor": {
                "properties": {
                    "depth": {
                        "description": "",
                        "type": "number"
                    },
                    "height": {
                        "description": "",
                        "type": "number"
                    },
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "rackUnits": {
                        "description": "",
                        "type": "integer"
                    },
                    "type": {
                        "$ref": "#/components/schemas/idoit.Bundles.BasicCategoriesBundle.Entity.Category.Form.Formfactor.FormfactorType"
                    },
                    "unit": {
                        "$ref": "#/components/schemas/idoit.Bundles.DataBundle.Entity.Property.MeasureUnit"
                    },
                    "weight": {
                        "description": "",
                        "type": "number"
                    },
                    "weightUnit": {
                        "$ref": "#/components/schemas/idoit.Bundles.DataBundle.Entity.Property.WeightUnit"
                    },
                    "width": {
                        "description": "",
                        "type": "number"
                    }
                },
                "type": "object"
            },
            "idoit.cmdb.general": {
                "properties": {
                    "classification": {
                        "$ref": "#/components/schemas/idoit.Bundles.DataBundle.Entity.ObjectClassification"
                    },
                    "created": {
                        "description": "",
                        "type": "string",
                        "format": "date-time"
                    },
                    "creator": {
                        "$ref": "#/components/schemas/idoit.App.Entity.User"
                    },
                    "description": {
                        "description": "",
                        "type": "string"
                    },
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "lastAuditor": {
                        "$ref": "#/components/schemas/idoit.App.Entity.User"
                    },
                    "lifecycleStage": {
                        "$ref": "#/components/schemas/idoit.Bundles.DataBundle.Entity.Property.LifecycleStage"
                    },
                    "purpose": {
                        "$ref": "#/components/schemas/idoit.Bundles.DataBundle.Entity.Property.Purpose"
                    },
                    "status": {
                        "description": "",
                        "type": "integer"
                    },
                    "systemId": {
                        "description": "",
                        "type": "string"
                    },
                    "tags": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/idoit.Bundles.DataBundle.Entity.Property.Tag"
                        }
                    },
                    "title": {
                        "description": "",
                        "type": "string"
                    },
                    "updated": {
                        "description": "",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "idoit.Bundles.BasicCategoriesBundle.Entity.Category.Hardware.Graphics.GraphicsVendor": {
                "description": "",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "status": {
                        "description": "",
                        "type": "integer"
                    },
                    "created": {
                        "description": "",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated": {
                        "description": "",
                        "type": "string",
                        "format": "date-time"
                    },
                    "lastAuditor": {
                        "$ref": "#/components/schemas/idoit.App.Entity.User"
                    },
                    "title": {
                        "description": "",
                        "type": "string"
                    },
                    "identity": {
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "idoit.Bundles.BasicCategoriesBundle.Entity.Category.Hardware.Graphics.GraphicsModel": {
                "description": "",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "status": {
                        "description": "",
                        "type": "integer"
                    },
                    "created": {
                        "description": "",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated": {
                        "description": "",
                        "type": "string",
                        "format": "date-time"
                    },
                    "lastAuditor": {
                        "$ref": "#/components/schemas/idoit.App.Entity.User"
                    },
                    "title": {
                        "description": "",
                        "type": "string"
                    },
                    "identity": {
                        "description": "",
                        "type": "string"
                    },
                    "graphicsVendor": {
                        "$ref": "#/components/schemas/idoit.Bundles.BasicCategoriesBundle.Entity.Category.Hardware.Graphics.GraphicsVendor"
                    }
                }
            },
            "idoit.Bundles.BasicCategoriesBundle.Entity.Category.Hardware.Graphics.GraphicsOutput": {
                "description": "",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "status": {
                        "description": "",
                        "type": "integer"
                    },
                    "created": {
                        "description": "",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated": {
                        "description": "",
                        "type": "string",
                        "format": "date-time"
                    },
                    "lastAuditor": {
                        "$ref": "#/components/schemas/idoit.App.Entity.User"
                    },
                    "title": {
                        "description": "",
                        "type": "string"
                    },
                    "identity": {
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "idoit.Bundles.DataBundle.Entity.Property.MemoryUnit": {
                "description": "",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "status": {
                        "description": "",
                        "type": "integer"
                    },
                    "created": {
                        "description": "",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated": {
                        "description": "",
                        "type": "string",
                        "format": "date-time"
                    },
                    "lastAuditor": {
                        "$ref": "#/components/schemas/idoit.App.Entity.User"
                    },
                    "title": {
                        "description": "",
                        "type": "string"
                    },
                    "identity": {
                        "description": "",
                        "type": "string"
                    },
                    "factor": {
                        "description": "",
                        "type": "number"
                    }
                }
            },
            "idoit.cmdb.graphics": {
                "properties": {
                    "firmware": {
                        "description": "",
                        "type": "string"
                    },
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "memory": {
                        "description": "",
                        "type": "number"
                    },
                    "memoryUnit": {
                        "$ref": "#/components/schemas/idoit.Bundles.DataBundle.Entity.Property.MemoryUnit"
                    },
                    "model": {
                        "$ref": "#/components/schemas/idoit.Bundles.BasicCategoriesBundle.Entity.Category.Hardware.Graphics.GraphicsModel"
                    },
                    "outputs": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/idoit.Bundles.BasicCategoriesBundle.Entity.Category.Hardware.Graphics.GraphicsOutput"
                        }
                    },
                    "vendor": {
                        "$ref": "#/components/schemas/idoit.Bundles.BasicCategoriesBundle.Entity.Category.Hardware.Graphics.GraphicsVendor"
                    }
                },
                "type": "object"
            },
            "idoit.Bundles.BasicCategoriesBundle.Entity.Category.Office.Invoice.InvoiceStatus": {
                "description": "",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "status": {
                        "description": "",
                        "type": "integer"
                    },
                    "created": {
                        "description": "",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated": {
                        "description": "",
                        "type": "string",
                        "format": "date-time"
                    },
                    "lastAuditor": {
                        "$ref": "#/components/schemas/idoit.App.Entity.User"
                    },
                    "title": {
                        "description": "",
                        "type": "string"
                    },
                    "identity": {
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "idoit.cmdb.invoice": {
                "properties": {
                    "approvalDate": {
                        "description": "",
                        "type": "string",
                        "format": "date-time"
                    },
                    "approvedBy": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/idoit.Bundles.DataBundle.Entity.IdoitObject"
                        }
                    },
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "invoiceDate": {
                        "description": "",
                        "type": "string",
                        "format": "date-time"
                    },
                    "invoiceNo": {
                        "description": "",
                        "type": "string"
                    },
                    "invoiceStatus": {
                        "$ref": "#/components/schemas/idoit.Bundles.BasicCategoriesBundle.Entity.Category.Office.Invoice.InvoiceStatus"
                    }
                },
                "type": "object"
            },
            "idoit.cmdb.ip_networking": {
                "properties": {
                    "address": {
                        "description": "",
                        "type": "string"
                    },
                    "addressLong": {
                        "description": "",
                        "type": "string"
                    },
                    "createNetwork": {
                        "description": "",
                        "type": "boolean"
                    },
                    "free": {
                        "description": "",
                        "type": "boolean"
                    },
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "network": {
                        "$ref": "#/components/schemas/idoit.Bundles.DataBundle.Entity.IdoitObject"
                    },
                    "subnetmask": {
                        "description": "",
                        "type": "integer"
                    },
                    "type": {
                        "description": "",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "idoit.cmdb.location": {
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "latitude": {
                        "description": "",
                        "type": "number"
                    },
                    "longitude": {
                        "description": "",
                        "type": "number"
                    },
                    "parent": {
                        "$ref": "#/components/schemas/idoit.Bundles.DataBundle.Entity.IdoitObject"
                    }
                },
                "type": "object"
            },
            "idoit.cmdb.locationlinkedobjects": {
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "object": {
                        "$ref": "#/components/schemas/idoit.Bundles.DataBundle.Entity.IdoitObject"
                    }
                },
                "type": "object"
            },
            "idoit.Bundles.BasicCategoriesBundle.Entity.Category.Hardware.Memory.MemoryVendor": {
                "description": "",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "status": {
                        "description": "",
                        "type": "integer"
                    },
                    "created": {
                        "description": "",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated": {
                        "description": "",
                        "type": "string",
                        "format": "date-time"
                    },
                    "lastAuditor": {
                        "$ref": "#/components/schemas/idoit.App.Entity.User"
                    },
                    "title": {
                        "description": "",
                        "type": "string"
                    },
                    "identity": {
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "idoit.Bundles.BasicCategoriesBundle.Entity.Category.Hardware.Memory.MemoryModel": {
                "description": "",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "status": {
                        "description": "",
                        "type": "integer"
                    },
                    "created": {
                        "description": "",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated": {
                        "description": "",
                        "type": "string",
                        "format": "date-time"
                    },
                    "lastAuditor": {
                        "$ref": "#/components/schemas/idoit.App.Entity.User"
                    },
                    "title": {
                        "description": "",
                        "type": "string"
                    },
                    "identity": {
                        "description": "",
                        "type": "string"
                    },
                    "memoryVendor": {
                        "$ref": "#/components/schemas/idoit.Bundles.BasicCategoriesBundle.Entity.Category.Hardware.Memory.MemoryVendor"
                    }
                }
            },
            "idoit.Bundles.BasicCategoriesBundle.Entity.Category.Hardware.Memory.MemoryType": {
                "description": "",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "status": {
                        "description": "",
                        "type": "integer"
                    },
                    "created": {
                        "description": "",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated": {
                        "description": "",
                        "type": "string",
                        "format": "date-time"
                    },
                    "lastAuditor": {
                        "$ref": "#/components/schemas/idoit.App.Entity.User"
                    },
                    "title": {
                        "description": "",
                        "type": "string"
                    },
                    "identity": {
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "idoit.Bundles.BasicCategoriesBundle.Entity.Category.Hardware.Memory.MemorySlot": {
                "description": "",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "status": {
                        "description": "",
                        "type": "integer"
                    },
                    "created": {
                        "description": "",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated": {
                        "description": "",
                        "type": "string",
                        "format": "date-time"
                    },
                    "lastAuditor": {
                        "$ref": "#/components/schemas/idoit.App.Entity.User"
                    },
                    "title": {
                        "description": "",
                        "type": "string"
                    },
                    "identity": {
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "idoit.cmdb.memory": {
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "model": {
                        "$ref": "#/components/schemas/idoit.Bundles.BasicCategoriesBundle.Entity.Category.Hardware.Memory.MemoryModel"
                    },
                    "size": {
                        "description": "",
                        "type": "integer"
                    },
                    "sizeUnit": {
                        "$ref": "#/components/schemas/idoit.Bundles.DataBundle.Entity.Property.MemoryUnit"
                    },
                    "slot": {
                        "$ref": "#/components/schemas/idoit.Bundles.BasicCategoriesBundle.Entity.Category.Hardware.Memory.MemorySlot"
                    },
                    "type": {
                        "$ref": "#/components/schemas/idoit.Bundles.BasicCategoriesBundle.Entity.Category.Hardware.Memory.MemoryType"
                    },
                    "vendor": {
                        "$ref": "#/components/schemas/idoit.Bundles.BasicCategoriesBundle.Entity.Category.Hardware.Memory.MemoryVendor"
                    }
                },
                "type": "object"
            },
            "idoit.Bundles.BasicCategoriesBundle.Entity.Category.Hardware.Model.ModelVendor": {
                "description": "",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "status": {
                        "description": "",
                        "type": "integer"
                    },
                    "created": {
                        "description": "",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated": {
                        "description": "",
                        "type": "string",
                        "format": "date-time"
                    },
                    "lastAuditor": {
                        "$ref": "#/components/schemas/idoit.App.Entity.User"
                    },
                    "title": {
                        "description": "",
                        "type": "string"
                    },
                    "identity": {
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "idoit.Bundles.BasicCategoriesBundle.Entity.Category.Hardware.Model.KeyboardLayout": {
                "description": "",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "status": {
                        "description": "",
                        "type": "integer"
                    },
                    "created": {
                        "description": "",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated": {
                        "description": "",
                        "type": "string",
                        "format": "date-time"
                    },
                    "lastAuditor": {
                        "$ref": "#/components/schemas/idoit.App.Entity.User"
                    },
                    "title": {
                        "description": "",
                        "type": "string"
                    },
                    "identity": {
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "idoit.Bundles.BasicCategoriesBundle.Entity.Category.Hardware.Model.ModelType": {
                "description": "",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "status": {
                        "description": "",
                        "type": "integer"
                    },
                    "created": {
                        "description": "",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated": {
                        "description": "",
                        "type": "string",
                        "format": "date-time"
                    },
                    "lastAuditor": {
                        "$ref": "#/components/schemas/idoit.App.Entity.User"
                    },
                    "title": {
                        "description": "",
                        "type": "string"
                    },
                    "identity": {
                        "description": "",
                        "type": "string"
                    },
                    "modelVendor": {
                        "$ref": "#/components/schemas/idoit.Bundles.BasicCategoriesBundle.Entity.Category.Hardware.Model.ModelVendor"
                    }
                }
            },
            "idoit.cmdb.model": {
                "properties": {
                    "firmware": {
                        "description": "",
                        "type": "string"
                    },
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "keyboardLayout": {
                        "$ref": "#/components/schemas/idoit.Bundles.BasicCategoriesBundle.Entity.Category.Hardware.Model.KeyboardLayout"
                    },
                    "model": {
                        "$ref": "#/components/schemas/idoit.Bundles.BasicCategoriesBundle.Entity.Category.Hardware.Model.ModelType"
                    },
                    "portable": {
                        "description": "",
                        "type": "integer"
                    },
                    "productId": {
                        "description": "",
                        "type": "string"
                    },
                    "serialNumber": {
                        "description": "",
                        "type": "string"
                    },
                    "serviceTag": {
                        "description": "",
                        "type": "string"
                    },
                    "vendor": {
                        "$ref": "#/components/schemas/idoit.Bundles.BasicCategoriesBundle.Entity.Category.Hardware.Model.ModelVendor"
                    }
                },
                "type": "object"
            },
            "idoit.cmdb.network_definition": {
                "properties": {
                    "address": {
                        "description": "",
                        "type": "string"
                    },
                    "addressLong": {
                        "description": "",
                        "type": "string"
                    },
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "size": {
                        "description": "",
                        "type": "number"
                    },
                    "subnetmask": {
                        "description": "",
                        "type": "integer"
                    },
                    "type": {
                        "description": "",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "idoit.cmdb.object_ip": {
                "properties": {
                    "address": {
                        "description": "",
                        "type": "string"
                    },
                    "addressLong": {
                        "description": "",
                        "type": "string"
                    },
                    "createNetwork": {
                        "description": "",
                        "type": "boolean"
                    },
                    "free": {
                        "description": "",
                        "type": "boolean"
                    },
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "object": {
                        "$ref": "#/components/schemas/idoit.Bundles.DataBundle.Entity.IdoitObject"
                    },
                    "subnetmask": {
                        "description": "",
                        "type": "integer"
                    },
                    "type": {
                        "description": "",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "idoit.cmdb.persongroupmembers": {
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "object": {
                        "$ref": "#/components/schemas/idoit.Bundles.DataBundle.Entity.IdoitObject"
                    }
                },
                "type": "object"
            },
            "idoit.cmdb.persongroups": {
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "personGroup": {
                        "$ref": "#/components/schemas/idoit.Bundles.DataBundle.Entity.IdoitObject"
                    }
                },
                "type": "object"
            },
            "idoit.Bundles.BasicCategoriesBundle.Entity.Category.Hardware.Printer.PrinterType": {
                "description": "",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "status": {
                        "description": "",
                        "type": "integer"
                    },
                    "created": {
                        "description": "",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated": {
                        "description": "",
                        "type": "string",
                        "format": "date-time"
                    },
                    "lastAuditor": {
                        "$ref": "#/components/schemas/idoit.App.Entity.User"
                    },
                    "title": {
                        "description": "",
                        "type": "string"
                    },
                    "identity": {
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "idoit.Bundles.BasicCategoriesBundle.Entity.Category.Hardware.Printer.PrinterPaperFormat": {
                "description": "",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "status": {
                        "description": "",
                        "type": "integer"
                    },
                    "created": {
                        "description": "",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated": {
                        "description": "",
                        "type": "string",
                        "format": "date-time"
                    },
                    "lastAuditor": {
                        "$ref": "#/components/schemas/idoit.App.Entity.User"
                    },
                    "title": {
                        "description": "",
                        "type": "string"
                    },
                    "identity": {
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "idoit.Bundles.BasicCategoriesBundle.Entity.Category.Hardware.Printer.PrinterFeatures": {
                "description": "",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "status": {
                        "description": "",
                        "type": "integer"
                    },
                    "created": {
                        "description": "",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated": {
                        "description": "",
                        "type": "string",
                        "format": "date-time"
                    },
                    "lastAuditor": {
                        "$ref": "#/components/schemas/idoit.App.Entity.User"
                    },
                    "title": {
                        "description": "",
                        "type": "string"
                    },
                    "identity": {
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "idoit.cmdb.printer": {
                "properties": {
                    "color": {
                        "description": "",
                        "type": "integer"
                    },
                    "duplex": {
                        "description": "",
                        "type": "integer"
                    },
                    "features": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/idoit.Bundles.BasicCategoriesBundle.Entity.Category.Hardware.Printer.PrinterFeatures"
                        }
                    },
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "paperFormat": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/idoit.Bundles.BasicCategoriesBundle.Entity.Category.Hardware.Printer.PrinterPaperFormat"
                        }
                    },
                    "type": {
                        "$ref": "#/components/schemas/idoit.Bundles.BasicCategoriesBundle.Entity.Category.Hardware.Printer.PrinterType"
                    }
                },
                "type": "object"
            },
            "idoit.Bundles.BasicCategoriesBundle.Entity.Category.Information.Room.RoomPurpose": {
                "description": "",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "status": {
                        "description": "",
                        "type": "integer"
                    },
                    "created": {
                        "description": "",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated": {
                        "description": "",
                        "type": "string",
                        "format": "date-time"
                    },
                    "lastAuditor": {
                        "$ref": "#/components/schemas/idoit.App.Entity.User"
                    },
                    "title": {
                        "description": "",
                        "type": "string"
                    },
                    "identity": {
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "idoit.cmdb.room": {
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "purpose": {
                        "$ref": "#/components/schemas/idoit.Bundles.BasicCategoriesBundle.Entity.Category.Information.Room.RoomPurpose"
                    },
                    "roomNumber": {
                        "description": "",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "idoit.Bundles.BasicCategoriesBundle.Entity.Category.Hardware.Sound.SoundVendor": {
                "description": "",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "status": {
                        "description": "",
                        "type": "integer"
                    },
                    "created": {
                        "description": "",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated": {
                        "description": "",
                        "type": "string",
                        "format": "date-time"
                    },
                    "lastAuditor": {
                        "$ref": "#/components/schemas/idoit.App.Entity.User"
                    },
                    "title": {
                        "description": "",
                        "type": "string"
                    },
                    "identity": {
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "idoit.Bundles.BasicCategoriesBundle.Entity.Category.Hardware.Sound.SoundModel": {
                "description": "",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "status": {
                        "description": "",
                        "type": "integer"
                    },
                    "created": {
                        "description": "",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated": {
                        "description": "",
                        "type": "string",
                        "format": "date-time"
                    },
                    "lastAuditor": {
                        "$ref": "#/components/schemas/idoit.App.Entity.User"
                    },
                    "title": {
                        "description": "",
                        "type": "string"
                    },
                    "identity": {
                        "description": "",
                        "type": "string"
                    },
                    "soundVendor": {
                        "$ref": "#/components/schemas/idoit.Bundles.BasicCategoriesBundle.Entity.Category.Hardware.Sound.SoundVendor"
                    }
                }
            },
            "idoit.Bundles.BasicCategoriesBundle.Entity.Category.Hardware.Sound.SoundInput": {
                "description": "",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "status": {
                        "description": "",
                        "type": "integer"
                    },
                    "created": {
                        "description": "",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated": {
                        "description": "",
                        "type": "string",
                        "format": "date-time"
                    },
                    "lastAuditor": {
                        "$ref": "#/components/schemas/idoit.App.Entity.User"
                    },
                    "title": {
                        "description": "",
                        "type": "string"
                    },
                    "identity": {
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "idoit.Bundles.BasicCategoriesBundle.Entity.Category.Hardware.Sound.SoundOutput": {
                "description": "",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "status": {
                        "description": "",
                        "type": "integer"
                    },
                    "created": {
                        "description": "",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated": {
                        "description": "",
                        "type": "string",
                        "format": "date-time"
                    },
                    "lastAuditor": {
                        "$ref": "#/components/schemas/idoit.App.Entity.User"
                    },
                    "title": {
                        "description": "",
                        "type": "string"
                    },
                    "identity": {
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "idoit.cmdb.sound": {
                "properties": {
                    "firmwareVersion": {
                        "description": "",
                        "type": "string"
                    },
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "input": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/idoit.Bundles.BasicCategoriesBundle.Entity.Category.Hardware.Sound.SoundInput"
                        }
                    },
                    "model": {
                        "$ref": "#/components/schemas/idoit.Bundles.BasicCategoriesBundle.Entity.Category.Hardware.Sound.SoundModel"
                    },
                    "output": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/idoit.Bundles.BasicCategoriesBundle.Entity.Category.Hardware.Sound.SoundOutput"
                        }
                    },
                    "vendor": {
                        "$ref": "#/components/schemas/idoit.Bundles.BasicCategoriesBundle.Entity.Category.Hardware.Sound.SoundVendor"
                    }
                },
                "type": "object"
            },
            "idoit.Bundles.BasicCategoriesBundle.Entity.Category.Hardware.StorageControllers.ControllersVendor": {
                "description": "",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "status": {
                        "description": "",
                        "type": "integer"
                    },
                    "created": {
                        "description": "",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated": {
                        "description": "",
                        "type": "string",
                        "format": "date-time"
                    },
                    "lastAuditor": {
                        "$ref": "#/components/schemas/idoit.App.Entity.User"
                    },
                    "title": {
                        "description": "",
                        "type": "string"
                    },
                    "identity": {
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "idoit.Bundles.BasicCategoriesBundle.Entity.Category.Hardware.StorageControllers.ControllersModel": {
                "description": "",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "status": {
                        "description": "",
                        "type": "integer"
                    },
                    "created": {
                        "description": "",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated": {
                        "description": "",
                        "type": "string",
                        "format": "date-time"
                    },
                    "lastAuditor": {
                        "$ref": "#/components/schemas/idoit.App.Entity.User"
                    },
                    "title": {
                        "description": "",
                        "type": "string"
                    },
                    "identity": {
                        "description": "",
                        "type": "string"
                    },
                    "controllerVendor": {
                        "$ref": "#/components/schemas/idoit.Bundles.BasicCategoriesBundle.Entity.Category.Hardware.StorageControllers.ControllersVendor"
                    }
                }
            },
            "idoit.Bundles.BasicCategoriesBundle.Entity.Category.Hardware.StorageControllers.ControllersOutput": {
                "description": "",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "status": {
                        "description": "",
                        "type": "integer"
                    },
                    "created": {
                        "description": "",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated": {
                        "description": "",
                        "type": "string",
                        "format": "date-time"
                    },
                    "lastAuditor": {
                        "$ref": "#/components/schemas/idoit.App.Entity.User"
                    },
                    "title": {
                        "description": "",
                        "type": "string"
                    },
                    "identity": {
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "idoit.Bundles.BasicCategoriesBundle.Entity.Category.Hardware.StorageControllers.ControllersMode": {
                "description": "",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "status": {
                        "description": "",
                        "type": "integer"
                    },
                    "created": {
                        "description": "",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated": {
                        "description": "",
                        "type": "string",
                        "format": "date-time"
                    },
                    "lastAuditor": {
                        "$ref": "#/components/schemas/idoit.App.Entity.User"
                    },
                    "title": {
                        "description": "",
                        "type": "string"
                    },
                    "identity": {
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "idoit.cmdb.storagecontrollers": {
                "properties": {
                    "firmware": {
                        "description": "",
                        "type": "string"
                    },
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "model": {
                        "$ref": "#/components/schemas/idoit.Bundles.BasicCategoriesBundle.Entity.Category.Hardware.StorageControllers.ControllersModel"
                    },
                    "operatingModes": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/idoit.Bundles.BasicCategoriesBundle.Entity.Category.Hardware.StorageControllers.ControllersMode"
                        }
                    },
                    "outputs": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/idoit.Bundles.BasicCategoriesBundle.Entity.Category.Hardware.StorageControllers.ControllersOutput"
                        }
                    },
                    "vendor": {
                        "$ref": "#/components/schemas/idoit.Bundles.BasicCategoriesBundle.Entity.Category.Hardware.StorageControllers.ControllersVendor"
                    }
                },
                "type": "object"
            },
            "idoit.Bundles.BasicCategoriesBundle.Entity.Category.Hardware.StorageDevices.StorageDevicesDriveType": {
                "description": "",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "status": {
                        "description": "",
                        "type": "integer"
                    },
                    "created": {
                        "description": "",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated": {
                        "description": "",
                        "type": "string",
                        "format": "date-time"
                    },
                    "lastAuditor": {
                        "$ref": "#/components/schemas/idoit.App.Entity.User"
                    },
                    "title": {
                        "description": "",
                        "type": "string"
                    },
                    "identity": {
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "idoit.Bundles.BasicCategoriesBundle.Entity.Category.Hardware.StorageControllers": {
                "description": "",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "object": {
                        "$ref": "#/components/schemas/idoit.Bundles.DataBundle.Entity.IdoitObject"
                    },
                    "vendor": {
                        "$ref": "#/components/schemas/idoit.Bundles.BasicCategoriesBundle.Entity.Category.Hardware.StorageControllers.ControllersVendor"
                    },
                    "model": {
                        "$ref": "#/components/schemas/idoit.Bundles.BasicCategoriesBundle.Entity.Category.Hardware.StorageControllers.ControllersModel"
                    },
                    "outputs": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/idoit.Bundles.BasicCategoriesBundle.Entity.Category.Hardware.StorageControllers.ControllersOutput"
                        }
                    },
                    "operatingModes": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/idoit.Bundles.BasicCategoriesBundle.Entity.Category.Hardware.StorageControllers.ControllersMode"
                        }
                    },
                    "firmware": {
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "idoit.Bundles.BasicCategoriesBundle.Entity.Category.Hardware.StorageDevices.StorageDevicesConnectionType": {
                "description": "",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "status": {
                        "description": "",
                        "type": "integer"
                    },
                    "created": {
                        "description": "",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated": {
                        "description": "",
                        "type": "string",
                        "format": "date-time"
                    },
                    "lastAuditor": {
                        "$ref": "#/components/schemas/idoit.App.Entity.User"
                    },
                    "title": {
                        "description": "",
                        "type": "string"
                    },
                    "identity": {
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "idoit.Bundles.BasicCategoriesBundle.Entity.Category.Hardware.StorageDevices.StorageDevicesVendor": {
                "description": "",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "status": {
                        "description": "",
                        "type": "integer"
                    },
                    "created": {
                        "description": "",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated": {
                        "description": "",
                        "type": "string",
                        "format": "date-time"
                    },
                    "lastAuditor": {
                        "$ref": "#/components/schemas/idoit.App.Entity.User"
                    },
                    "title": {
                        "description": "",
                        "type": "string"
                    },
                    "identity": {
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "idoit.Bundles.BasicCategoriesBundle.Entity.Category.Hardware.StorageDevices.StorageDevicesModel": {
                "description": "",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "status": {
                        "description": "",
                        "type": "integer"
                    },
                    "created": {
                        "description": "",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated": {
                        "description": "",
                        "type": "string",
                        "format": "date-time"
                    },
                    "lastAuditor": {
                        "$ref": "#/components/schemas/idoit.App.Entity.User"
                    },
                    "title": {
                        "description": "",
                        "type": "string"
                    },
                    "identity": {
                        "description": "",
                        "type": "string"
                    },
                    "storageDevicesVendor": {
                        "$ref": "#/components/schemas/idoit.Bundles.BasicCategoriesBundle.Entity.Category.Hardware.StorageDevices.StorageDevicesVendor"
                    }
                }
            },
            "idoit.cmdb.storagedevices": {
                "properties": {
                    "connectionType": {
                        "$ref": "#/components/schemas/idoit.Bundles.BasicCategoriesBundle.Entity.Category.Hardware.StorageDevices.StorageDevicesConnectionType"
                    },
                    "controller": {
                        "$ref": "#/components/schemas/idoit.Bundles.BasicCategoriesBundle.Entity.Category.Hardware.StorageControllers"
                    },
                    "driveType": {
                        "$ref": "#/components/schemas/idoit.Bundles.BasicCategoriesBundle.Entity.Category.Hardware.StorageDevices.StorageDevicesDriveType"
                    },
                    "firmware": {
                        "description": "",
                        "type": "string"
                    },
                    "hotspare": {
                        "description": "",
                        "type": "integer"
                    },
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "model": {
                        "$ref": "#/components/schemas/idoit.Bundles.BasicCategoriesBundle.Entity.Category.Hardware.StorageDevices.StorageDevicesModel"
                    },
                    "serial": {
                        "description": "",
                        "type": "string"
                    },
                    "size": {
                        "description": "",
                        "type": "number"
                    },
                    "sizeUnit": {
                        "$ref": "#/components/schemas/idoit.Bundles.DataBundle.Entity.Property.MemoryUnit"
                    },
                    "title": {
                        "description": "",
                        "type": "string"
                    },
                    "vendor": {
                        "$ref": "#/components/schemas/idoit.Bundles.BasicCategoriesBundle.Entity.Category.Hardware.StorageDevices.StorageDevicesVendor"
                    }
                },
                "type": "object"
            },
            "idoit.Bundles.BasicCategoriesBundle.Entity.Category.Hardware.StorageDevices": {
                "description": "",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "object": {
                        "$ref": "#/components/schemas/idoit.Bundles.DataBundle.Entity.IdoitObject"
                    },
                    "title": {
                        "description": "",
                        "type": "string"
                    },
                    "driveType": {
                        "$ref": "#/components/schemas/idoit.Bundles.BasicCategoriesBundle.Entity.Category.Hardware.StorageDevices.StorageDevicesDriveType"
                    },
                    "size": {
                        "description": "",
                        "type": "number"
                    },
                    "sizeUnit": {
                        "$ref": "#/components/schemas/idoit.Bundles.DataBundle.Entity.Property.MemoryUnit"
                    },
                    "controller": {
                        "$ref": "#/components/schemas/idoit.Bundles.BasicCategoriesBundle.Entity.Category.Hardware.StorageControllers"
                    },
                    "connectionType": {
                        "$ref": "#/components/schemas/idoit.Bundles.BasicCategoriesBundle.Entity.Category.Hardware.StorageDevices.StorageDevicesConnectionType"
                    },
                    "hotspare": {
                        "description": "",
                        "type": "integer"
                    },
                    "vendor": {
                        "$ref": "#/components/schemas/idoit.Bundles.BasicCategoriesBundle.Entity.Category.Hardware.StorageDevices.StorageDevicesVendor"
                    },
                    "model": {
                        "$ref": "#/components/schemas/idoit.Bundles.BasicCategoriesBundle.Entity.Category.Hardware.StorageDevices.StorageDevicesModel"
                    },
                    "serial": {
                        "description": "",
                        "type": "string"
                    },
                    "firmware": {
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "idoit.Bundles.BasicCategoriesBundle.Entity.Category.Hardware.StorageVolumes.StorageVolumesFileSystem": {
                "description": "",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "status": {
                        "description": "",
                        "type": "integer"
                    },
                    "created": {
                        "description": "",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated": {
                        "description": "",
                        "type": "string",
                        "format": "date-time"
                    },
                    "lastAuditor": {
                        "$ref": "#/components/schemas/idoit.App.Entity.User"
                    },
                    "title": {
                        "description": "",
                        "type": "string"
                    },
                    "identity": {
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "idoit.cmdb.storagevolumes": {
                "properties": {
                    "device": {
                        "$ref": "#/components/schemas/idoit.Bundles.BasicCategoriesBundle.Entity.Category.Hardware.StorageDevices"
                    },
                    "fileSystem": {
                        "$ref": "#/components/schemas/idoit.Bundles.BasicCategoriesBundle.Entity.Category.Hardware.StorageVolumes.StorageVolumesFileSystem"
                    },
                    "hotspare": {
                        "description": "",
                        "type": "integer"
                    },
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "mountPoint": {
                        "description": "",
                        "type": "string"
                    },
                    "size": {
                        "description": "",
                        "type": "number"
                    },
                    "sizeUnit": {
                        "$ref": "#/components/schemas/idoit.Bundles.DataBundle.Entity.Property.MemoryUnit"
                    },
                    "systemDrive": {
                        "description": "",
                        "type": "integer"
                    },
                    "volumeName": {
                        "description": "",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "idoit.cmdb.warranty": {
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "vendorContact": {
                        "$ref": "#/components/schemas/idoit.Bundles.DataBundle.Entity.IdoitObject"
                    },
                    "warrantyEnds": {
                        "description": "",
                        "type": "string",
                        "format": "date-time"
                    },
                    "warrantyPeriodAmount": {
                        "description": "",
                        "type": "integer"
                    },
                    "warrantyPeriodUnit": {
                        "$ref": "#/components/schemas/idoit.Bundles.DataBundle.Entity.Property.Period"
                    },
                    "warrantyStartDate": {
                        "description": "",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "idoit.Bundles.BasicCategoriesBundle.Entity.Category.Hardware.Wifinetworks.WifinetworksGeneration": {
                "description": "",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "status": {
                        "description": "",
                        "type": "integer"
                    },
                    "created": {
                        "description": "",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated": {
                        "description": "",
                        "type": "string",
                        "format": "date-time"
                    },
                    "lastAuditor": {
                        "$ref": "#/components/schemas/idoit.App.Entity.User"
                    },
                    "title": {
                        "description": "",
                        "type": "string"
                    },
                    "identity": {
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "idoit.Bundles.BasicCategoriesBundle.Entity.Category.Hardware.Wifinetworks.WifinetworksMode": {
                "description": "",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "status": {
                        "description": "",
                        "type": "integer"
                    },
                    "created": {
                        "description": "",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated": {
                        "description": "",
                        "type": "string",
                        "format": "date-time"
                    },
                    "lastAuditor": {
                        "$ref": "#/components/schemas/idoit.App.Entity.User"
                    },
                    "title": {
                        "description": "",
                        "type": "string"
                    },
                    "identity": {
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "idoit.Bundles.BasicCategoriesBundle.Entity.Category.Hardware.Wifinetworks.WifinetworksEncryption": {
                "description": "",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "status": {
                        "description": "",
                        "type": "integer"
                    },
                    "created": {
                        "description": "",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated": {
                        "description": "",
                        "type": "string",
                        "format": "date-time"
                    },
                    "lastAuditor": {
                        "$ref": "#/components/schemas/idoit.App.Entity.User"
                    },
                    "title": {
                        "description": "",
                        "type": "string"
                    },
                    "identity": {
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "idoit.Bundles.BasicCategoriesBundle.Entity.Category.Hardware.Wifinetworks.WifinetworksCipher": {
                "description": "",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "status": {
                        "description": "",
                        "type": "integer"
                    },
                    "created": {
                        "description": "",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated": {
                        "description": "",
                        "type": "string",
                        "format": "date-time"
                    },
                    "lastAuditor": {
                        "$ref": "#/components/schemas/idoit.App.Entity.User"
                    },
                    "title": {
                        "description": "",
                        "type": "string"
                    },
                    "identity": {
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "idoit.Bundles.BasicCategoriesBundle.Entity.Category.Hardware.Wifinetworks.WifinetworksBand": {
                "description": "",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "status": {
                        "description": "",
                        "type": "integer"
                    },
                    "created": {
                        "description": "",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated": {
                        "description": "",
                        "type": "string",
                        "format": "date-time"
                    },
                    "lastAuditor": {
                        "$ref": "#/components/schemas/idoit.App.Entity.User"
                    },
                    "title": {
                        "description": "",
                        "type": "string"
                    },
                    "identity": {
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "idoit.Bundles.BasicCategoriesBundle.Entity.Category.Hardware.Wifinetworks.WifinetworksChannel": {
                "description": "",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "status": {
                        "description": "",
                        "type": "integer"
                    },
                    "created": {
                        "description": "",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated": {
                        "description": "",
                        "type": "string",
                        "format": "date-time"
                    },
                    "lastAuditor": {
                        "$ref": "#/components/schemas/idoit.App.Entity.User"
                    },
                    "title": {
                        "description": "",
                        "type": "string"
                    },
                    "identity": {
                        "description": "",
                        "type": "string"
                    },
                    "band": {
                        "$ref": "#/components/schemas/idoit.Bundles.BasicCategoriesBundle.Entity.Category.Hardware.Wifinetworks.WifinetworksBand"
                    }
                }
            },
            "idoit.Bundles.BasicCategoriesBundle.Entity.Category.Hardware.Wifinetworks.WifinetworksBandwidth": {
                "description": "",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "status": {
                        "description": "",
                        "type": "integer"
                    },
                    "created": {
                        "description": "",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated": {
                        "description": "",
                        "type": "string",
                        "format": "date-time"
                    },
                    "lastAuditor": {
                        "$ref": "#/components/schemas/idoit.App.Entity.User"
                    },
                    "title": {
                        "description": "",
                        "type": "string"
                    },
                    "identity": {
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "idoit.Bundles.BasicCategoriesBundle.Entity.Category.Hardware.Wifinetworks.WifinetworksTransmitPower": {
                "description": "",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "status": {
                        "description": "",
                        "type": "integer"
                    },
                    "created": {
                        "description": "",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated": {
                        "description": "",
                        "type": "string",
                        "format": "date-time"
                    },
                    "lastAuditor": {
                        "$ref": "#/components/schemas/idoit.App.Entity.User"
                    },
                    "title": {
                        "description": "",
                        "type": "string"
                    },
                    "identity": {
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "idoit.Bundles.BasicCategoriesBundle.Entity.Category.Hardware.Wifinetworks.WifinetworksAllowedMac": {
                "description": "",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "status": {
                        "description": "",
                        "type": "integer"
                    },
                    "created": {
                        "description": "",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated": {
                        "description": "",
                        "type": "string",
                        "format": "date-time"
                    },
                    "lastAuditor": {
                        "$ref": "#/components/schemas/idoit.App.Entity.User"
                    },
                    "title": {
                        "description": "",
                        "type": "string"
                    },
                    "identity": {
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "idoit.cmdb.wifinetworks": {
                "properties": {
                    "allowedMacAddresses": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/idoit.Bundles.BasicCategoriesBundle.Entity.Category.Hardware.Wifinetworks.WifinetworksAllowedMac"
                        }
                    },
                    "band": {
                        "$ref": "#/components/schemas/idoit.Bundles.BasicCategoriesBundle.Entity.Category.Hardware.Wifinetworks.WifinetworksBand"
                    },
                    "bandwidth": {
                        "$ref": "#/components/schemas/idoit.Bundles.BasicCategoriesBundle.Entity.Category.Hardware.Wifinetworks.WifinetworksBandwidth"
                    },
                    "broadcastSsid": {
                        "description": "",
                        "type": "integer"
                    },
                    "channel": {
                        "$ref": "#/components/schemas/idoit.Bundles.BasicCategoriesBundle.Entity.Category.Hardware.Wifinetworks.WifinetworksChannel"
                    },
                    "cipher": {
                        "$ref": "#/components/schemas/idoit.Bundles.BasicCategoriesBundle.Entity.Category.Hardware.Wifinetworks.WifinetworksCipher"
                    },
                    "enabled": {
                        "description": "",
                        "type": "integer"
                    },
                    "encryption": {
                        "$ref": "#/components/schemas/idoit.Bundles.BasicCategoriesBundle.Entity.Category.Hardware.Wifinetworks.WifinetworksEncryption"
                    },
                    "generation": {
                        "$ref": "#/components/schemas/idoit.Bundles.BasicCategoriesBundle.Entity.Category.Hardware.Wifinetworks.WifinetworksGeneration"
                    },
                    "id": {
                        "description": "",
                        "type": "string"
                    },
                    "mode": {
                        "$ref": "#/components/schemas/idoit.Bundles.BasicCategoriesBundle.Entity.Category.Hardware.Wifinetworks.WifinetworksMode"
                    },
                    "passphrase": {
                        "description": "",
                        "type": "string"
                    },
                    "ssid": {
                        "description": "",
                        "type": "string"
                    },
                    "transmitPower": {
                        "$ref": "#/components/schemas/idoit.Bundles.BasicCategoriesBundle.Entity.Category.Hardware.Wifinetworks.WifinetworksTransmitPower"
                    }
                },
                "type": "object"
            },
            "idoit.category.data": {
                "type": "object",
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/idoit.basic.logset"
                    },
                    {
                        "$ref": "#/components/schemas/idoit.basic.search"
                    },
                    {
                        "$ref": "#/components/schemas/idoit.cmdb.access"
                    },
                    {
                        "$ref": "#/components/schemas/idoit.cmdb.accounting"
                    },
                    {
                        "$ref": "#/components/schemas/idoit.cmdb.address"
                    },
                    {
                        "$ref": "#/components/schemas/idoit.cmdb.contactlinkedobjects"
                    },
                    {
                        "$ref": "#/components/schemas/idoit.cmdb.contacts"
                    },
                    {
                        "$ref": "#/components/schemas/idoit.cmdb.contract"
                    },
                    {
                        "$ref": "#/components/schemas/idoit.cmdb.contractlinkedobjects"
                    },
                    {
                        "$ref": "#/components/schemas/idoit.cmdb.contracts"
                    },
                    {
                        "$ref": "#/components/schemas/idoit.cmdb.cpu"
                    },
                    {
                        "$ref": "#/components/schemas/idoit.cmdb.display"
                    },
                    {
                        "$ref": "#/components/schemas/idoit.cmdb.employee"
                    },
                    {
                        "$ref": "#/components/schemas/idoit.cmdb.employees"
                    },
                    {
                        "$ref": "#/components/schemas/idoit.cmdb.formfactor"
                    },
                    {
                        "$ref": "#/components/schemas/idoit.cmdb.general"
                    },
                    {
                        "$ref": "#/components/schemas/idoit.cmdb.graphics"
                    },
                    {
                        "$ref": "#/components/schemas/idoit.cmdb.invoice"
                    },
                    {
                        "$ref": "#/components/schemas/idoit.cmdb.ip_networking"
                    },
                    {
                        "$ref": "#/components/schemas/idoit.cmdb.location"
                    },
                    {
                        "$ref": "#/components/schemas/idoit.cmdb.locationlinkedobjects"
                    },
                    {
                        "$ref": "#/components/schemas/idoit.cmdb.memory"
                    },
                    {
                        "$ref": "#/components/schemas/idoit.cmdb.model"
                    },
                    {
                        "$ref": "#/components/schemas/idoit.cmdb.network_definition"
                    },
                    {
                        "$ref": "#/components/schemas/idoit.cmdb.object_ip"
                    },
                    {
                        "$ref": "#/components/schemas/idoit.cmdb.persongroupmembers"
                    },
                    {
                        "$ref": "#/components/schemas/idoit.cmdb.persongroups"
                    },
                    {
                        "$ref": "#/components/schemas/idoit.cmdb.printer"
                    },
                    {
                        "$ref": "#/components/schemas/idoit.cmdb.room"
                    },
                    {
                        "$ref": "#/components/schemas/idoit.cmdb.sound"
                    },
                    {
                        "$ref": "#/components/schemas/idoit.cmdb.storagecontrollers"
                    },
                    {
                        "$ref": "#/components/schemas/idoit.cmdb.storagedevices"
                    },
                    {
                        "$ref": "#/components/schemas/idoit.cmdb.storagevolumes"
                    },
                    {
                        "$ref": "#/components/schemas/idoit.cmdb.warranty"
                    },
                    {
                        "$ref": "#/components/schemas/idoit.cmdb.wifinetworks"
                    }
                ]
            }
        },
        "responses": {
            "201": {
                "description": "Success",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "400": {
                "description": "Bad request",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/idoit.Bundles.ApiBundle.Exception.MalformedRequestException"
                        }
                    }
                }
            },
            "200": {
                "description": "Success",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "parameters": {},
        "requestBodies": {},
        "securitySchemes": {
            "ApiTokenAuthentication": {
                "type": "apiKey",
                "name": "X-API-TOKEN",
                "in": "header"
            }
        }
    },
    "security": [
        {
            "ApiTokenAuthentication": []
        }
    ]
}
